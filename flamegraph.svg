<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="3557"><g><title>`0x7FFB1E25BF40 (4 samples, 0.11%)</title><rect x="0.0000%" y="869" width="0.1125%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="879.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::cli::parse_opts (1 samples, 0.03%)</title><rect x="0.1125%" y="581" width="0.0281%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="1"/><text x="0.3625%" y="591.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::cli::parse_opts_impl (1 samples, 0.03%)</title><rect x="0.1125%" y="565" width="0.0281%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="1"/><text x="0.3625%" y="575.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`getopts::Matches::opt_present (1 samples, 0.03%)</title><rect x="0.1125%" y="549" width="0.0281%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="1"/><text x="0.3625%" y="559.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.1125%" y="533" width="0.0281%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="0.3625%" y="543.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`getopts::Matches::opt_vals (1 samples, 0.03%)</title><rect x="0.1125%" y="517" width="0.0281%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="1"/><text x="0.3625%" y="527.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`getopts::find_opt (1 samples, 0.03%)</title><rect x="0.1125%" y="501" width="0.0281%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="0.3625%" y="511.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::collections::hash::map::HashMap::remove (1 samples, 0.03%)</title><rect x="0.1406%" y="549" width="0.0281%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="0.3906%" y="559.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`hashbrown::map::HashMap::remove&lt;test::types::TestId,test::run_tests::RunningTest,core::hash::BuildHasherDefault&lt;std::hash::random::DefaultHasher&gt;,alloc::alloc::Global,test::types::TestId&gt; (1 samples, 0.03%)</title><rect x="0.1406%" y="533" width="0.0281%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="1"/><text x="0.3906%" y="543.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`invoke_main() (3 samples, 0.08%)</title><rect x="0.1125%" y="821" width="0.0843%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="3"/><text x="0.3625%" y="831.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`main (3 samples, 0.08%)</title><rect x="0.1125%" y="805" width="0.0843%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="3"/><text x="0.3625%" y="815.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::rt::lang_start_internal (3 samples, 0.08%)</title><rect x="0.1125%" y="789" width="0.0843%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="3"/><text x="0.3625%" y="799.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::panic::catch_unwind (3 samples, 0.08%)</title><rect x="0.1125%" y="773" width="0.0843%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="3"/><text x="0.3625%" y="783.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::panicking::try (3 samples, 0.08%)</title><rect x="0.1125%" y="757" width="0.0843%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="3"/><text x="0.3625%" y="767.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::panicking::try::do_call (3 samples, 0.08%)</title><rect x="0.1125%" y="741" width="0.0843%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="3"/><text x="0.3625%" y="751.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::rt::lang_start_internal::closure$1 (3 samples, 0.08%)</title><rect x="0.1125%" y="725" width="0.0843%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="3"/><text x="0.3625%" y="735.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::panic::catch_unwind (3 samples, 0.08%)</title><rect x="0.1125%" y="709" width="0.0843%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="3"/><text x="0.3625%" y="719.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (3 samples, 0.08%)</title><rect x="0.1125%" y="693" width="0.0843%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="3"/><text x="0.3625%" y="703.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (3 samples, 0.08%)</title><rect x="0.1125%" y="677" width="0.0843%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="3"/><text x="0.3625%" y="687.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::test_main_static (3 samples, 0.08%)</title><rect x="0.1125%" y="661" width="0.0843%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="3"/><text x="0.3625%" y="671.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place (3 samples, 0.08%)</title><rect x="0.1125%" y="645" width="0.0843%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="3"/><text x="0.3625%" y="655.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$25::drop (3 samples, 0.08%)</title><rect x="0.1125%" y="629" width="0.0843%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="3"/><text x="0.3625%" y="639.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place (3 samples, 0.08%)</title><rect x="0.1125%" y="613" width="0.0843%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="3"/><text x="0.3625%" y="623.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::test_main (3 samples, 0.08%)</title><rect x="0.1125%" y="597" width="0.0843%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="3"/><text x="0.3625%" y="607.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::console::run_tests_console (2 samples, 0.06%)</title><rect x="0.1406%" y="581" width="0.0562%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="2"/><text x="0.3906%" y="591.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::run_tests (2 samples, 0.06%)</title><rect x="0.1406%" y="565" width="0.0562%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="2"/><text x="0.3906%" y="575.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::console::run_tests_console::closure$2 (1 samples, 0.03%)</title><rect x="0.1687%" y="549" width="0.0281%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="0.4187%" y="559.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::console::on_test_event (1 samples, 0.03%)</title><rect x="0.1687%" y="533" width="0.0281%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="0.4187%" y="543.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::formatters::pretty::impl$1::write_run_start&lt;std::io::stdio::Stdout&gt; (1 samples, 0.03%)</title><rect x="0.1687%" y="517" width="0.0281%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="1"/><text x="0.4187%" y="527.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::formatters::pretty::PrettyFormatter::write_plain (1 samples, 0.03%)</title><rect x="0.1687%" y="501" width="0.0281%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="1"/><text x="0.4187%" y="511.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::io::Write::write_all&lt;enum2$&lt;test::console::OutputLocation&lt;std::io::stdio::Stdout&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="0.1687%" y="485" width="0.0281%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="1"/><text x="0.4187%" y="495.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::io::stdio::impl$15::write (1 samples, 0.03%)</title><rect x="0.1687%" y="469" width="0.0281%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="1"/><text x="0.4187%" y="479.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::io::stdio::impl$16::write (1 samples, 0.03%)</title><rect x="0.1687%" y="453" width="0.0281%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="1"/><text x="0.4187%" y="463.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::io::stdio::impl$19::write (1 samples, 0.03%)</title><rect x="0.1687%" y="437" width="0.0281%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="1"/><text x="0.4187%" y="447.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.1687%" y="421" width="0.0281%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="1"/><text x="0.4187%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.1687%" y="405" width="0.0281%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="1"/><text x="0.4187%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::cell::impl$44::drop (1 samples, 0.03%)</title><rect x="0.1687%" y="389" width="0.0281%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="1"/><text x="0.4187%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::cell::Cell::set (1 samples, 0.03%)</title><rect x="0.1687%" y="373" width="0.0281%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="1"/><text x="0.4187%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::cell::Cell::replace (1 samples, 0.03%)</title><rect x="0.1687%" y="357" width="0.0281%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="1"/><text x="0.4187%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::mem::replace (1 samples, 0.03%)</title><rect x="0.1687%" y="341" width="0.0281%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="1"/><text x="0.4187%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="0.1687%" y="325" width="0.0281%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="1"/><text x="0.4187%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::io::buffered::linewritershim::impl$1::write&lt;std::io::stdio::StdoutRaw&gt; (1 samples, 0.03%)</title><rect x="0.1687%" y="309" width="0.0281%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="1"/><text x="0.4187%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::io::stdio::impl$1::write (1 samples, 0.03%)</title><rect x="0.1687%" y="293" width="0.0281%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="1"/><text x="0.4187%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::sys::pal::windows::stdio::impl$5::write (1 samples, 0.03%)</title><rect x="0.1687%" y="277" width="0.0281%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="1"/><text x="0.4187%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::sys::pal::windows::stdio::write (1 samples, 0.03%)</title><rect x="0.1687%" y="261" width="0.0281%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="1"/><text x="0.4187%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::sys::pal::windows::stdio::write_console_utf16 (1 samples, 0.03%)</title><rect x="0.1687%" y="245" width="0.0281%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="1"/><text x="0.4187%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::sys::pal::windows::stdio::write_valid_utf8_to_console (1 samples, 0.03%)</title><rect x="0.1687%" y="229" width="0.0281%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="1"/><text x="0.4187%" y="239.50"></text></g><g><title>`0x7FFB1B46ED77 (1 samples, 0.03%)</title><rect x="0.1687%" y="213" width="0.0281%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="1"/><text x="0.4187%" y="223.50"></text></g><g><title>`0x7FFB1BEAE776 (1 samples, 0.03%)</title><rect x="0.1968%" y="821" width="0.0281%" height="15" fill="rgb(239,60,40)" fg:x="7" fg:w="1"/><text x="0.4468%" y="831.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`pre_cpp_initialization() (1 samples, 0.03%)</title><rect x="0.1968%" y="805" width="0.0281%" height="15" fill="rgb(206,27,48)" fg:x="7" fg:w="1"/><text x="0.4468%" y="815.50"></text></g><g><title>`0x7FFB1B551428 (1 samples, 0.03%)</title><rect x="0.1968%" y="789" width="0.0281%" height="15" fill="rgb(225,35,8)" fg:x="7" fg:w="1"/><text x="0.4468%" y="799.50"></text></g><g><title>`0x7FFB1B5515DB (1 samples, 0.03%)</title><rect x="0.1968%" y="773" width="0.0281%" height="15" fill="rgb(250,213,24)" fg:x="7" fg:w="1"/><text x="0.4468%" y="783.50"></text></g><g><title>`0x7FFB1E2FFC54 (1 samples, 0.03%)</title><rect x="0.1968%" y="757" width="0.0281%" height="15" fill="rgb(247,123,22)" fg:x="7" fg:w="1"/><text x="0.4468%" y="767.50"></text></g><g><title>`0x7FFB1E1A635C (1 samples, 0.03%)</title><rect x="0.2249%" y="645" width="0.0281%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="1"/><text x="0.4749%" y="655.50"></text></g><g><title>`0x7FFB1E1A6EAB (1 samples, 0.03%)</title><rect x="0.2249%" y="629" width="0.0281%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="1"/><text x="0.4749%" y="639.50"></text></g><g><title>`0x7FFB1E1A87E9 (1 samples, 0.03%)</title><rect x="0.2249%" y="613" width="0.0281%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="1"/><text x="0.4749%" y="623.50"></text></g><g><title>`0x7FFB1E2C8650 (1 samples, 0.03%)</title><rect x="0.2249%" y="597" width="0.0281%" height="15" fill="rgb(217,147,25)" fg:x="8" fg:w="1"/><text x="0.4749%" y="607.50"></text></g><g><title>`0x7FFB1E1FF0A0 (2 samples, 0.06%)</title><rect x="0.2249%" y="709" width="0.0562%" height="15" fill="rgb(247,81,37)" fg:x="8" fg:w="2"/><text x="0.4749%" y="719.50"></text></g><g><title>`0x7FFB1E1FA3B4 (2 samples, 0.06%)</title><rect x="0.2249%" y="693" width="0.0562%" height="15" fill="rgb(209,12,38)" fg:x="8" fg:w="2"/><text x="0.4749%" y="703.50"></text></g><g><title>`0x7FFB1E1FA99D (2 samples, 0.06%)</title><rect x="0.2249%" y="677" width="0.0562%" height="15" fill="rgb(227,1,9)" fg:x="8" fg:w="2"/><text x="0.4749%" y="687.50"></text></g><g><title>`0x7FFB1E1FBAEC (2 samples, 0.06%)</title><rect x="0.2249%" y="661" width="0.0562%" height="15" fill="rgb(248,47,43)" fg:x="8" fg:w="2"/><text x="0.4749%" y="671.50"></text></g><g><title>`0x7FFB1E1A63C9 (1 samples, 0.03%)</title><rect x="0.2530%" y="645" width="0.0281%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="1"/><text x="0.5030%" y="655.50"></text></g><g><title>`0x7FFB1E2007C2 (1 samples, 0.03%)</title><rect x="0.2530%" y="629" width="0.0281%" height="15" fill="rgb(210,229,1)" fg:x="9" fg:w="1"/><text x="0.5030%" y="639.50"></text></g><g><title>`0x7FFB1E20853C (1 samples, 0.03%)</title><rect x="0.2530%" y="613" width="0.0281%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="1"/><text x="0.5030%" y="623.50"></text></g><g><title>`0x7FFB1BEE00F6 (3 samples, 0.08%)</title><rect x="0.2249%" y="821" width="0.0843%" height="15" fill="rgb(234,67,33)" fg:x="8" fg:w="3"/><text x="0.4749%" y="831.50"></text></g><g><title>`0x7FFB1BEC55ED (3 samples, 0.08%)</title><rect x="0.2249%" y="805" width="0.0843%" height="15" fill="rgb(247,98,35)" fg:x="8" fg:w="3"/><text x="0.4749%" y="815.50"></text></g><g><title>`0x7FFB1BE5423B (3 samples, 0.08%)</title><rect x="0.2249%" y="789" width="0.0843%" height="15" fill="rgb(247,138,52)" fg:x="8" fg:w="3"/><text x="0.4749%" y="799.50"></text></g><g><title>`0x7FFB1BEB63F5 (3 samples, 0.08%)</title><rect x="0.2249%" y="773" width="0.0843%" height="15" fill="rgb(213,79,30)" fg:x="8" fg:w="3"/><text x="0.4749%" y="783.50"></text></g><g><title>`0x7FFB1B472446 (3 samples, 0.08%)</title><rect x="0.2249%" y="757" width="0.0843%" height="15" fill="rgb(246,177,23)" fg:x="8" fg:w="3"/><text x="0.4749%" y="767.50"></text></g><g><title>`0x7FFB1E20A650 (3 samples, 0.08%)</title><rect x="0.2249%" y="741" width="0.0843%" height="15" fill="rgb(230,62,27)" fg:x="8" fg:w="3"/><text x="0.4749%" y="751.50"></text></g><g><title>`0x7FFB1E1FED20 (3 samples, 0.08%)</title><rect x="0.2249%" y="725" width="0.0843%" height="15" fill="rgb(216,154,8)" fg:x="8" fg:w="3"/><text x="0.4749%" y="735.50"></text></g><g><title>`0x7FFB1E1FF114 (1 samples, 0.03%)</title><rect x="0.2811%" y="709" width="0.0281%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="1"/><text x="0.5311%" y="719.50"></text></g><g><title>`0x7FFB1E261603 (1 samples, 0.03%)</title><rect x="0.2811%" y="693" width="0.0281%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="0.5311%" y="703.50"></text></g><g><title>`0x7FFB1E261946 (1 samples, 0.03%)</title><rect x="0.2811%" y="677" width="0.0281%" height="15" fill="rgb(240,54,50)" fg:x="10" fg:w="1"/><text x="0.5311%" y="687.50"></text></g><g><title>`0x7FFB1E26191A (1 samples, 0.03%)</title><rect x="0.2811%" y="661" width="0.0281%" height="15" fill="rgb(233,84,52)" fg:x="10" fg:w="1"/><text x="0.5311%" y="671.50"></text></g><g><title>`0x7FFB1E1B142C (1 samples, 0.03%)</title><rect x="0.2811%" y="645" width="0.0281%" height="15" fill="rgb(207,117,47)" fg:x="10" fg:w="1"/><text x="0.5311%" y="655.50"></text></g><g><title>`0x7FFB1E1B2080 (1 samples, 0.03%)</title><rect x="0.2811%" y="629" width="0.0281%" height="15" fill="rgb(249,43,39)" fg:x="10" fg:w="1"/><text x="0.5311%" y="639.50"></text></g><g><title>`0x7FFB1C1F7A80 (1 samples, 0.03%)</title><rect x="0.2811%" y="613" width="0.0281%" height="15" fill="rgb(209,38,44)" fg:x="10" fg:w="1"/><text x="0.5311%" y="623.50"></text></g><g><title>`0x7FFB1C20DD7D (1 samples, 0.03%)</title><rect x="0.2811%" y="597" width="0.0281%" height="15" fill="rgb(236,212,23)" fg:x="10" fg:w="1"/><text x="0.5311%" y="607.50"></text></g><g><title>`0x7FFB1B52FC99 (1 samples, 0.03%)</title><rect x="0.2811%" y="581" width="0.0281%" height="15" fill="rgb(242,79,21)" fg:x="10" fg:w="1"/><text x="0.5311%" y="591.50"></text></g><g><title>`0x7FFB1E300100 (1 samples, 0.03%)</title><rect x="0.2811%" y="565" width="0.0281%" height="15" fill="rgb(211,96,35)" fg:x="10" fg:w="1"/><text x="0.5311%" y="575.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`__scrt_common_main_seh() (8 samples, 0.22%)</title><rect x="0.1125%" y="837" width="0.2249%" height="15" fill="rgb(253,215,40)" fg:x="4" fg:w="8"/><text x="0.3625%" y="847.50"></text></g><g><title>`0x7FFB1BEE0143 (1 samples, 0.03%)</title><rect x="0.3092%" y="821" width="0.0281%" height="15" fill="rgb(211,81,21)" fg:x="11" fg:w="1"/><text x="0.5592%" y="831.50"></text></g><g><title>`0x7FFB1CB318AB (1 samples, 0.03%)</title><rect x="0.3092%" y="805" width="0.0281%" height="15" fill="rgb(208,190,38)" fg:x="11" fg:w="1"/><text x="0.5592%" y="815.50"></text></g><g><title>`0x7FFB1E25C124 (1 samples, 0.03%)</title><rect x="0.3092%" y="789" width="0.0281%" height="15" fill="rgb(235,213,38)" fg:x="11" fg:w="1"/><text x="0.5592%" y="799.50"></text></g><g><title>`0x7FFB1E25CF60 (1 samples, 0.03%)</title><rect x="0.3092%" y="773" width="0.0281%" height="15" fill="rgb(237,122,38)" fg:x="11" fg:w="1"/><text x="0.5592%" y="783.50"></text></g><g><title>`0x7FFB1E1B2080 (1 samples, 0.03%)</title><rect x="0.3092%" y="757" width="0.0281%" height="15" fill="rgb(244,218,35)" fg:x="11" fg:w="1"/><text x="0.5592%" y="767.50"></text></g><g><title>`0x7FFB1A83DEFE (1 samples, 0.03%)</title><rect x="0.3092%" y="741" width="0.0281%" height="15" fill="rgb(240,68,47)" fg:x="11" fg:w="1"/><text x="0.5592%" y="751.50"></text></g><g><title>`0x7FFB1A83DDD5 (1 samples, 0.03%)</title><rect x="0.3092%" y="725" width="0.0281%" height="15" fill="rgb(210,16,53)" fg:x="11" fg:w="1"/><text x="0.5592%" y="735.50"></text></g><g><title>`0x7FFB1BEB30DC (1 samples, 0.03%)</title><rect x="0.3092%" y="709" width="0.0281%" height="15" fill="rgb(235,124,12)" fg:x="11" fg:w="1"/><text x="0.5592%" y="719.50"></text></g><g><title>`0x7FFB1BE8B84D (1 samples, 0.03%)</title><rect x="0.3092%" y="693" width="0.0281%" height="15" fill="rgb(224,169,11)" fg:x="11" fg:w="1"/><text x="0.5592%" y="703.50"></text></g><g><title>`0x7FFB1BE8B897 (1 samples, 0.03%)</title><rect x="0.3092%" y="677" width="0.0281%" height="15" fill="rgb(250,166,2)" fg:x="11" fg:w="1"/><text x="0.5592%" y="687.50"></text></g><g><title>`0x7FFB1BE8BCC4 (1 samples, 0.03%)</title><rect x="0.3092%" y="661" width="0.0281%" height="15" fill="rgb(242,216,29)" fg:x="11" fg:w="1"/><text x="0.5592%" y="671.50"></text></g><g><title>`0x7FFB1BEA0540 (1 samples, 0.03%)</title><rect x="0.3092%" y="645" width="0.0281%" height="15" fill="rgb(230,116,27)" fg:x="11" fg:w="1"/><text x="0.5592%" y="655.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::basket_func::basket&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, Rust_MCS::StopStruct*, enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="0.7591%" y="421" width="0.0281%" height="15" fill="rgb(228,99,48)" fg:x="27" fg:w="1"/><text x="1.0091%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`itertools::Itertools::sorted_unstable_by(core::ops::range::Range&lt;usize&gt;, Rust_MCS::mcs_utils::basket_func::basket::closure_env$0 (1 samples, 0.03%)</title><rect x="0.7591%" y="405" width="0.0281%" height="15" fill="rgb(253,11,6)" fg:x="27" fg:w="1"/><text x="1.0091%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::impl$0::sort_unstable_by(ref_mut$&lt;slice2$&lt;usize&gt; &gt;, Rust_MCS::mcs_utils::basket_func::basket::closure_env$0 (1 samples, 0.03%)</title><rect x="0.7591%" y="389" width="0.0281%" height="15" fill="rgb(247,143,39)" fg:x="27" fg:w="1"/><text x="1.0091%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::unstable::sort(ref_mut$&lt;slice2$&lt;usize&gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;usize,Rust_MCS::mcs_utils::basket_func::basket::closure_env$0 (1 samples, 0.03%)</title><rect x="0.7591%" y="373" width="0.0281%" height="15" fill="rgb(236,97,10)" fg:x="27" fg:w="1"/><text x="1.0091%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left(ref_mut$&lt;slice2$&lt;usize&gt; &gt;, unsigned long long, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;usize,Rust_MCS::mcs_utils::basket_func::basket::closure_env$0 (1 samples, 0.03%)</title><rect x="0.7591%" y="357" width="0.0281%" height="15" fill="rgb(233,208,19)" fg:x="27" fg:w="1"/><text x="1.0091%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::mut_ptr::impl$0::add (1 samples, 0.03%)</title><rect x="0.7591%" y="341" width="0.0281%" height="15" fill="rgb(216,164,2)" fg:x="27" fg:w="1"/><text x="1.0091%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::shared::smallsort::insert_tail&lt;usize,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;usize,Rust_MCS::mcs_utils::basket_func::basket::closure_env$0&lt;6&gt; &gt; &gt;(unsigned long long*, unsigned long long*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;usize,Rust_MCS::mcs_utils::basket_func::basket::closure_env$0 (1 samples, 0.03%)</title><rect x="0.7591%" y="325" width="0.0281%" height="15" fill="rgb(220,129,5)" fg:x="27" fg:w="1"/><text x="1.0091%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;usize,Rust_MCS::mcs_utils::basket_func::basket::closure_env$0 (1 samples, 0.03%)</title><rect x="0.7591%" y="309" width="0.0281%" height="15" fill="rgb(242,17,10)" fg:x="27" fg:w="1"/><text x="1.0091%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::basket_func::basket::closure$0(Rust_MCS::mcs_utils::basket_func::basket::closure_env$0 (1 samples, 0.03%)</title><rect x="0.7591%" y="293" width="0.0281%" height="15" fill="rgb(242,107,0)" fg:x="27" fg:w="1"/><text x="1.0091%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="0.7591%" y="277" width="0.0281%" height="15" fill="rgb(251,28,31)" fg:x="27" fg:w="1"/><text x="1.0091%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::cmp::impls::impl$79::cmp (1 samples, 0.03%)</title><rect x="0.7591%" y="261" width="0.0281%" height="15" fill="rgb(233,223,10)" fg:x="27" fg:w="1"/><text x="1.0091%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="0.7872%" y="341" width="0.0281%" height="15" fill="rgb(215,21,27)" fg:x="28" fg:w="1"/><text x="1.0372%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.7872%" y="325" width="0.0281%" height="15" fill="rgb(232,23,21)" fg:x="28" fg:w="1"/><text x="1.0372%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.7872%" y="309" width="0.0281%" height="15" fill="rgb(244,5,23)" fg:x="28" fg:w="1"/><text x="1.0372%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.7872%" y="293" width="0.0281%" height="15" fill="rgb(226,81,46)" fg:x="28" fg:w="1"/><text x="1.0372%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="0.7872%" y="277" width="0.0281%" height="15" fill="rgb(247,70,30)" fg:x="28" fg:w="1"/><text x="1.0372%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="0.8153%" y="341" width="0.0281%" height="15" fill="rgb(212,68,19)" fg:x="29" fg:w="1"/><text x="1.0653%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="0.8153%" y="325" width="0.0281%" height="15" fill="rgb(240,187,13)" fg:x="29" fg:w="1"/><text x="1.0653%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="0.8153%" y="309" width="0.0281%" height="15" fill="rgb(223,113,26)" fg:x="29" fg:w="1"/><text x="1.0653%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="0.8153%" y="293" width="0.0281%" height="15" fill="rgb(206,192,2)" fg:x="29" fg:w="1"/><text x="1.0653%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;*, core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="0.8153%" y="277" width="0.0281%" height="15" fill="rgb(241,108,4)" fg:x="29" fg:w="1"/><text x="1.0653%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="0.8153%" y="261" width="0.0281%" height="15" fill="rgb(247,173,49)" fg:x="29" fg:w="1"/><text x="1.0653%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global,core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="0.8153%" y="245" width="0.0281%" height="15" fill="rgb(224,114,35)" fg:x="29" fg:w="1"/><text x="1.0653%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::zip::impl$1::fold(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;tuple$&lt;f64,f64&gt;,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global,core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="0.8153%" y="229" width="0.0281%" height="15" fill="rgb(245,159,27)" fg:x="29" fg:w="1"/><text x="1.0653%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::zip::impl$4::fold(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;tuple$&lt;f64,f64&gt;,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global,core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="0.8153%" y="213" width="0.0281%" height="15" fill="rgb(245,172,44)" fg:x="29" fg:w="1"/><text x="1.0653%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::range::impl$6::next(core::ops::range::Range (1 samples, 0.03%)</title><rect x="0.8153%" y="197" width="0.0281%" height="15" fill="rgb(236,23,11)" fg:x="29" fg:w="1"/><text x="1.0653%" y="207.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1 samples, 0.03%)</title><rect x="0.8153%" y="181" width="0.0281%" height="15" fill="rgb(205,117,38)" fg:x="29" fg:w="1"/><text x="1.0653%" y="191.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::impl$0::sort_unstable_by(ref_mut$&lt;slice2$&lt;tuple$ (2 samples, 0.06%)</title><rect x="0.8434%" y="341" width="0.0562%" height="15" fill="rgb(237,72,25)" fg:x="30" fg:w="2"/><text x="1.0934%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::unstable::sort(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (2 samples, 0.06%)</title><rect x="0.8434%" y="325" width="0.0562%" height="15" fill="rgb(244,70,9)" fg:x="30" fg:w="2"/><text x="1.0934%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left&lt;tuple$&lt;f64,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;f64,f64&gt;,Rust_MCS::gls::lssort::lssort::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,f64&gt; &gt; &gt;, unsigned long long, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (2 samples, 0.06%)</title><rect x="0.8434%" y="309" width="0.0562%" height="15" fill="rgb(217,125,39)" fg:x="30" fg:w="2"/><text x="1.0934%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::mut_ptr::impl$0::add(tuple$ (2 samples, 0.06%)</title><rect x="0.8434%" y="293" width="0.0562%" height="15" fill="rgb(235,36,10)" fg:x="30" fg:w="2"/><text x="1.0934%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::select::partition_at_index&lt;f64,core::slice::impl$0::select_nth_unstable_by::closure_env$0&lt;f64,Rust_MCS::gls::lssort::lssort::closure_env$9&gt; &gt;(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="0.8996%" y="341" width="0.0281%" height="15" fill="rgb(251,123,47)" fg:x="32" fg:w="1"/><text x="1.1496%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::select::partition_at_index_loop(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, enum2$&lt;core::option::Option&lt;ref$&lt;f64&gt; &gt; &gt;, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="0.8996%" y="325" width="0.0281%" height="15" fill="rgb(221,13,13)" fg:x="32" fg:w="1"/><text x="1.1496%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="0.8996%" y="309" width="0.0281%" height="15" fill="rgb(238,131,9)" fg:x="32" fg:w="1"/><text x="1.1496%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::shared::smallsort::insert_tail(double*, double*, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="0.8996%" y="293" width="0.0281%" height="15" fill="rgb(211,50,8)" fg:x="32" fg:w="1"/><text x="1.1496%" y="303.50"></text></g><g><title>`0x7FFB1E1C6A08 (1 samples, 0.03%)</title><rect x="0.9277%" y="341" width="0.0281%" height="15" fill="rgb(245,182,24)" fg:x="33" fg:w="1"/><text x="1.1777%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (7 samples, 0.20%)</title><rect x="0.7872%" y="357" width="0.1968%" height="15" fill="rgb(242,14,37)" fg:x="28" fg:w="7"/><text x="1.0372%" y="367.50"></text></g><g><title>`0x7FFB1E1C6AB7 (1 samples, 0.03%)</title><rect x="0.9559%" y="341" width="0.0281%" height="15" fill="rgb(246,228,12)" fg:x="34" fg:w="1"/><text x="1.2059%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lsdescent::lsdescent&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (8 samples, 0.22%)</title><rect x="0.7872%" y="373" width="0.2249%" height="15" fill="rgb(213,55,15)" fg:x="28" fg:w="8"/><text x="1.0372%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="0.9840%" y="357" width="0.0281%" height="15" fill="rgb(209,9,3)" fg:x="35" fg:w="1"/><text x="1.2340%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_slice (1 samples, 0.03%)</title><rect x="0.9840%" y="341" width="0.0281%" height="15" fill="rgb(230,59,30)" fg:x="35" fg:w="1"/><text x="1.2340%" y="351.50"></text></g><g><title>`0x7FFB1E1CA446 (1 samples, 0.03%)</title><rect x="1.0121%" y="117" width="0.0281%" height="15" fill="rgb(209,121,21)" fg:x="36" fg:w="1"/><text x="1.2621%" y="127.50"></text></g><g><title>`0x7FFB1E1CA4BA (1 samples, 0.03%)</title><rect x="1.0402%" y="117" width="0.0281%" height="15" fill="rgb(220,109,13)" fg:x="37" fg:w="1"/><text x="1.2902%" y="127.50"></text></g><g><title>`0x7FFB1E1BBEA3 (1 samples, 0.03%)</title><rect x="1.0402%" y="101" width="0.0281%" height="15" fill="rgb(232,18,1)" fg:x="37" fg:w="1"/><text x="1.2902%" y="111.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lsinit::lsinit&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 0.08%)</title><rect x="1.0121%" y="373" width="0.0843%" height="15" fill="rgb(215,41,42)" fg:x="36" fg:w="3"/><text x="1.2621%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::push (3 samples, 0.08%)</title><rect x="1.0121%" y="357" width="0.0843%" height="15" fill="rgb(224,123,36)" fg:x="36" fg:w="3"/><text x="1.2621%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_mut_ptr (3 samples, 0.08%)</title><rect x="1.0121%" y="341" width="0.0843%" height="15" fill="rgb(240,125,3)" fg:x="36" fg:w="3"/><text x="1.2621%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::ptr (3 samples, 0.08%)</title><rect x="1.0121%" y="325" width="0.0843%" height="15" fill="rgb(205,98,50)" fg:x="36" fg:w="3"/><text x="1.2621%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 0.08%)</title><rect x="1.0121%" y="309" width="0.0843%" height="15" fill="rgb(205,185,37)" fg:x="36" fg:w="3"/><text x="1.2621%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 0.08%)</title><rect x="1.0121%" y="293" width="0.0843%" height="15" fill="rgb(238,207,15)" fg:x="36" fg:w="3"/><text x="1.2621%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec::grow_one&lt;f64,alloc::alloc::Global&gt; (3 samples, 0.08%)</title><rect x="1.0121%" y="277" width="0.0843%" height="15" fill="rgb(213,199,42)" fg:x="36" fg:w="3"/><text x="1.2621%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner::grow_one (3 samples, 0.08%)</title><rect x="1.0121%" y="261" width="0.0843%" height="15" fill="rgb(235,201,11)" fg:x="36" fg:w="3"/><text x="1.2621%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner::grow_amortized (3 samples, 0.08%)</title><rect x="1.0121%" y="245" width="0.0843%" height="15" fill="rgb(207,46,11)" fg:x="36" fg:w="3"/><text x="1.2621%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch (3 samples, 0.08%)</title><rect x="1.0121%" y="229" width="0.0843%" height="15" fill="rgb(241,35,35)" fg:x="36" fg:w="3"/><text x="1.2621%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (3 samples, 0.08%)</title><rect x="1.0121%" y="213" width="0.0843%" height="15" fill="rgb(243,32,47)" fg:x="36" fg:w="3"/><text x="1.2621%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::impl$1::grow (3 samples, 0.08%)</title><rect x="1.0121%" y="197" width="0.0843%" height="15" fill="rgb(247,202,23)" fg:x="36" fg:w="3"/><text x="1.2621%" y="207.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::Global::grow_impl (3 samples, 0.08%)</title><rect x="1.0121%" y="181" width="0.0843%" height="15" fill="rgb(219,102,11)" fg:x="36" fg:w="3"/><text x="1.2621%" y="191.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch (3 samples, 0.08%)</title><rect x="1.0121%" y="165" width="0.0843%" height="15" fill="rgb(243,110,44)" fg:x="36" fg:w="3"/><text x="1.2621%" y="175.50"></text></g><g><title>`0x7FFB1E1C9A86 (3 samples, 0.08%)</title><rect x="1.0121%" y="149" width="0.0843%" height="15" fill="rgb(222,74,54)" fg:x="36" fg:w="3"/><text x="1.2621%" y="159.50"></text></g><g><title>`0x7FFB1E1C9BC5 (3 samples, 0.08%)</title><rect x="1.0121%" y="133" width="0.0843%" height="15" fill="rgb(216,99,12)" fg:x="36" fg:w="3"/><text x="1.2621%" y="143.50"></text></g><g><title>`0x7FFB1E1CA51B (1 samples, 0.03%)</title><rect x="1.0683%" y="117" width="0.0281%" height="15" fill="rgb(226,22,26)" fg:x="38" fg:w="1"/><text x="1.3183%" y="127.50"></text></g><g><title>`0x7FFB1E1C69E4 (1 samples, 0.03%)</title><rect x="1.0683%" y="101" width="0.0281%" height="15" fill="rgb(217,163,10)" fg:x="38" fg:w="1"/><text x="1.3183%" y="111.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lsguard::lsguard(double, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="1.0964%" y="357" width="0.0281%" height="15" fill="rgb(213,25,53)" fg:x="39" fg:w="1"/><text x="1.3464%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::f64::impl$0::max (1 samples, 0.03%)</title><rect x="1.0964%" y="341" width="0.0281%" height="15" fill="rgb(252,105,26)" fg:x="39" fg:w="1"/><text x="1.3464%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::f64::impl$0::exp (1 samples, 0.03%)</title><rect x="1.1245%" y="325" width="0.0281%" height="15" fill="rgb(220,39,43)" fg:x="40" fg:w="1"/><text x="1.3745%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`exp (1 samples, 0.03%)</title><rect x="1.1245%" y="309" width="0.0281%" height="15" fill="rgb(229,68,48)" fg:x="40" fg:w="1"/><text x="1.3745%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lsnew::lsnew&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, unsigned long long, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (2 samples, 0.06%)</title><rect x="1.1245%" y="357" width="0.0562%" height="15" fill="rgb(252,8,32)" fg:x="40" fg:w="2"/><text x="1.3745%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (2 samples, 0.06%)</title><rect x="1.1245%" y="341" width="0.0562%" height="15" fill="rgb(223,20,43)" fg:x="40" fg:w="2"/><text x="1.3745%" y="351.50"></text></g><g><title>`0x7FFB1BEE7E4D (1 samples, 0.03%)</title><rect x="1.1527%" y="325" width="0.0281%" height="15" fill="rgb(229,81,49)" fg:x="41" fg:w="1"/><text x="1.4027%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="1.2089%" y="341" width="0.0281%" height="15" fill="rgb(236,28,36)" fg:x="43" fg:w="1"/><text x="1.4589%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.2089%" y="325" width="0.0281%" height="15" fill="rgb(249,185,26)" fg:x="43" fg:w="1"/><text x="1.4589%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.2089%" y="309" width="0.0281%" height="15" fill="rgb(249,174,33)" fg:x="43" fg:w="1"/><text x="1.4589%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.2089%" y="293" width="0.0281%" height="15" fill="rgb(233,201,37)" fg:x="43" fg:w="1"/><text x="1.4589%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="1.2089%" y="277" width="0.0281%" height="15" fill="rgb(221,78,26)" fg:x="43" fg:w="1"/><text x="1.4589%" y="287.50"></text></g><g><title>`0x7FFB1E1BBE86 (1 samples, 0.03%)</title><rect x="1.2089%" y="261" width="0.0281%" height="15" fill="rgb(250,127,30)" fg:x="43" fg:w="1"/><text x="1.4589%" y="271.50"></text></g><g><title>`0x7FFB1E1BBEE0 (1 samples, 0.03%)</title><rect x="1.2089%" y="245" width="0.0281%" height="15" fill="rgb(230,49,44)" fg:x="43" fg:w="1"/><text x="1.4589%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="1.2370%" y="341" width="0.0281%" height="15" fill="rgb(229,67,23)" fg:x="44" fg:w="1"/><text x="1.4870%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="1.2370%" y="325" width="0.0281%" height="15" fill="rgb(249,83,47)" fg:x="44" fg:w="1"/><text x="1.4870%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="1.2370%" y="309" width="0.0281%" height="15" fill="rgb(215,43,3)" fg:x="44" fg:w="1"/><text x="1.4870%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="1.2370%" y="293" width="0.0281%" height="15" fill="rgb(238,154,13)" fg:x="44" fg:w="1"/><text x="1.4870%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.2370%" y="277" width="0.0281%" height="15" fill="rgb(219,56,2)" fg:x="44" fg:w="1"/><text x="1.4870%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.2370%" y="261" width="0.0281%" height="15" fill="rgb(233,0,4)" fg:x="44" fg:w="1"/><text x="1.4870%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.2370%" y="245" width="0.0281%" height="15" fill="rgb(235,30,7)" fg:x="44" fg:w="1"/><text x="1.4870%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="1.2370%" y="229" width="0.0281%" height="15" fill="rgb(250,79,13)" fg:x="44" fg:w="1"/><text x="1.4870%" y="239.50"></text></g><g><title>`0x7FFB1E1BBE86 (1 samples, 0.03%)</title><rect x="1.2370%" y="213" width="0.0281%" height="15" fill="rgb(211,146,34)" fg:x="44" fg:w="1"/><text x="1.4870%" y="223.50"></text></g><g><title>`0x7FFB1E1BBFC4 (1 samples, 0.03%)</title><rect x="1.2370%" y="197" width="0.0281%" height="15" fill="rgb(228,22,38)" fg:x="44" fg:w="1"/><text x="1.4870%" y="207.50"></text></g><g><title>`0x7FFB1E1BC685 (1 samples, 0.03%)</title><rect x="1.2370%" y="181" width="0.0281%" height="15" fill="rgb(235,168,5)" fg:x="44" fg:w="1"/><text x="1.4870%" y="191.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (4 samples, 0.11%)</title><rect x="1.1808%" y="357" width="0.1125%" height="15" fill="rgb(221,155,16)" fg:x="42" fg:w="4"/><text x="1.4308%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="1.2651%" y="341" width="0.0281%" height="15" fill="rgb(215,215,53)" fg:x="45" fg:w="1"/><text x="1.5151%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="1.2651%" y="325" width="0.0281%" height="15" fill="rgb(223,4,10)" fg:x="45" fg:w="1"/><text x="1.5151%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="1.2651%" y="309" width="0.0281%" height="15" fill="rgb(234,103,6)" fg:x="45" fg:w="1"/><text x="1.5151%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="1.2932%" y="357" width="0.0281%" height="15" fill="rgb(227,97,0)" fg:x="46" fg:w="1"/><text x="1.5432%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec::grow_one&lt;f64,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="1.2932%" y="341" width="0.0281%" height="15" fill="rgb(234,150,53)" fg:x="46" fg:w="1"/><text x="1.5432%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.03%)</title><rect x="1.2932%" y="325" width="0.0281%" height="15" fill="rgb(228,201,54)" fg:x="46" fg:w="1"/><text x="1.5432%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.03%)</title><rect x="1.2932%" y="309" width="0.0281%" height="15" fill="rgb(222,22,37)" fg:x="46" fg:w="1"/><text x="1.5432%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="1.2932%" y="293" width="0.0281%" height="15" fill="rgb(237,53,32)" fg:x="46" fg:w="1"/><text x="1.5432%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="1.2932%" y="277" width="0.0281%" height="15" fill="rgb(233,25,53)" fg:x="46" fg:w="1"/><text x="1.5432%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::impl$1::grow (1 samples, 0.03%)</title><rect x="1.2932%" y="261" width="0.0281%" height="15" fill="rgb(210,40,34)" fg:x="46" fg:w="1"/><text x="1.5432%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="1.2932%" y="245" width="0.0281%" height="15" fill="rgb(241,220,44)" fg:x="46" fg:w="1"/><text x="1.5432%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="1.2932%" y="229" width="0.0281%" height="15" fill="rgb(235,28,35)" fg:x="46" fg:w="1"/><text x="1.5432%" y="239.50"></text></g><g><title>`0x7FFB1E1C9A86 (1 samples, 0.03%)</title><rect x="1.2932%" y="213" width="0.0281%" height="15" fill="rgb(210,56,17)" fg:x="46" fg:w="1"/><text x="1.5432%" y="223.50"></text></g><g><title>`0x7FFB1E1C9BC5 (1 samples, 0.03%)</title><rect x="1.2932%" y="197" width="0.0281%" height="15" fill="rgb(224,130,29)" fg:x="46" fg:w="1"/><text x="1.5432%" y="207.50"></text></g><g><title>`0x7FFB1E1CA51B (1 samples, 0.03%)</title><rect x="1.2932%" y="181" width="0.0281%" height="15" fill="rgb(235,212,8)" fg:x="46" fg:w="1"/><text x="1.5432%" y="191.50"></text></g><g><title>`0x7FFB1E1C6AB7 (1 samples, 0.03%)</title><rect x="1.2932%" y="165" width="0.0281%" height="15" fill="rgb(223,33,50)" fg:x="46" fg:w="1"/><text x="1.5432%" y="175.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lspar::lspar&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (9 samples, 0.25%)</title><rect x="1.0964%" y="373" width="0.2530%" height="15" fill="rgb(219,149,13)" fg:x="39" fg:w="9"/><text x="1.3464%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::iter::impl$182::any(core::slice::iter::Iter&lt;f64&gt;*, Rust_MCS::gls::lspar::lspar::closure_env$1 (1 samples, 0.03%)</title><rect x="1.3213%" y="357" width="0.0281%" height="15" fill="rgb(250,156,29)" fg:x="47" fg:w="1"/><text x="1.5713%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="1.3213%" y="341" width="0.0281%" height="15" fill="rgb(216,193,19)" fg:x="47" fg:w="1"/><text x="1.5713%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::len (1 samples, 0.03%)</title><rect x="1.3495%" y="341" width="0.0281%" height="15" fill="rgb(216,135,14)" fg:x="48" fg:w="1"/><text x="1.5995%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::spec_extend::impl$1::spec_extend&lt;bool,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt; &gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="1.3495%" y="325" width="0.0281%" height="15" fill="rgb(241,47,5)" fg:x="48" fg:w="1"/><text x="1.5995%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="1.3495%" y="309" width="0.0281%" height="15" fill="rgb(233,42,35)" fg:x="48" fg:w="1"/><text x="1.5995%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="1.3495%" y="293" width="0.0281%" height="15" fill="rgb(231,13,6)" fg:x="48" fg:w="1"/><text x="1.5995%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="1.3495%" y="277" width="0.0281%" height="15" fill="rgb(207,181,40)" fg:x="48" fg:w="1"/><text x="1.5995%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::take::impl$1::fold(core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,bool,tuple$&lt;&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="1.3495%" y="261" width="0.0281%" height="15" fill="rgb(254,173,49)" fg:x="48" fg:w="1"/><text x="1.5995%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::take::impl$9::spec_fold(core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,bool,tuple$&lt;&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="1.3495%" y="245" width="0.0281%" height="15" fill="rgb(221,1,38)" fg:x="48" fg:w="1"/><text x="1.5995%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::take::impl$1::try_fold(core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,bool,tuple$&lt;&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="1.3495%" y="229" width="0.0281%" height="15" fill="rgb(206,124,46)" fg:x="48" fg:w="1"/><text x="1.5995%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::try_fold(core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::take::impl$1::try_fold::check::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,tuple$&lt;&gt;,core::ops::try_trait::NeverShortCircuit&lt;tuple$&lt;&gt; &gt;,core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,bool,tuple$&lt;&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="1.3495%" y="213" width="0.0281%" height="15" fill="rgb(249,21,11)" fg:x="48" fg:w="1"/><text x="1.5995%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::take::impl$1::try_fold::check::closure$0(core::iter::adapters::take::impl$1::try_fold::check::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,tuple$&lt;&gt;,core::ops::try_trait::NeverShortCircuit&lt;tuple$&lt;&gt; &gt;,core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,bool,tuple$&lt;&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt; &gt; &gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, tuple$&lt;ref$&lt;bool&gt;,ref$ (1 samples, 0.03%)</title><rect x="1.3495%" y="197" width="0.0281%" height="15" fill="rgb(222,201,40)" fg:x="48" fg:w="1"/><text x="1.5995%" y="207.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ops::try_trait::impl$0::wrap_mut_2::closure$0(core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,bool,tuple$&lt;&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, tuple$&lt;ref$&lt;bool&gt;,ref$ (1 samples, 0.03%)</title><rect x="1.3495%" y="181" width="0.0281%" height="15" fill="rgb(235,61,29)" fg:x="48" fg:w="1"/><text x="1.5995%" y="191.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,bool,tuple$&lt;&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, tuple$&lt;ref$&lt;bool&gt;,ref$ (1 samples, 0.03%)</title><rect x="1.3495%" y="165" width="0.0281%" height="15" fill="rgb(219,207,3)" fg:x="48" fg:w="1"/><text x="1.5995%" y="175.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt; &gt; &gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="1.3495%" y="149" width="0.0281%" height="15" fill="rgb(222,56,46)" fg:x="48" fg:w="1"/><text x="1.5995%" y="159.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$20::extend_trusted::closure$0(alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="1.3495%" y="133" width="0.0281%" height="15" fill="rgb(239,76,54)" fg:x="48" fg:w="1"/><text x="1.5995%" y="143.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.03%)</title><rect x="1.3495%" y="117" width="0.0281%" height="15" fill="rgb(231,124,27)" fg:x="48" fg:w="1"/><text x="1.5995%" y="127.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::min_by(core::slice::iter::Iter&lt;f64&gt;, Rust_MCS::gls::lslocal::lslocal::closure_env$7 (1 samples, 0.03%)</title><rect x="1.3776%" y="341" width="0.0281%" height="15" fill="rgb(249,195,6)" fg:x="49" fg:w="1"/><text x="1.6276%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::reduce(core::slice::iter::Iter&lt;f64&gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;ref$&lt;f64&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$7 (1 samples, 0.03%)</title><rect x="1.3776%" y="325" width="0.0281%" height="15" fill="rgb(237,174,47)" fg:x="49" fg:w="1"/><text x="1.6276%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;f64&gt;, double*, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;ref$&lt;f64&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$7 (1 samples, 0.03%)</title><rect x="1.3776%" y="309" width="0.0281%" height="15" fill="rgb(206,201,31)" fg:x="49" fg:w="1"/><text x="1.6276%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::min_by::fold::closure$0(core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;ref$&lt;f64&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$7 (1 samples, 0.03%)</title><rect x="1.3776%" y="293" width="0.0281%" height="15" fill="rgb(231,57,52)" fg:x="49" fg:w="1"/><text x="1.6276%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::cmp::min_by(double*, double*, Rust_MCS::gls::lslocal::lslocal::closure_env$7 (1 samples, 0.03%)</title><rect x="1.3776%" y="277" width="0.0281%" height="15" fill="rgb(248,177,22)" fg:x="49" fg:w="1"/><text x="1.6276%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lsquart::lsquart&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (3 samples, 0.08%)</title><rect x="1.3495%" y="373" width="0.0843%" height="15" fill="rgb(215,211,37)" fg:x="48" fg:w="3"/><text x="1.5995%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lslocal::lslocal&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (3 samples, 0.08%)</title><rect x="1.3495%" y="357" width="0.0843%" height="15" fill="rgb(241,128,51)" fg:x="48" fg:w="3"/><text x="1.5995%" y="367.50"></text></g><g><title>`0x7FFB1E1C6AB7 (1 samples, 0.03%)</title><rect x="1.4057%" y="341" width="0.0281%" height="15" fill="rgb(227,165,31)" fg:x="50" fg:w="1"/><text x="1.6557%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lsrange::lsrange&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="1.4338%" y="373" width="0.0281%" height="15" fill="rgb(228,167,24)" fg:x="51" fg:w="1"/><text x="1.6838%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::cmp::impls::impl$54::partial_cmp (1 samples, 0.03%)</title><rect x="1.4338%" y="357" width="0.0281%" height="15" fill="rgb(228,143,12)" fg:x="51" fg:w="1"/><text x="1.6838%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="1.4619%" y="357" width="0.0281%" height="15" fill="rgb(249,149,8)" fg:x="52" fg:w="1"/><text x="1.7119%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.4619%" y="341" width="0.0281%" height="15" fill="rgb(243,35,44)" fg:x="52" fg:w="1"/><text x="1.7119%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="1.4900%" y="357" width="0.0281%" height="15" fill="rgb(246,89,9)" fg:x="53" fg:w="1"/><text x="1.7400%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="1.4900%" y="341" width="0.0281%" height="15" fill="rgb(233,213,13)" fg:x="53" fg:w="1"/><text x="1.7400%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="1.4900%" y="325" width="0.0281%" height="15" fill="rgb(233,141,41)" fg:x="53" fg:w="1"/><text x="1.7400%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="1.4900%" y="309" width="0.0281%" height="15" fill="rgb(239,167,4)" fg:x="53" fg:w="1"/><text x="1.7400%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.4900%" y="293" width="0.0281%" height="15" fill="rgb(209,217,16)" fg:x="53" fg:w="1"/><text x="1.7400%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.4900%" y="277" width="0.0281%" height="15" fill="rgb(219,88,35)" fg:x="53" fg:w="1"/><text x="1.7400%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.4900%" y="261" width="0.0281%" height="15" fill="rgb(220,193,23)" fg:x="53" fg:w="1"/><text x="1.7400%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="1.4900%" y="245" width="0.0281%" height="15" fill="rgb(230,90,52)" fg:x="53" fg:w="1"/><text x="1.7400%" y="255.50"></text></g><g><title>`0x7FFB1E1BBE86 (1 samples, 0.03%)</title><rect x="1.4900%" y="229" width="0.0281%" height="15" fill="rgb(252,106,19)" fg:x="53" fg:w="1"/><text x="1.7400%" y="239.50"></text></g><g><title>`0x7FFB1E1BBFC4 (1 samples, 0.03%)</title><rect x="1.4900%" y="213" width="0.0281%" height="15" fill="rgb(206,74,20)" fg:x="53" fg:w="1"/><text x="1.7400%" y="223.50"></text></g><g><title>`0x7FFB1E1BC89E (1 samples, 0.03%)</title><rect x="1.4900%" y="197" width="0.0281%" height="15" fill="rgb(230,138,44)" fg:x="53" fg:w="1"/><text x="1.7400%" y="207.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 0.08%)</title><rect x="1.4619%" y="373" width="0.0843%" height="15" fill="rgb(235,182,43)" fg:x="52" fg:w="3"/><text x="1.7119%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.03%)</title><rect x="1.5181%" y="357" width="0.0281%" height="15" fill="rgb(242,16,51)" fg:x="54" fg:w="1"/><text x="1.7681%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::sys::alloc::windows::impl$0::dealloc (1 samples, 0.03%)</title><rect x="1.5181%" y="341" width="0.0281%" height="15" fill="rgb(248,9,4)" fg:x="54" fg:w="1"/><text x="1.7681%" y="351.50"></text></g><g><title>`0x7FFB1CB13F9D (1 samples, 0.03%)</title><rect x="1.5181%" y="325" width="0.0281%" height="15" fill="rgb(210,31,22)" fg:x="54" fg:w="1"/><text x="1.7681%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::gls&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (28 samples, 0.79%)</title><rect x="0.7872%" y="389" width="0.7872%" height="15" fill="rgb(239,54,39)" fg:x="28" fg:w="28"/><text x="1.0372%" y="399.50"></text></g><g><title>`0x7FFB1E1C6A30 (1 samples, 0.03%)</title><rect x="1.5462%" y="373" width="0.0281%" height="15" fill="rgb(230,99,41)" fg:x="55" fg:w="1"/><text x="1.7962%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (2 samples, 0.06%)</title><rect x="1.5744%" y="389" width="0.0562%" height="15" fill="rgb(253,106,12)" fg:x="56" fg:w="2"/><text x="1.8244%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="1.5744%" y="373" width="0.0562%" height="15" fill="rgb(213,46,41)" fg:x="56" fg:w="2"/><text x="1.8244%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="1.5744%" y="357" width="0.0562%" height="15" fill="rgb(215,133,35)" fg:x="56" fg:w="2"/><text x="1.8244%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="1.5744%" y="341" width="0.0562%" height="15" fill="rgb(213,28,5)" fg:x="56" fg:w="2"/><text x="1.8244%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.06%)</title><rect x="1.5744%" y="325" width="0.0562%" height="15" fill="rgb(215,77,49)" fg:x="56" fg:w="2"/><text x="1.8244%" y="335.50"></text></g><g><title>`0x7FFB1E1BBE86 (2 samples, 0.06%)</title><rect x="1.5744%" y="309" width="0.0562%" height="15" fill="rgb(248,100,22)" fg:x="56" fg:w="2"/><text x="1.8244%" y="319.50"></text></g><g><title>`0x7FFB1E1BC20E (2 samples, 0.06%)</title><rect x="1.5744%" y="293" width="0.0562%" height="15" fill="rgb(208,67,9)" fg:x="56" fg:w="2"/><text x="1.8244%" y="303.50"></text></g><g><title>`0x7FFB1E1E9A50 (2 samples, 0.06%)</title><rect x="1.5744%" y="277" width="0.0562%" height="15" fill="rgb(219,133,21)" fg:x="56" fg:w="2"/><text x="1.8244%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::csearch::csearch&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (31 samples, 0.87%)</title><rect x="0.7872%" y="405" width="0.8715%" height="15" fill="rgb(246,46,29)" fg:x="28" fg:w="31"/><text x="1.0372%" y="415.50"></text></g><g><title>`0x7FFB1E1C6F81 (1 samples, 0.03%)</title><rect x="1.6306%" y="389" width="0.0281%" height="15" fill="rgb(246,185,52)" fg:x="58" fg:w="1"/><text x="1.8806%" y="399.50"></text></g><g><title>`0x7FFB1E1C00F9 (1 samples, 0.03%)</title><rect x="1.6306%" y="373" width="0.0281%" height="15" fill="rgb(252,136,11)" fg:x="58" fg:w="1"/><text x="1.8806%" y="383.50"></text></g><g><title>`0x7FFB1E1B9E75 (1 samples, 0.03%)</title><rect x="1.6306%" y="357" width="0.0281%" height="15" fill="rgb(219,138,53)" fg:x="58" fg:w="1"/><text x="1.8806%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::triple::triple&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="1.6587%" y="405" width="0.0281%" height="15" fill="rgb(211,51,23)" fg:x="59" fg:w="1"/><text x="1.9087%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="1.6587%" y="389" width="0.0281%" height="15" fill="rgb(247,221,28)" fg:x="59" fg:w="1"/><text x="1.9087%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.6587%" y="373" width="0.0281%" height="15" fill="rgb(251,222,45)" fg:x="59" fg:w="1"/><text x="1.9087%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.6587%" y="357" width="0.0281%" height="15" fill="rgb(217,162,53)" fg:x="59" fg:w="1"/><text x="1.9087%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.6587%" y="341" width="0.0281%" height="15" fill="rgb(229,93,14)" fg:x="59" fg:w="1"/><text x="1.9087%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="1.6587%" y="325" width="0.0281%" height="15" fill="rgb(209,67,49)" fg:x="59" fg:w="1"/><text x="1.9087%" y="335.50"></text></g><g><title>`0x7FFB1E1BBE86 (1 samples, 0.03%)</title><rect x="1.6587%" y="309" width="0.0281%" height="15" fill="rgb(213,87,29)" fg:x="59" fg:w="1"/><text x="1.9087%" y="319.50"></text></g><g><title>`0x7FFB1E1BBFC4 (1 samples, 0.03%)</title><rect x="1.6587%" y="293" width="0.0281%" height="15" fill="rgb(205,151,52)" fg:x="59" fg:w="1"/><text x="1.9087%" y="303.50"></text></g><g><title>`0x7FFB1E1BC82C (1 samples, 0.03%)</title><rect x="1.6587%" y="277" width="0.0281%" height="15" fill="rgb(253,215,39)" fg:x="59" fg:w="1"/><text x="1.9087%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="1.6868%" y="357" width="0.0281%" height="15" fill="rgb(221,220,41)" fg:x="60" fg:w="1"/><text x="1.9368%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="1.6868%" y="341" width="0.0281%" height="15" fill="rgb(218,133,21)" fg:x="60" fg:w="1"/><text x="1.9368%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="1.6868%" y="325" width="0.0281%" height="15" fill="rgb(221,193,43)" fg:x="60" fg:w="1"/><text x="1.9368%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="1.6868%" y="309" width="0.0281%" height="15" fill="rgb(240,128,52)" fg:x="60" fg:w="1"/><text x="1.9368%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="1.6868%" y="293" width="0.0281%" height="15" fill="rgb(253,114,12)" fg:x="60" fg:w="1"/><text x="1.9368%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.03%)</title><rect x="1.6868%" y="277" width="0.0281%" height="15" fill="rgb(215,223,47)" fg:x="60" fg:w="1"/><text x="1.9368%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="1.6868%" y="261" width="0.0281%" height="15" fill="rgb(248,225,23)" fg:x="60" fg:w="1"/><text x="1.9368%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="1.6868%" y="245" width="0.0281%" height="15" fill="rgb(250,108,0)" fg:x="60" fg:w="1"/><text x="1.9368%" y="255.50"></text></g><g><title>`0x7FFB1E1C6AB7 (1 samples, 0.03%)</title><rect x="1.6868%" y="229" width="0.0281%" height="15" fill="rgb(228,208,7)" fg:x="60" fg:w="1"/><text x="1.9368%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(nalgebra::linalg::lu::LU (1 samples, 0.03%)</title><rect x="1.7149%" y="357" width="0.0281%" height="15" fill="rgb(244,45,10)" fg:x="61" fg:w="1"/><text x="1.9649%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(nalgebra::linalg::permutation_sequence::PermutationSequence (1 samples, 0.03%)</title><rect x="1.7149%" y="341" width="0.0281%" height="15" fill="rgb(207,125,25)" fg:x="61" fg:w="1"/><text x="1.9649%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(nalgebra::base::matrix::Matrix&lt;tuple$&lt;usize,usize&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;tuple$&lt;usize,usize&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="1.7149%" y="325" width="0.0281%" height="15" fill="rgb(210,195,18)" fg:x="61" fg:w="1"/><text x="1.9649%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(nalgebra::base::vec_storage::VecStorage&lt;tuple$&lt;usize,usize&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="1.7149%" y="309" width="0.0281%" height="15" fill="rgb(249,80,12)" fg:x="61" fg:w="1"/><text x="1.9649%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;tuple$ (1 samples, 0.03%)</title><rect x="1.7149%" y="293" width="0.0281%" height="15" fill="rgb(221,65,9)" fg:x="61" fg:w="1"/><text x="1.9649%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;tuple$ (1 samples, 0.03%)</title><rect x="1.7149%" y="277" width="0.0281%" height="15" fill="rgb(235,49,36)" fg:x="61" fg:w="1"/><text x="1.9649%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec&lt;tuple$ (1 samples, 0.03%)</title><rect x="1.7149%" y="261" width="0.0281%" height="15" fill="rgb(225,32,20)" fg:x="61" fg:w="1"/><text x="1.9649%" y="271.50"></text></g><g><title>`0x7FFB1E1C6AB7 (1 samples, 0.03%)</title><rect x="1.7149%" y="245" width="0.0281%" height="15" fill="rgb(215,141,46)" fg:x="61" fg:w="1"/><text x="1.9649%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::component_div(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="1.7430%" y="357" width="0.0281%" height="15" fill="rgb(250,160,47)" fg:x="62" fg:w="1"/><text x="1.9930%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ops::arith::impl$450::div_assign (1 samples, 0.03%)</title><rect x="1.7430%" y="341" width="0.0281%" height="15" fill="rgb(216,222,40)" fg:x="62" fg:w="1"/><text x="1.9930%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;::lu&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.7712%" y="357" width="0.0562%" height="15" fill="rgb(234,217,39)" fg:x="63" fg:w="2"/><text x="2.0212%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::linalg::lu::LU&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::new&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage (2 samples, 0.06%)</title><rect x="1.7712%" y="341" width="0.0562%" height="15" fill="rgb(207,178,40)" fg:x="63" fg:w="2"/><text x="2.0212%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::linalg::permutation_sequence::PermutationSequence&lt;nalgebra::base::dimension::Dyn&gt;::identity_generic (1 samples, 0.03%)</title><rect x="1.7993%" y="325" width="0.0281%" height="15" fill="rgb(221,136,13)" fg:x="64" fg:w="1"/><text x="2.0493%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;tuple$&lt;usize,usize&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;tuple$&lt;usize,usize&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::repeat_generic(nalgebra::base::dimension::Dyn, nalgebra::base::dimension::Const&lt;1&gt;, tuple$ (1 samples, 0.03%)</title><rect x="1.7993%" y="309" width="0.0281%" height="15" fill="rgb(249,199,10)" fg:x="64" fg:w="1"/><text x="2.0493%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;tuple$&lt;usize,usize&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;tuple$&lt;usize,usize&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::from_iterator_generic(nalgebra::base::dimension::Dyn, nalgebra::base::dimension::Const&lt;1&gt;, core::iter::adapters::take::Take&lt;core::iter::sources::repeat::Repeat&lt;tuple$ (1 samples, 0.03%)</title><rect x="1.7993%" y="293" width="0.0281%" height="15" fill="rgb(249,222,13)" fg:x="64" fg:w="1"/><text x="2.0493%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::default_allocator::impl$1::allocate_from_iterator(nalgebra::base::dimension::Dyn, nalgebra::base::dimension::Const&lt;1&gt;, core::iter::adapters::take::Take&lt;core::iter::sources::repeat::Repeat&lt;tuple$ (1 samples, 0.03%)</title><rect x="1.7993%" y="277" width="0.0281%" height="15" fill="rgb(244,185,38)" fg:x="64" fg:w="1"/><text x="2.0493%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::take::Take&lt;core::iter::sources::repeat::Repeat&lt;tuple$ (1 samples, 0.03%)</title><rect x="1.7993%" y="261" width="0.0281%" height="15" fill="rgb(236,202,9)" fg:x="64" fg:w="1"/><text x="2.0493%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::take::Take&lt;core::iter::sources::repeat::Repeat&lt;tuple$ (1 samples, 0.03%)</title><rect x="1.7993%" y="245" width="0.0281%" height="15" fill="rgb(250,229,37)" fg:x="64" fg:w="1"/><text x="2.0493%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::take::Take&lt;core::iter::sources::repeat::Repeat&lt;tuple$ (1 samples, 0.03%)</title><rect x="1.7993%" y="229" width="0.0281%" height="15" fill="rgb(206,174,23)" fg:x="64" fg:w="1"/><text x="2.0493%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::take::Take&lt;core::iter::sources::repeat::Repeat&lt;tuple$ (1 samples, 0.03%)</title><rect x="1.7993%" y="213" width="0.0281%" height="15" fill="rgb(211,33,43)" fg:x="64" fg:w="1"/><text x="2.0493%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;tuple$&lt;usize,usize&gt;,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="1.7993%" y="197" width="0.0281%" height="15" fill="rgb(245,58,50)" fg:x="64" fg:w="1"/><text x="2.0493%" y="207.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;tuple$&lt;usize,usize&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.7993%" y="181" width="0.0281%" height="15" fill="rgb(244,68,36)" fg:x="64" fg:w="1"/><text x="2.0493%" y="191.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;usize,usize&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.7993%" y="165" width="0.0281%" height="15" fill="rgb(232,229,15)" fg:x="64" fg:w="1"/><text x="2.0493%" y="175.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.7993%" y="149" width="0.0281%" height="15" fill="rgb(254,30,23)" fg:x="64" fg:w="1"/><text x="2.0493%" y="159.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="1.7993%" y="133" width="0.0281%" height="15" fill="rgb(235,160,14)" fg:x="64" fg:w="1"/><text x="2.0493%" y="143.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="1.7993%" y="117" width="0.0281%" height="15" fill="rgb(212,155,44)" fg:x="64" fg:w="1"/><text x="2.0493%" y="127.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="1.7993%" y="101" width="0.0281%" height="15" fill="rgb(226,2,50)" fg:x="64" fg:w="1"/><text x="2.0493%" y="111.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="1.7993%" y="85" width="0.0281%" height="15" fill="rgb(234,177,6)" fg:x="64" fg:w="1"/><text x="2.0493%" y="95.50"></text></g><g><title>`0x7FFB1E1BBE86 (1 samples, 0.03%)</title><rect x="1.7993%" y="69" width="0.0281%" height="15" fill="rgb(217,24,9)" fg:x="64" fg:w="1"/><text x="2.0493%" y="79.50"></text></g><g><title>`0x7FFB1E1BBFC4 (1 samples, 0.03%)</title><rect x="1.7993%" y="53" width="0.0281%" height="15" fill="rgb(220,13,46)" fg:x="64" fg:w="1"/><text x="2.0493%" y="63.50"></text></g><g><title>`0x7FFB1E1BC83E (1 samples, 0.03%)</title><rect x="1.7993%" y="37" width="0.0281%" height="15" fill="rgb(239,221,27)" fg:x="64" fg:w="1"/><text x="2.0493%" y="47.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$0::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="1.8274%" y="357" width="0.0281%" height="15" fill="rgb(222,198,25)" fg:x="65" fg:w="1"/><text x="2.0774%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::dotx(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;*, nalgebra::base::blas::impl$0::dot::closure_env$0&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="1.8274%" y="341" width="0.0281%" height="15" fill="rgb(211,99,13)" fg:x="65" fg:w="1"/><text x="2.0774%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::range::impl$6::next(core::ops::range::Range (1 samples, 0.03%)</title><rect x="1.8274%" y="325" width="0.0281%" height="15" fill="rgb(232,111,31)" fg:x="65" fg:w="1"/><text x="2.0774%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1 samples, 0.03%)</title><rect x="1.8274%" y="309" width="0.0281%" height="15" fill="rgb(245,82,37)" fg:x="65" fg:w="1"/><text x="2.0774%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$31::sub(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="1.8555%" y="357" width="0.0281%" height="15" fill="rgb(227,149,46)" fg:x="66" fg:w="1"/><text x="2.1055%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::uninit(nalgebra::base::dimension::Dyn, nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="1.8555%" y="341" width="0.0281%" height="15" fill="rgb(218,36,50)" fg:x="66" fg:w="1"/><text x="2.1055%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::default_allocator::impl$1::allocate_uninit(nalgebra::base::dimension::Dyn, nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="1.8555%" y="325" width="0.0281%" height="15" fill="rgb(226,80,48)" fg:x="66" fg:w="1"/><text x="2.1055%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="1.8555%" y="309" width="0.0281%" height="15" fill="rgb(238,224,15)" fg:x="66" fg:w="1"/><text x="2.1055%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="1.8555%" y="293" width="0.0281%" height="15" fill="rgb(241,136,10)" fg:x="66" fg:w="1"/><text x="2.1055%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="1.8555%" y="277" width="0.0281%" height="15" fill="rgb(208,32,45)" fg:x="66" fg:w="1"/><text x="2.1055%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (1 samples, 0.03%)</title><rect x="1.8555%" y="261" width="0.0281%" height="15" fill="rgb(207,135,9)" fg:x="66" fg:w="1"/><text x="2.1055%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (1 samples, 0.03%)</title><rect x="1.8555%" y="245" width="0.0281%" height="15" fill="rgb(206,86,44)" fg:x="66" fg:w="1"/><text x="2.1055%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="1.8555%" y="229" width="0.0281%" height="15" fill="rgb(245,177,15)" fg:x="66" fg:w="1"/><text x="2.1055%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="1.8555%" y="213" width="0.0281%" height="15" fill="rgb(206,64,50)" fg:x="66" fg:w="1"/><text x="2.1055%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="1.8555%" y="197" width="0.0281%" height="15" fill="rgb(234,36,40)" fg:x="66" fg:w="1"/><text x="2.1055%" y="207.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="1.8555%" y="181" width="0.0281%" height="15" fill="rgb(213,64,8)" fg:x="66" fg:w="1"/><text x="2.1055%" y="191.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="1.8555%" y="165" width="0.0281%" height="15" fill="rgb(210,75,36)" fg:x="66" fg:w="1"/><text x="2.1055%" y="175.50"></text></g><g><title>`0x7FFB1E1BBE86 (1 samples, 0.03%)</title><rect x="1.8555%" y="149" width="0.0281%" height="15" fill="rgb(229,88,21)" fg:x="66" fg:w="1"/><text x="2.1055%" y="159.50"></text></g><g><title>`0x7FFB1E1BBFC4 (1 samples, 0.03%)</title><rect x="1.8555%" y="133" width="0.0281%" height="15" fill="rgb(252,204,47)" fg:x="66" fg:w="1"/><text x="2.1055%" y="143.50"></text></g><g><title>`0x7FFB1E1BC757 (1 samples, 0.03%)</title><rect x="1.8555%" y="117" width="0.0281%" height="15" fill="rgb(208,77,27)" fg:x="66" fg:w="1"/><text x="2.1055%" y="127.50"></text></g><g><title>`0x7FFB1E1C6A08 (1 samples, 0.03%)</title><rect x="1.8836%" y="229" width="0.0281%" height="15" fill="rgb(221,76,26)" fg:x="67" fg:w="1"/><text x="2.1336%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, tuple$ (2 samples, 0.06%)</title><rect x="1.8836%" y="357" width="0.0562%" height="15" fill="rgb(225,139,18)" fg:x="67" fg:w="2"/><text x="2.1336%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;::get_unchecked_mut(tuple$ (2 samples, 0.06%)</title><rect x="1.8836%" y="341" width="0.0562%" height="15" fill="rgb(230,137,11)" fg:x="67" fg:w="2"/><text x="2.1336%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::indexing::impl$12::get_unchecked_mut(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (2 samples, 0.06%)</title><rect x="1.8836%" y="325" width="0.0562%" height="15" fill="rgb(212,28,1)" fg:x="67" fg:w="2"/><text x="2.1336%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorageMut::get_unchecked_mut(nalgebra::base::array_storage::ArrayStorage (2 samples, 0.06%)</title><rect x="1.8836%" y="309" width="0.0562%" height="15" fill="rgb(248,164,17)" fg:x="67" fg:w="2"/><text x="2.1336%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorageMut::get_address_unchecked_mut(nalgebra::base::array_storage::ArrayStorage (2 samples, 0.06%)</title><rect x="1.8836%" y="293" width="0.0562%" height="15" fill="rgb(222,171,42)" fg:x="67" fg:w="2"/><text x="2.1336%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorageMut::get_address_unchecked_linear_mut(nalgebra::base::array_storage::ArrayStorage (2 samples, 0.06%)</title><rect x="1.8836%" y="277" width="0.0562%" height="15" fill="rgb(243,84,45)" fg:x="67" fg:w="2"/><text x="2.1336%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::mut_ptr::impl$0::wrapping_add (2 samples, 0.06%)</title><rect x="1.8836%" y="261" width="0.0562%" height="15" fill="rgb(252,49,23)" fg:x="67" fg:w="2"/><text x="2.1336%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::mut_ptr::impl$0::wrapping_offset (2 samples, 0.06%)</title><rect x="1.8836%" y="245" width="0.0562%" height="15" fill="rgb(215,19,7)" fg:x="67" fg:w="2"/><text x="2.1336%" y="255.50"></text></g><g><title>`0x7FFB1E1C6B61 (1 samples, 0.03%)</title><rect x="1.9117%" y="229" width="0.0281%" height="15" fill="rgb(238,81,41)" fg:x="68" fg:w="1"/><text x="2.1617%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::minq::minq&lt;6&gt;(double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (10 samples, 0.28%)</title><rect x="1.6868%" y="405" width="0.2811%" height="15" fill="rgb(210,199,37)" fg:x="60" fg:w="10"/><text x="1.9368%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::minq::minqsub::minqsub&lt;6&gt;(unsigned long long*, nalgebra::base::matrix::Matrix&lt;bool,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;bool,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;bool,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;bool,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (10 samples, 0.28%)</title><rect x="1.6868%" y="389" width="0.2811%" height="15" fill="rgb(244,192,49)" fg:x="60" fg:w="10"/><text x="1.9368%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::minq::ldlup::ldlup&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (10 samples, 0.28%)</title><rect x="1.6868%" y="373" width="0.2811%" height="15" fill="rgb(226,211,11)" fg:x="60" fg:w="10"/><text x="1.9368%" y="383.50"></text></g><g><title>`0x7FFB1E1C6AB7 (1 samples, 0.03%)</title><rect x="1.9398%" y="357" width="0.0281%" height="15" fill="rgb(236,162,54)" fg:x="69" fg:w="1"/><text x="2.1898%" y="367.50"></text></g><g><title>`0x7FFB1E1E9A50 (4 samples, 0.11%)</title><rect x="1.9680%" y="293" width="0.1125%" height="15" fill="rgb(220,229,9)" fg:x="70" fg:w="4"/><text x="2.2180%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (6 samples, 0.17%)</title><rect x="1.9680%" y="405" width="0.1687%" height="15" fill="rgb(250,87,22)" fg:x="70" fg:w="6"/><text x="2.2180%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.17%)</title><rect x="1.9680%" y="389" width="0.1687%" height="15" fill="rgb(239,43,17)" fg:x="70" fg:w="6"/><text x="2.2180%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.17%)</title><rect x="1.9680%" y="373" width="0.1687%" height="15" fill="rgb(231,177,25)" fg:x="70" fg:w="6"/><text x="2.2180%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.17%)</title><rect x="1.9680%" y="357" width="0.1687%" height="15" fill="rgb(219,179,1)" fg:x="70" fg:w="6"/><text x="2.2180%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (6 samples, 0.17%)</title><rect x="1.9680%" y="341" width="0.1687%" height="15" fill="rgb(238,219,53)" fg:x="70" fg:w="6"/><text x="2.2180%" y="351.50"></text></g><g><title>`0x7FFB1E1BBE86 (6 samples, 0.17%)</title><rect x="1.9680%" y="325" width="0.1687%" height="15" fill="rgb(232,167,36)" fg:x="70" fg:w="6"/><text x="2.2180%" y="335.50"></text></g><g><title>`0x7FFB1E1BC20E (6 samples, 0.17%)</title><rect x="1.9680%" y="309" width="0.1687%" height="15" fill="rgb(244,19,51)" fg:x="70" fg:w="6"/><text x="2.2180%" y="319.50"></text></g><g><title>`0x7FFB1E1EA6D3 (2 samples, 0.06%)</title><rect x="2.0804%" y="293" width="0.0562%" height="15" fill="rgb(224,6,22)" fg:x="74" fg:w="2"/><text x="2.3304%" y="303.50"></text></g><g><title>`0x7FFB1E25818D (2 samples, 0.06%)</title><rect x="2.0804%" y="277" width="0.0562%" height="15" fill="rgb(224,145,5)" fg:x="74" fg:w="2"/><text x="2.3304%" y="287.50"></text></g><g><title>`0x7FFB1E2FFAF4 (2 samples, 0.06%)</title><rect x="2.0804%" y="261" width="0.0562%" height="15" fill="rgb(234,130,49)" fg:x="74" fg:w="2"/><text x="2.3304%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="2.1366%" y="325" width="0.0281%" height="15" fill="rgb(254,6,2)" fg:x="76" fg:w="1"/><text x="2.3866%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.1366%" y="309" width="0.0281%" height="15" fill="rgb(208,96,46)" fg:x="76" fg:w="1"/><text x="2.3866%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.1366%" y="293" width="0.0281%" height="15" fill="rgb(239,3,39)" fg:x="76" fg:w="1"/><text x="2.3866%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.1366%" y="277" width="0.0281%" height="15" fill="rgb(233,210,1)" fg:x="76" fg:w="1"/><text x="2.3866%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="2.1366%" y="261" width="0.0281%" height="15" fill="rgb(244,137,37)" fg:x="76" fg:w="1"/><text x="2.3866%" y="271.50"></text></g><g><title>`0x7FFB1E1BBE86 (1 samples, 0.03%)</title><rect x="2.1366%" y="245" width="0.0281%" height="15" fill="rgb(240,136,2)" fg:x="76" fg:w="1"/><text x="2.3866%" y="255.50"></text></g><g><title>`0x7FFB1E1BBFC4 (1 samples, 0.03%)</title><rect x="2.1366%" y="229" width="0.0281%" height="15" fill="rgb(239,18,37)" fg:x="76" fg:w="1"/><text x="2.3866%" y="239.50"></text></g><g><title>`0x7FFB1E1BC7AC (1 samples, 0.03%)</title><rect x="2.1366%" y="213" width="0.0281%" height="15" fill="rgb(218,185,22)" fg:x="76" fg:w="1"/><text x="2.3866%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::min_by(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (2 samples, 0.06%)</title><rect x="2.1647%" y="325" width="0.0562%" height="15" fill="rgb(225,218,4)" fg:x="77" fg:w="2"/><text x="2.4147%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::reduce(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;f64&gt; &gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$ (2 samples, 0.06%)</title><rect x="2.1647%" y="309" width="0.0562%" height="15" fill="rgb(230,182,32)" fg:x="77" fg:w="2"/><text x="2.4147%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::enumerate::impl$1::fold(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;f64&gt; &gt;, tuple$&lt;usize,ref$&lt;f64&gt; &gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$ (2 samples, 0.06%)</title><rect x="2.1647%" y="293" width="0.0562%" height="15" fill="rgb(242,56,43)" fg:x="77" fg:w="2"/><text x="2.4147%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;f64&gt;, tuple$&lt;usize,ref$&lt;f64&gt; &gt;, core::iter::adapters::enumerate::impl$1::fold::enumerate::closure_env$0&lt;ref$&lt;f64&gt;,tuple$&lt;usize,ref$&lt;f64&gt; &gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$ (2 samples, 0.06%)</title><rect x="2.1647%" y="277" width="0.0562%" height="15" fill="rgb(233,99,24)" fg:x="77" fg:w="2"/><text x="2.4147%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::enumerate::impl$1::fold::enumerate::closure$0(core::iter::adapters::enumerate::impl$1::fold::enumerate::closure_env$0&lt;ref$&lt;f64&gt;,tuple$&lt;usize,ref$&lt;f64&gt; &gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;f64&gt; &gt;,Rust_MCS::gls::lssort::lssort::closure_env$5&gt; &gt;*, tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="2.1929%" y="261" width="0.0281%" height="15" fill="rgb(234,209,42)" fg:x="78" fg:w="1"/><text x="2.4429%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::select::partition_at_index&lt;f64,core::slice::impl$0::select_nth_unstable_by::closure_env$0&lt;f64,Rust_MCS::gls::lssort::lssort::closure_env$9&gt; &gt;(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.2210%" y="325" width="0.0281%" height="15" fill="rgb(227,7,12)" fg:x="79" fg:w="1"/><text x="2.4710%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::select::partition_at_index_loop(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, enum2$&lt;core::option::Option&lt;ref$&lt;f64&gt; &gt; &gt;, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.2210%" y="309" width="0.0281%" height="15" fill="rgb(245,203,43)" fg:x="79" fg:w="1"/><text x="2.4710%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.2210%" y="293" width="0.0281%" height="15" fill="rgb(238,205,33)" fg:x="79" fg:w="1"/><text x="2.4710%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::shared::smallsort::insert_tail(double*, double*, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.2210%" y="277" width="0.0281%" height="15" fill="rgb(231,56,7)" fg:x="79" fg:w="1"/><text x="2.4710%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::impl$0::select_nth_unstable_by::closure$0(core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.2210%" y="261" width="0.0281%" height="15" fill="rgb(244,186,29)" fg:x="79" fg:w="1"/><text x="2.4710%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lssort::lssort::closure$9 (1 samples, 0.03%)</title><rect x="2.2210%" y="245" width="0.0281%" height="15" fill="rgb(234,111,31)" fg:x="79" fg:w="1"/><text x="2.4710%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::f64::impl$0::total_cmp (1 samples, 0.03%)</title><rect x="2.2210%" y="229" width="0.0281%" height="15" fill="rgb(241,149,10)" fg:x="79" fg:w="1"/><text x="2.4710%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (5 samples, 0.14%)</title><rect x="2.1366%" y="341" width="0.1406%" height="15" fill="rgb(249,206,44)" fg:x="76" fg:w="5"/><text x="2.3866%" y="351.50"></text></g><g><title>`0x7FFB1E1C6F81 (1 samples, 0.03%)</title><rect x="2.2491%" y="325" width="0.0281%" height="15" fill="rgb(251,153,30)" fg:x="80" fg:w="1"/><text x="2.4991%" y="335.50"></text></g><g><title>`0x7FFB1E1BF34D (1 samples, 0.03%)</title><rect x="2.2491%" y="309" width="0.0281%" height="15" fill="rgb(239,152,38)" fg:x="80" fg:w="1"/><text x="2.4991%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lsdescent::lsdescent&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (6 samples, 0.17%)</title><rect x="2.1366%" y="357" width="0.1687%" height="15" fill="rgb(249,139,47)" fg:x="76" fg:w="6"/><text x="2.3866%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::min_by(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;f64&gt; &gt;, Rust_MCS::gls::lsdescent::lsdescent::closure_env$1 (1 samples, 0.03%)</title><rect x="2.2772%" y="341" width="0.0281%" height="15" fill="rgb(244,64,35)" fg:x="81" fg:w="1"/><text x="2.5272%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::reduce(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;f64&gt; &gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;f64&gt; &gt;,Rust_MCS::gls::lsdescent::lsdescent::closure_env$1 (1 samples, 0.03%)</title><rect x="2.2772%" y="325" width="0.0281%" height="15" fill="rgb(216,46,15)" fg:x="81" fg:w="1"/><text x="2.5272%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::enumerate::impl$1::fold(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;f64&gt; &gt;, tuple$&lt;usize,ref$&lt;f64&gt; &gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;f64&gt; &gt;,Rust_MCS::gls::lsdescent::lsdescent::closure_env$1 (1 samples, 0.03%)</title><rect x="2.2772%" y="309" width="0.0281%" height="15" fill="rgb(250,74,19)" fg:x="81" fg:w="1"/><text x="2.5272%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;f64&gt;, tuple$&lt;usize,ref$&lt;f64&gt; &gt;, core::iter::adapters::enumerate::impl$1::fold::enumerate::closure_env$0&lt;ref$&lt;f64&gt;,tuple$&lt;usize,ref$&lt;f64&gt; &gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;f64&gt; &gt;,Rust_MCS::gls::lsdescent::lsdescent::closure_env$1 (1 samples, 0.03%)</title><rect x="2.2772%" y="293" width="0.0281%" height="15" fill="rgb(249,42,33)" fg:x="81" fg:w="1"/><text x="2.5272%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::enumerate::impl$1::fold::enumerate::closure$0(core::iter::adapters::enumerate::impl$1::fold::enumerate::closure_env$0&lt;ref$&lt;f64&gt;,tuple$&lt;usize,ref$&lt;f64&gt; &gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;f64&gt; &gt;,Rust_MCS::gls::lsdescent::lsdescent::closure_env$1&lt;6&gt; &gt; &gt;*, tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="2.2772%" y="277" width="0.0281%" height="15" fill="rgb(242,149,17)" fg:x="81" fg:w="1"/><text x="2.5272%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::min_by::fold::closure$0(core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;f64&gt; &gt;,Rust_MCS::gls::lsdescent::lsdescent::closure_env$1&lt;6&gt; &gt;*, tuple$&lt;usize,ref$&lt;f64&gt; &gt;, tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="2.2772%" y="261" width="0.0281%" height="15" fill="rgb(244,29,21)" fg:x="81" fg:w="1"/><text x="2.5272%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::cmp::min_by(tuple$&lt;usize,ref$&lt;f64&gt; &gt;, tuple$&lt;usize,ref$&lt;f64&gt; &gt;, Rust_MCS::gls::lsdescent::lsdescent::closure_env$1 (1 samples, 0.03%)</title><rect x="2.2772%" y="245" width="0.0281%" height="15" fill="rgb(220,130,37)" fg:x="81" fg:w="1"/><text x="2.5272%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.3334%" y="341" width="0.0281%" height="15" fill="rgb(211,67,2)" fg:x="83" fg:w="1"/><text x="2.5834%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::iter::impl$182::all(core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.3334%" y="325" width="0.0281%" height="15" fill="rgb(235,68,52)" fg:x="83" fg:w="1"/><text x="2.5834%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.3334%" y="309" width="0.0281%" height="15" fill="rgb(246,142,3)" fg:x="83" fg:w="1"/><text x="2.5834%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;bool&gt;*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.3334%" y="293" width="0.0281%" height="15" fill="rgb(241,25,7)" fg:x="83" fg:w="1"/><text x="2.5834%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::len (1 samples, 0.03%)</title><rect x="2.3615%" y="341" width="0.0281%" height="15" fill="rgb(242,119,39)" fg:x="84" fg:w="1"/><text x="2.6115%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::spec_extend::impl$1::spec_extend&lt;bool,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt; &gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="2.3615%" y="325" width="0.0281%" height="15" fill="rgb(241,98,45)" fg:x="84" fg:w="1"/><text x="2.6115%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="2.3615%" y="309" width="0.0281%" height="15" fill="rgb(254,28,30)" fg:x="84" fg:w="1"/><text x="2.6115%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="2.3615%" y="293" width="0.0281%" height="15" fill="rgb(241,142,54)" fg:x="84" fg:w="1"/><text x="2.6115%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="2.3615%" y="277" width="0.0281%" height="15" fill="rgb(222,85,15)" fg:x="84" fg:w="1"/><text x="2.6115%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::take::impl$1::fold(core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,bool,tuple$&lt;&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="2.3615%" y="261" width="0.0281%" height="15" fill="rgb(210,85,47)" fg:x="84" fg:w="1"/><text x="2.6115%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::take::impl$9::spec_fold(core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,bool,tuple$&lt;&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="2.3615%" y="245" width="0.0281%" height="15" fill="rgb(224,206,25)" fg:x="84" fg:w="1"/><text x="2.6115%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::take::impl$1::try_fold(core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,bool,tuple$&lt;&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="2.3615%" y="229" width="0.0281%" height="15" fill="rgb(243,201,19)" fg:x="84" fg:w="1"/><text x="2.6115%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::try_fold(core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::take::impl$1::try_fold::check::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,tuple$&lt;&gt;,core::ops::try_trait::NeverShortCircuit&lt;tuple$&lt;&gt; &gt;,core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;bool&gt;,ref$&lt;bool&gt; &gt;,bool,tuple$&lt;&gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;bool,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;bool,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter&lt;bool&gt; &gt; &gt; &gt;,Rust_MCS::gls::lslocal::lslocal::closure_env$1 (1 samples, 0.03%)</title><rect x="2.3615%" y="213" width="0.0281%" height="15" fill="rgb(236,59,4)" fg:x="84" fg:w="1"/><text x="2.6115%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::zip::impl$1::next(core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.3615%" y="197" width="0.0281%" height="15" fill="rgb(254,179,45)" fg:x="84" fg:w="1"/><text x="2.6115%" y="207.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::zip::impl$3::next(core::iter::adapters::zip::Zip&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt; &gt;,core::iter::adapters::chain::Chain&lt;core::iter::sources::once::Once&lt;ref$&lt;bool&gt; &gt;,core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.3615%" y="181" width="0.0281%" height="15" fill="rgb(226,14,10)" fg:x="84" fg:w="1"/><text x="2.6115%" y="191.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::option::impl$39::branch(enum2$&lt;core::option::Option&lt;ref$ (1 samples, 0.03%)</title><rect x="2.3615%" y="165" width="0.0281%" height="15" fill="rgb(244,27,41)" fg:x="84" fg:w="1"/><text x="2.6115%" y="175.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.3897%" y="341" width="0.0281%" height="15" fill="rgb(235,35,32)" fg:x="85" fg:w="1"/><text x="2.6397%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::take::impl$10::spec_for_each(core::iter::adapters::take::Take&lt;core::slice::iter::Windows&lt;f64&gt; &gt;, Rust_MCS::gls::lslocal::lslocal::closure_env$0 (1 samples, 0.03%)</title><rect x="2.3897%" y="325" width="0.0281%" height="15" fill="rgb(218,68,31)" fg:x="85" fg:w="1"/><text x="2.6397%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lslocal::lslocal::closure$0(Rust_MCS::gls::lslocal::lslocal::closure_env$0&lt;6&gt;*, ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.3897%" y="309" width="0.0281%" height="15" fill="rgb(207,120,37)" fg:x="85" fg:w="1"/><text x="2.6397%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="2.3897%" y="293" width="0.0281%" height="15" fill="rgb(227,98,0)" fg:x="85" fg:w="1"/><text x="2.6397%" y="303.50"></text></g><g><title>`0x7FFB1E1C6AB7 (1 samples, 0.03%)</title><rect x="2.4178%" y="341" width="0.0281%" height="15" fill="rgb(207,7,3)" fg:x="86" fg:w="1"/><text x="2.6678%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lslocal::lslocal&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (6 samples, 0.17%)</title><rect x="2.3053%" y="357" width="0.1687%" height="15" fill="rgb(206,98,19)" fg:x="82" fg:w="6"/><text x="2.5553%" y="367.50"></text></g><g><title>`0x7FFB1E1C6F81 (1 samples, 0.03%)</title><rect x="2.4459%" y="341" width="0.0281%" height="15" fill="rgb(217,5,26)" fg:x="87" fg:w="1"/><text x="2.6959%" y="351.50"></text></g><g><title>`0x7FFB1E1BF572 (1 samples, 0.03%)</title><rect x="2.4459%" y="325" width="0.0281%" height="15" fill="rgb(235,190,38)" fg:x="87" fg:w="1"/><text x="2.6959%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.4740%" y="325" width="0.0281%" height="15" fill="rgb(247,86,24)" fg:x="88" fg:w="1"/><text x="2.7240%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.4740%" y="309" width="0.0281%" height="15" fill="rgb(205,101,16)" fg:x="88" fg:w="1"/><text x="2.7240%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.4740%" y="293" width="0.0281%" height="15" fill="rgb(246,168,33)" fg:x="88" fg:w="1"/><text x="2.7240%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.4740%" y="277" width="0.0281%" height="15" fill="rgb(231,114,1)" fg:x="88" fg:w="1"/><text x="2.7240%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.4740%" y="261" width="0.0281%" height="15" fill="rgb(207,184,53)" fg:x="88" fg:w="1"/><text x="2.7240%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.4740%" y="245" width="0.0281%" height="15" fill="rgb(224,95,51)" fg:x="88" fg:w="1"/><text x="2.7240%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.4740%" y="229" width="0.0281%" height="15" fill="rgb(212,188,45)" fg:x="88" fg:w="1"/><text x="2.7240%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="2.4740%" y="213" width="0.0281%" height="15" fill="rgb(223,154,38)" fg:x="88" fg:w="1"/><text x="2.7240%" y="223.50"></text></g><g><title>`0x7FFB1E1BBE86 (1 samples, 0.03%)</title><rect x="2.4740%" y="197" width="0.0281%" height="15" fill="rgb(251,22,52)" fg:x="88" fg:w="1"/><text x="2.7240%" y="207.50"></text></g><g><title>`0x7FFB1E1BBFC4 (1 samples, 0.03%)</title><rect x="2.4740%" y="181" width="0.0281%" height="15" fill="rgb(229,209,22)" fg:x="88" fg:w="1"/><text x="2.7240%" y="191.50"></text></g><g><title>`0x7FFB1E1BC6A3 (1 samples, 0.03%)</title><rect x="2.4740%" y="165" width="0.0281%" height="15" fill="rgb(234,138,34)" fg:x="88" fg:w="1"/><text x="2.7240%" y="175.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.5021%" y="325" width="0.0281%" height="15" fill="rgb(212,95,11)" fg:x="89" fg:w="1"/><text x="2.7521%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::sum(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::adapters::filter::impl$3::count::to_usize::closure_env$0&lt;ref$ (1 samples, 0.03%)</title><rect x="2.5021%" y="309" width="0.0281%" height="15" fill="rgb(240,179,47)" fg:x="89" fg:w="1"/><text x="2.7521%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::accum::impl$48::sum(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::adapters::filter::impl$3::count::to_usize::closure_env$0&lt;ref$ (1 samples, 0.03%)</title><rect x="2.5021%" y="293" width="0.0281%" height="15" fill="rgb(240,163,11)" fg:x="89" fg:w="1"/><text x="2.7521%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::adapters::filter::impl$3::count::to_usize::closure_env$0&lt;ref$&lt;bool&gt;,Rust_MCS::gls::lssort::lssort::closure_env$4&gt; &gt;, unsigned long long, core::iter::traits::accum::impl$48::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::adapters::filter::impl$3::count::to_usize::closure_env$0&lt;ref$ (1 samples, 0.03%)</title><rect x="2.5021%" y="277" width="0.0281%" height="15" fill="rgb(236,37,12)" fg:x="89" fg:w="1"/><text x="2.7521%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;bool&gt;, unsigned long long, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;bool&gt;,usize,usize,core::iter::adapters::filter::impl$3::count::to_usize::closure_env$0&lt;ref$&lt;bool&gt;,Rust_MCS::gls::lssort::lssort::closure_env$4&gt;,core::iter::traits::accum::impl$48::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;bool&gt;,core::iter::adapters::filter::impl$3::count::to_usize::closure_env$0&lt;ref$ (1 samples, 0.03%)</title><rect x="2.5021%" y="261" width="0.0281%" height="15" fill="rgb(232,164,16)" fg:x="89" fg:w="1"/><text x="2.7521%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;bool&gt;*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.5021%" y="245" width="0.0281%" height="15" fill="rgb(244,205,15)" fg:x="89" fg:w="1"/><text x="2.7521%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lspar::lspar&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 0.08%)</title><rect x="2.4740%" y="357" width="0.0843%" height="15" fill="rgb(223,117,47)" fg:x="88" fg:w="3"/><text x="2.7240%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 0.08%)</title><rect x="2.4740%" y="341" width="0.0843%" height="15" fill="rgb(244,107,35)" fg:x="88" fg:w="3"/><text x="2.7240%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::select::partition_at_index&lt;f64,core::slice::impl$0::select_nth_unstable_by::closure_env$0&lt;f64,Rust_MCS::gls::lssort::lssort::closure_env$9&gt; &gt;(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.5302%" y="325" width="0.0281%" height="15" fill="rgb(205,140,8)" fg:x="90" fg:w="1"/><text x="2.7802%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::select::partition_at_index_loop(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, enum2$&lt;core::option::Option&lt;ref$&lt;f64&gt; &gt; &gt;, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.5302%" y="309" width="0.0281%" height="15" fill="rgb(228,84,46)" fg:x="90" fg:w="1"/><text x="2.7802%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.5302%" y="293" width="0.0281%" height="15" fill="rgb(254,188,9)" fg:x="90" fg:w="1"/><text x="2.7802%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::shared::smallsort::insert_tail(double*, double*, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.5302%" y="277" width="0.0281%" height="15" fill="rgb(206,112,54)" fg:x="90" fg:w="1"/><text x="2.7802%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::impl$0::select_nth_unstable_by::closure$0(core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.5302%" y="261" width="0.0281%" height="15" fill="rgb(216,84,49)" fg:x="90" fg:w="1"/><text x="2.7802%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lssort::lssort::closure$9 (1 samples, 0.03%)</title><rect x="2.5302%" y="245" width="0.0281%" height="15" fill="rgb(214,194,35)" fg:x="90" fg:w="1"/><text x="2.7802%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::f64::impl$0::total_cmp (1 samples, 0.03%)</title><rect x="2.5302%" y="229" width="0.0281%" height="15" fill="rgb(249,28,3)" fg:x="90" fg:w="1"/><text x="2.7802%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.5864%" y="309" width="0.0281%" height="15" fill="rgb(222,56,52)" fg:x="92" fg:w="1"/><text x="2.8364%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.5864%" y="293" width="0.0281%" height="15" fill="rgb(245,217,50)" fg:x="92" fg:w="1"/><text x="2.8364%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.5864%" y="277" width="0.0281%" height="15" fill="rgb(213,201,24)" fg:x="92" fg:w="1"/><text x="2.8364%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.5864%" y="261" width="0.0281%" height="15" fill="rgb(248,116,28)" fg:x="92" fg:w="1"/><text x="2.8364%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.5864%" y="245" width="0.0281%" height="15" fill="rgb(219,72,43)" fg:x="92" fg:w="1"/><text x="2.8364%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.5864%" y="229" width="0.0281%" height="15" fill="rgb(209,138,14)" fg:x="92" fg:w="1"/><text x="2.8364%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.5864%" y="213" width="0.0281%" height="15" fill="rgb(222,18,33)" fg:x="92" fg:w="1"/><text x="2.8364%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="2.5864%" y="197" width="0.0281%" height="15" fill="rgb(213,199,7)" fg:x="92" fg:w="1"/><text x="2.8364%" y="207.50"></text></g><g><title>`0x7FFB1E1BBE86 (1 samples, 0.03%)</title><rect x="2.5864%" y="181" width="0.0281%" height="15" fill="rgb(250,110,10)" fg:x="92" fg:w="1"/><text x="2.8364%" y="191.50"></text></g><g><title>`0x7FFB1E1BBFC4 (1 samples, 0.03%)</title><rect x="2.5864%" y="165" width="0.0281%" height="15" fill="rgb(248,123,6)" fg:x="92" fg:w="1"/><text x="2.8364%" y="175.50"></text></g><g><title>`0x7FFB1E1BC679 (1 samples, 0.03%)</title><rect x="2.5864%" y="149" width="0.0281%" height="15" fill="rgb(206,91,31)" fg:x="92" fg:w="1"/><text x="2.8364%" y="159.50"></text></g><g><title>`0x7FFB1E1E946B (1 samples, 0.03%)</title><rect x="2.6146%" y="85" width="0.0281%" height="15" fill="rgb(211,154,13)" fg:x="93" fg:w="1"/><text x="2.8646%" y="95.50"></text></g><g><title>`0x7FFB1E1C02C2 (1 samples, 0.03%)</title><rect x="2.6146%" y="69" width="0.0281%" height="15" fill="rgb(225,148,7)" fg:x="93" fg:w="1"/><text x="2.8646%" y="79.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.06%)</title><rect x="2.6146%" y="309" width="0.0562%" height="15" fill="rgb(220,160,43)" fg:x="93" fg:w="2"/><text x="2.8646%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (2 samples, 0.06%)</title><rect x="2.6146%" y="293" width="0.0562%" height="15" fill="rgb(213,52,39)" fg:x="93" fg:w="2"/><text x="2.8646%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (2 samples, 0.06%)</title><rect x="2.6146%" y="277" width="0.0562%" height="15" fill="rgb(243,137,7)" fg:x="93" fg:w="2"/><text x="2.8646%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (2 samples, 0.06%)</title><rect x="2.6146%" y="261" width="0.0562%" height="15" fill="rgb(230,79,13)" fg:x="93" fg:w="2"/><text x="2.8646%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity (2 samples, 0.06%)</title><rect x="2.6146%" y="245" width="0.0562%" height="15" fill="rgb(247,105,23)" fg:x="93" fg:w="2"/><text x="2.8646%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="2.6146%" y="229" width="0.0562%" height="15" fill="rgb(223,179,41)" fg:x="93" fg:w="2"/><text x="2.8646%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="2.6146%" y="213" width="0.0562%" height="15" fill="rgb(218,9,34)" fg:x="93" fg:w="2"/><text x="2.8646%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="2.6146%" y="197" width="0.0562%" height="15" fill="rgb(222,106,8)" fg:x="93" fg:w="2"/><text x="2.8646%" y="207.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.06%)</title><rect x="2.6146%" y="181" width="0.0562%" height="15" fill="rgb(211,220,0)" fg:x="93" fg:w="2"/><text x="2.8646%" y="191.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::impl$1::allocate (2 samples, 0.06%)</title><rect x="2.6146%" y="165" width="0.0562%" height="15" fill="rgb(229,52,16)" fg:x="93" fg:w="2"/><text x="2.8646%" y="175.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::Global::alloc_impl (2 samples, 0.06%)</title><rect x="2.6146%" y="149" width="0.0562%" height="15" fill="rgb(212,155,18)" fg:x="93" fg:w="2"/><text x="2.8646%" y="159.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::alloc (2 samples, 0.06%)</title><rect x="2.6146%" y="133" width="0.0562%" height="15" fill="rgb(242,21,14)" fg:x="93" fg:w="2"/><text x="2.8646%" y="143.50"></text></g><g><title>`0x7FFB1E1BBE86 (2 samples, 0.06%)</title><rect x="2.6146%" y="117" width="0.0562%" height="15" fill="rgb(222,19,48)" fg:x="93" fg:w="2"/><text x="2.8646%" y="127.50"></text></g><g><title>`0x7FFB1E1BC20E (2 samples, 0.06%)</title><rect x="2.6146%" y="101" width="0.0562%" height="15" fill="rgb(232,45,27)" fg:x="93" fg:w="2"/><text x="2.8646%" y="111.50"></text></g><g><title>`0x7FFB1E1E9EDD (1 samples, 0.03%)</title><rect x="2.6427%" y="85" width="0.0281%" height="15" fill="rgb(249,103,42)" fg:x="94" fg:w="1"/><text x="2.8927%" y="95.50"></text></g><g><title>`0x7FFB1E1B9E75 (1 samples, 0.03%)</title><rect x="2.6427%" y="69" width="0.0281%" height="15" fill="rgb(246,81,33)" fg:x="94" fg:w="1"/><text x="2.8927%" y="79.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lslocal::lslocal&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (5 samples, 0.14%)</title><rect x="2.5583%" y="341" width="0.1406%" height="15" fill="rgb(252,33,42)" fg:x="91" fg:w="5"/><text x="2.8083%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (4 samples, 0.11%)</title><rect x="2.5864%" y="325" width="0.1125%" height="15" fill="rgb(209,212,41)" fg:x="92" fg:w="4"/><text x="2.8364%" y="335.50"></text></g><g><title>`0x7FFB1E1C6F81 (1 samples, 0.03%)</title><rect x="2.6708%" y="309" width="0.0281%" height="15" fill="rgb(207,154,6)" fg:x="95" fg:w="1"/><text x="2.9208%" y="319.50"></text></g><g><title>`0x7FFB1E1BEDF3 (1 samples, 0.03%)</title><rect x="2.6708%" y="293" width="0.0281%" height="15" fill="rgb(223,64,47)" fg:x="95" fg:w="1"/><text x="2.9208%" y="303.50"></text></g><g><title>`0x7FFB1E1C0F95 (1 samples, 0.03%)</title><rect x="2.6708%" y="277" width="0.0281%" height="15" fill="rgb(211,161,38)" fg:x="95" fg:w="1"/><text x="2.9208%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lsquart::lsquart&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (6 samples, 0.17%)</title><rect x="2.5583%" y="357" width="0.1687%" height="15" fill="rgb(219,138,40)" fg:x="91" fg:w="6"/><text x="2.8083%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.6989%" y="341" width="0.0281%" height="15" fill="rgb(241,228,46)" fg:x="96" fg:w="1"/><text x="2.9489%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::select::partition_at_index&lt;f64,core::slice::impl$0::select_nth_unstable_by::closure_env$0&lt;f64,Rust_MCS::gls::lssort::lssort::closure_env$9&gt; &gt;(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.6989%" y="325" width="0.0281%" height="15" fill="rgb(223,209,38)" fg:x="96" fg:w="1"/><text x="2.9489%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::select::partition_at_index_loop(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, enum2$&lt;core::option::Option&lt;ref$&lt;f64&gt; &gt; &gt;, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.6989%" y="309" width="0.0281%" height="15" fill="rgb(236,164,45)" fg:x="96" fg:w="1"/><text x="2.9489%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.03%)</title><rect x="2.6989%" y="293" width="0.0281%" height="15" fill="rgb(231,15,5)" fg:x="96" fg:w="1"/><text x="2.9489%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::mut_ptr::impl$0::add (1 samples, 0.03%)</title><rect x="2.6989%" y="277" width="0.0281%" height="15" fill="rgb(252,35,15)" fg:x="96" fg:w="1"/><text x="2.9489%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::lsrange::lsrange&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="2.7270%" y="357" width="0.0281%" height="15" fill="rgb(248,181,18)" fg:x="97" fg:w="1"/><text x="2.9770%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::f64::impl$0::max (1 samples, 0.03%)</title><rect x="2.7270%" y="341" width="0.0281%" height="15" fill="rgb(233,39,42)" fg:x="97" fg:w="1"/><text x="2.9770%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (23 samples, 0.65%)</title><rect x="2.1366%" y="405" width="0.6466%" height="15" fill="rgb(238,110,33)" fg:x="76" fg:w="23"/><text x="2.3866%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_slice (23 samples, 0.65%)</title><rect x="2.1366%" y="389" width="0.6466%" height="15" fill="rgb(233,195,10)" fg:x="76" fg:w="23"/><text x="2.3866%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::gls::gls&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (23 samples, 0.65%)</title><rect x="2.1366%" y="373" width="0.6466%" height="15" fill="rgb(254,105,3)" fg:x="76" fg:w="23"/><text x="2.3866%" y="383.50"></text></g><g><title>`0x7FFB1E1C6AB7 (1 samples, 0.03%)</title><rect x="2.7551%" y="357" width="0.0281%" height="15" fill="rgb(221,225,9)" fg:x="98" fg:w="1"/><text x="3.0051%" y="367.50"></text></g><g><title>`0x7FFB1E1C2598 (1 samples, 0.03%)</title><rect x="2.7832%" y="357" width="0.0281%" height="15" fill="rgb(224,227,45)" fg:x="99" fg:w="1"/><text x="3.0332%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::lsearch::lsearch&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, enum2$&lt;core::option::Option&lt;usize&gt; &gt;, Rust_MCS::StopStruct*, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (77 samples, 2.16%)</title><rect x="0.7872%" y="421" width="2.1647%" height="15" fill="rgb(229,198,43)" fg:x="28" fg:w="77"/><text x="1.0372%" y="431.50">R..</text></g><g><title>`0x7FFB1E1C6F81 (6 samples, 0.17%)</title><rect x="2.7832%" y="405" width="0.1687%" height="15" fill="rgb(206,209,35)" fg:x="99" fg:w="6"/><text x="3.0332%" y="415.50"></text></g><g><title>`0x7FFB1E1BEF4A (6 samples, 0.17%)</title><rect x="2.7832%" y="389" width="0.1687%" height="15" fill="rgb(245,195,53)" fg:x="99" fg:w="6"/><text x="3.0332%" y="399.50"></text></g><g><title>`0x7FFB1E258A5A (6 samples, 0.17%)</title><rect x="2.7832%" y="373" width="0.1687%" height="15" fill="rgb(240,92,26)" fg:x="99" fg:w="6"/><text x="3.0332%" y="383.50"></text></g><g><title>`0x7FFB1E1C25FE (5 samples, 0.14%)</title><rect x="2.8114%" y="357" width="0.1406%" height="15" fill="rgb(207,40,23)" fg:x="100" fg:w="5"/><text x="3.0614%" y="367.50"></text></g><g><title>`0x7FFB1E289549 (5 samples, 0.14%)</title><rect x="2.8114%" y="341" width="0.1406%" height="15" fill="rgb(223,111,35)" fg:x="100" fg:w="5"/><text x="3.0614%" y="351.50"></text></g><g><title>`0x7FFB1E2FFBB4 (5 samples, 0.14%)</title><rect x="2.8114%" y="325" width="0.1406%" height="15" fill="rgb(229,147,28)" fg:x="100" fg:w="5"/><text x="3.0614%" y="335.50"></text></g><g><title>`0x7FFB1E1C9AFF (1 samples, 0.03%)</title><rect x="2.9519%" y="149" width="0.0281%" height="15" fill="rgb(211,29,28)" fg:x="105" fg:w="1"/><text x="3.2019%" y="159.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="2.9519%" y="389" width="0.0562%" height="15" fill="rgb(228,72,33)" fg:x="105" fg:w="2"/><text x="3.2019%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_generic(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;, nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="2.9519%" y="373" width="0.0562%" height="15" fill="rgb(205,214,31)" fg:x="105" fg:w="2"/><text x="3.2019%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::default_allocator::impl$9::reallocate_copy(nalgebra::base::dimension::Const&lt;3&gt;, nalgebra::base::dimension::Dyn, nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="2.9519%" y="357" width="0.0562%" height="15" fill="rgb(224,111,15)" fg:x="105" fg:w="2"/><text x="3.2019%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt;::resize(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="2.9519%" y="341" width="0.0562%" height="15" fill="rgb(253,21,26)" fg:x="105" fg:w="2"/><text x="3.2019%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (2 samples, 0.06%)</title><rect x="2.9519%" y="325" width="0.0562%" height="15" fill="rgb(245,139,43)" fg:x="105" fg:w="2"/><text x="3.2019%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (2 samples, 0.06%)</title><rect x="2.9519%" y="309" width="0.0562%" height="15" fill="rgb(252,170,7)" fg:x="105" fg:w="2"/><text x="3.2019%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (2 samples, 0.06%)</title><rect x="2.9519%" y="293" width="0.0562%" height="15" fill="rgb(231,118,14)" fg:x="105" fg:w="2"/><text x="3.2019%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (2 samples, 0.06%)</title><rect x="2.9519%" y="277" width="0.0562%" height="15" fill="rgb(238,83,0)" fg:x="105" fg:w="2"/><text x="3.2019%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (2 samples, 0.06%)</title><rect x="2.9519%" y="261" width="0.0562%" height="15" fill="rgb(221,39,39)" fg:x="105" fg:w="2"/><text x="3.2019%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.06%)</title><rect x="2.9519%" y="245" width="0.0562%" height="15" fill="rgb(222,119,46)" fg:x="105" fg:w="2"/><text x="3.2019%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.06%)</title><rect x="2.9519%" y="229" width="0.0562%" height="15" fill="rgb(222,165,49)" fg:x="105" fg:w="2"/><text x="3.2019%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.06%)</title><rect x="2.9519%" y="213" width="0.0562%" height="15" fill="rgb(219,113,52)" fg:x="105" fg:w="2"/><text x="3.2019%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (2 samples, 0.06%)</title><rect x="2.9519%" y="197" width="0.0562%" height="15" fill="rgb(214,7,15)" fg:x="105" fg:w="2"/><text x="3.2019%" y="207.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (2 samples, 0.06%)</title><rect x="2.9519%" y="181" width="0.0562%" height="15" fill="rgb(235,32,4)" fg:x="105" fg:w="2"/><text x="3.2019%" y="191.50"></text></g><g><title>`0x7FFB1E1C9A86 (2 samples, 0.06%)</title><rect x="2.9519%" y="165" width="0.0562%" height="15" fill="rgb(238,90,54)" fg:x="105" fg:w="2"/><text x="3.2019%" y="175.50"></text></g><g><title>`0x7FFB1E1C9BC5 (1 samples, 0.03%)</title><rect x="2.9800%" y="149" width="0.0281%" height="15" fill="rgb(213,208,19)" fg:x="106" fg:w="1"/><text x="3.2300%" y="159.50"></text></g><g><title>`0x7FFB1E1CA7B5 (1 samples, 0.03%)</title><rect x="2.9800%" y="133" width="0.0281%" height="15" fill="rgb(233,156,4)" fg:x="106" fg:w="1"/><text x="3.2300%" y="143.50"></text></g><g><title>`0x7FFB1E1C2144 (1 samples, 0.03%)</title><rect x="2.9800%" y="117" width="0.0281%" height="15" fill="rgb(207,194,5)" fg:x="106" fg:w="1"/><text x="3.2300%" y="127.50"></text></g><g><title>`0x7FFB1E1C1383 (1 samples, 0.03%)</title><rect x="2.9800%" y="101" width="0.0281%" height="15" fill="rgb(206,111,30)" fg:x="106" fg:w="1"/><text x="3.2300%" y="111.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::impl$42::clone(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="3.0082%" y="389" width="0.0281%" height="15" fill="rgb(243,70,54)" fg:x="107" fg:w="1"/><text x="3.2582%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::vec_storage::impl$23::clone(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="3.0082%" y="373" width="0.0281%" height="15" fill="rgb(242,28,8)" fg:x="107" fg:w="1"/><text x="3.2582%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="3.0082%" y="357" width="0.0281%" height="15" fill="rgb(219,106,18)" fg:x="107" fg:w="1"/><text x="3.2582%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="3.0082%" y="341" width="0.0281%" height="15" fill="rgb(244,222,10)" fg:x="107" fg:w="1"/><text x="3.2582%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="3.0082%" y="325" width="0.0281%" height="15" fill="rgb(236,179,52)" fg:x="107" fg:w="1"/><text x="3.2582%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="3.0082%" y="309" width="0.0281%" height="15" fill="rgb(213,23,39)" fg:x="107" fg:w="1"/><text x="3.2582%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="3.0082%" y="293" width="0.0281%" height="15" fill="rgb(238,48,10)" fg:x="107" fg:w="1"/><text x="3.2582%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="3.0082%" y="277" width="0.0281%" height="15" fill="rgb(251,196,23)" fg:x="107" fg:w="1"/><text x="3.2582%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="3.0082%" y="261" width="0.0281%" height="15" fill="rgb(250,152,24)" fg:x="107" fg:w="1"/><text x="3.2582%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="3.0082%" y="245" width="0.0281%" height="15" fill="rgb(209,150,17)" fg:x="107" fg:w="1"/><text x="3.2582%" y="255.50"></text></g><g><title>`0x7FFB1E1BBE86 (1 samples, 0.03%)</title><rect x="3.0082%" y="229" width="0.0281%" height="15" fill="rgb(234,202,34)" fg:x="107" fg:w="1"/><text x="3.2582%" y="239.50"></text></g><g><title>`0x7FFB1E1BC20E (1 samples, 0.03%)</title><rect x="3.0082%" y="213" width="0.0281%" height="15" fill="rgb(253,148,53)" fg:x="107" fg:w="1"/><text x="3.2582%" y="223.50"></text></g><g><title>`0x7FFB1E1E9775 (1 samples, 0.03%)</title><rect x="3.0082%" y="197" width="0.0281%" height="15" fill="rgb(218,129,16)" fg:x="107" fg:w="1"/><text x="3.2582%" y="207.50"></text></g><g><title>`0x7FFB1E1C6930 (2 samples, 0.06%)</title><rect x="3.0363%" y="389" width="0.0562%" height="15" fill="rgb(216,85,19)" fg:x="108" fg:w="2"/><text x="3.2863%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::split_func::splinit&lt;6,1000&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, unsigned long long[1000]*, unsigned long long*, enum2$&lt;core::option::Option&lt;usize&gt; &gt;*, unsigned long long*, unsigned long long*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (6 samples, 0.17%)</title><rect x="2.9519%" y="421" width="0.1687%" height="15" fill="rgb(235,228,7)" fg:x="105" fg:w="6"/><text x="3.2019%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally_mut&lt;f64,nalgebra::base::dimension::Const&lt;3&gt; &gt; (6 samples, 0.17%)</title><rect x="2.9519%" y="405" width="0.1687%" height="15" fill="rgb(245,175,0)" fg:x="105" fg:w="6"/><text x="3.2019%" y="415.50"></text></g><g><title>`0x7FFB1E1C6F81 (1 samples, 0.03%)</title><rect x="3.0925%" y="389" width="0.0281%" height="15" fill="rgb(208,168,36)" fg:x="110" fg:w="1"/><text x="3.3425%" y="399.50"></text></g><g><title>`0x7FFB1E1BEF4A (1 samples, 0.03%)</title><rect x="3.0925%" y="373" width="0.0281%" height="15" fill="rgb(246,171,24)" fg:x="110" fg:w="1"/><text x="3.3425%" y="383.50"></text></g><g><title>`0x7FFB1E258A5A (1 samples, 0.03%)</title><rect x="3.0925%" y="357" width="0.0281%" height="15" fill="rgb(215,142,24)" fg:x="110" fg:w="1"/><text x="3.3425%" y="367.50"></text></g><g><title>`0x7FFB1E1C25FE (1 samples, 0.03%)</title><rect x="3.0925%" y="341" width="0.0281%" height="15" fill="rgb(250,187,7)" fg:x="110" fg:w="1"/><text x="3.3425%" y="351.50"></text></g><g><title>`0x7FFB1E289549 (1 samples, 0.03%)</title><rect x="3.0925%" y="325" width="0.0281%" height="15" fill="rgb(228,66,33)" fg:x="110" fg:w="1"/><text x="3.3425%" y="335.50"></text></g><g><title>`0x7FFB1E2FFBB4 (1 samples, 0.03%)</title><rect x="3.0925%" y="309" width="0.0281%" height="15" fill="rgb(234,215,21)" fg:x="110" fg:w="1"/><text x="3.3425%" y="319.50"></text></g><g><title>`0x7FFB1E305113 (8 samples, 0.22%)</title><rect x="3.3736%" y="149" width="0.2249%" height="15" fill="rgb(222,191,20)" fg:x="120" fg:w="8"/><text x="3.6236%" y="159.50"></text></g><g><title>`0x7FFB1E1CAB69 (12 samples, 0.34%)</title><rect x="3.3736%" y="165" width="0.3374%" height="15" fill="rgb(245,79,54)" fg:x="120" fg:w="12"/><text x="3.6236%" y="175.50"></text></g><g><title>`0x7FFB1E305117 (4 samples, 0.11%)</title><rect x="3.5985%" y="149" width="0.1125%" height="15" fill="rgb(240,10,37)" fg:x="128" fg:w="4"/><text x="3.8485%" y="159.50"></text></g><g><title>`0x7FFB1E1BEF4A (1 samples, 0.03%)</title><rect x="3.7110%" y="133" width="0.0281%" height="15" fill="rgb(214,192,32)" fg:x="132" fg:w="1"/><text x="3.9610%" y="143.50"></text></g><g><title>`0x7FFB1E258A5A (1 samples, 0.03%)</title><rect x="3.7110%" y="117" width="0.0281%" height="15" fill="rgb(209,36,54)" fg:x="132" fg:w="1"/><text x="3.9610%" y="127.50"></text></g><g><title>`0x7FFB1E1C25FE (1 samples, 0.03%)</title><rect x="3.7110%" y="101" width="0.0281%" height="15" fill="rgb(220,10,11)" fg:x="132" fg:w="1"/><text x="3.9610%" y="111.50"></text></g><g><title>`0x7FFB1E289549 (1 samples, 0.03%)</title><rect x="3.7110%" y="85" width="0.0281%" height="15" fill="rgb(221,106,17)" fg:x="132" fg:w="1"/><text x="3.9610%" y="95.50"></text></g><g><title>`0x7FFB1E2FFBB4 (1 samples, 0.03%)</title><rect x="3.7110%" y="69" width="0.0281%" height="15" fill="rgb(251,142,44)" fg:x="132" fg:w="1"/><text x="3.9610%" y="79.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (16 samples, 0.45%)</title><rect x="3.3736%" y="357" width="0.4498%" height="15" fill="rgb(238,13,15)" fg:x="120" fg:w="16"/><text x="3.6236%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (16 samples, 0.45%)</title><rect x="3.3736%" y="341" width="0.4498%" height="15" fill="rgb(208,107,27)" fg:x="120" fg:w="16"/><text x="3.6236%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (16 samples, 0.45%)</title><rect x="3.3736%" y="325" width="0.4498%" height="15" fill="rgb(205,136,37)" fg:x="120" fg:w="16"/><text x="3.6236%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (16 samples, 0.45%)</title><rect x="3.3736%" y="309" width="0.4498%" height="15" fill="rgb(250,205,27)" fg:x="120" fg:w="16"/><text x="3.6236%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (16 samples, 0.45%)</title><rect x="3.3736%" y="293" width="0.4498%" height="15" fill="rgb(210,80,43)" fg:x="120" fg:w="16"/><text x="3.6236%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (16 samples, 0.45%)</title><rect x="3.3736%" y="277" width="0.4498%" height="15" fill="rgb(247,160,36)" fg:x="120" fg:w="16"/><text x="3.6236%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (16 samples, 0.45%)</title><rect x="3.3736%" y="261" width="0.4498%" height="15" fill="rgb(234,13,49)" fg:x="120" fg:w="16"/><text x="3.6236%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (16 samples, 0.45%)</title><rect x="3.3736%" y="245" width="0.4498%" height="15" fill="rgb(234,122,0)" fg:x="120" fg:w="16"/><text x="3.6236%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (16 samples, 0.45%)</title><rect x="3.3736%" y="229" width="0.4498%" height="15" fill="rgb(207,146,38)" fg:x="120" fg:w="16"/><text x="3.6236%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (16 samples, 0.45%)</title><rect x="3.3736%" y="213" width="0.4498%" height="15" fill="rgb(207,177,25)" fg:x="120" fg:w="16"/><text x="3.6236%" y="223.50"></text></g><g><title>`0x7FFB1E1C9A86 (16 samples, 0.45%)</title><rect x="3.3736%" y="197" width="0.4498%" height="15" fill="rgb(211,178,42)" fg:x="120" fg:w="16"/><text x="3.6236%" y="207.50"></text></g><g><title>`0x7FFB1E1C9BC5 (16 samples, 0.45%)</title><rect x="3.3736%" y="181" width="0.4498%" height="15" fill="rgb(230,69,54)" fg:x="120" fg:w="16"/><text x="3.6236%" y="191.50"></text></g><g><title>`0x7FFB1E1CAB7C (4 samples, 0.11%)</title><rect x="3.7110%" y="165" width="0.1125%" height="15" fill="rgb(214,135,41)" fg:x="132" fg:w="4"/><text x="3.9610%" y="175.50"></text></g><g><title>`0x7FFB1E1C6F81 (4 samples, 0.11%)</title><rect x="3.7110%" y="149" width="0.1125%" height="15" fill="rgb(237,67,25)" fg:x="132" fg:w="4"/><text x="3.9610%" y="159.50"></text></g><g><title>`0x7FFB1E1BFAFD (3 samples, 0.08%)</title><rect x="3.7391%" y="133" width="0.0843%" height="15" fill="rgb(222,189,50)" fg:x="133" fg:w="3"/><text x="3.9891%" y="143.50"></text></g><g><title>`0x7FFB1E1E813F (3 samples, 0.08%)</title><rect x="3.7391%" y="117" width="0.0843%" height="15" fill="rgb(245,148,34)" fg:x="133" fg:w="3"/><text x="3.9891%" y="127.50"></text></g><g><title>`0x7FFB1E2FFBB4 (3 samples, 0.08%)</title><rect x="3.7391%" y="101" width="0.0843%" height="15" fill="rgb(222,29,6)" fg:x="133" fg:w="3"/><text x="3.9891%" y="111.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::resize(unsigned long long, enum2$&lt;core::option::Option (27 samples, 0.76%)</title><rect x="3.3736%" y="389" width="0.7591%" height="15" fill="rgb(221,189,43)" fg:x="120" fg:w="27"/><text x="3.6236%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::extend_with(unsigned long long, enum2$&lt;core::option::Option (27 samples, 0.76%)</title><rect x="3.3736%" y="373" width="0.7591%" height="15" fill="rgb(207,36,27)" fg:x="120" fg:w="27"/><text x="3.6236%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;usize&gt; &gt;*, enum2$&lt;core::option::Option (11 samples, 0.31%)</title><rect x="3.8234%" y="357" width="0.3092%" height="15" fill="rgb(217,90,24)" fg:x="136" fg:w="11"/><text x="4.0734%" y="367.50"></text></g><g><title>`0x7FFB1E305113 (8 samples, 0.22%)</title><rect x="4.1327%" y="149" width="0.2249%" height="15" fill="rgb(224,66,35)" fg:x="147" fg:w="8"/><text x="4.3827%" y="159.50"></text></g><g><title>`0x7FFB1E1CAB69 (11 samples, 0.31%)</title><rect x="4.1327%" y="165" width="0.3092%" height="15" fill="rgb(221,13,50)" fg:x="147" fg:w="11"/><text x="4.3827%" y="175.50"></text></g><g><title>`0x7FFB1E305117 (3 samples, 0.08%)</title><rect x="4.3576%" y="149" width="0.0843%" height="15" fill="rgb(236,68,49)" fg:x="155" fg:w="3"/><text x="4.6076%" y="159.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::reserve (13 samples, 0.37%)</title><rect x="4.1327%" y="357" width="0.3655%" height="15" fill="rgb(229,146,28)" fg:x="147" fg:w="13"/><text x="4.3827%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;isize,alloc::alloc::Global&gt;::reserve (13 samples, 0.37%)</title><rect x="4.1327%" y="341" width="0.3655%" height="15" fill="rgb(225,31,38)" fg:x="147" fg:w="13"/><text x="4.3827%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (13 samples, 0.37%)</title><rect x="4.1327%" y="325" width="0.3655%" height="15" fill="rgb(250,208,3)" fg:x="147" fg:w="13"/><text x="4.3827%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (13 samples, 0.37%)</title><rect x="4.1327%" y="309" width="0.3655%" height="15" fill="rgb(246,54,23)" fg:x="147" fg:w="13"/><text x="4.3827%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (13 samples, 0.37%)</title><rect x="4.1327%" y="293" width="0.3655%" height="15" fill="rgb(243,76,11)" fg:x="147" fg:w="13"/><text x="4.3827%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (13 samples, 0.37%)</title><rect x="4.1327%" y="277" width="0.3655%" height="15" fill="rgb(245,21,50)" fg:x="147" fg:w="13"/><text x="4.3827%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (13 samples, 0.37%)</title><rect x="4.1327%" y="261" width="0.3655%" height="15" fill="rgb(228,9,43)" fg:x="147" fg:w="13"/><text x="4.3827%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (13 samples, 0.37%)</title><rect x="4.1327%" y="245" width="0.3655%" height="15" fill="rgb(208,100,47)" fg:x="147" fg:w="13"/><text x="4.3827%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (13 samples, 0.37%)</title><rect x="4.1327%" y="229" width="0.3655%" height="15" fill="rgb(232,26,8)" fg:x="147" fg:w="13"/><text x="4.3827%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (13 samples, 0.37%)</title><rect x="4.1327%" y="213" width="0.3655%" height="15" fill="rgb(216,166,38)" fg:x="147" fg:w="13"/><text x="4.3827%" y="223.50"></text></g><g><title>`0x7FFB1E1C9A86 (13 samples, 0.37%)</title><rect x="4.1327%" y="197" width="0.3655%" height="15" fill="rgb(251,202,51)" fg:x="147" fg:w="13"/><text x="4.3827%" y="207.50"></text></g><g><title>`0x7FFB1E1C9BC5 (13 samples, 0.37%)</title><rect x="4.1327%" y="181" width="0.3655%" height="15" fill="rgb(254,216,34)" fg:x="147" fg:w="13"/><text x="4.3827%" y="191.50"></text></g><g><title>`0x7FFB1E1CAB7C (2 samples, 0.06%)</title><rect x="4.4419%" y="165" width="0.0562%" height="15" fill="rgb(251,32,27)" fg:x="158" fg:w="2"/><text x="4.6919%" y="175.50"></text></g><g><title>`0x7FFB1E1C6F81 (2 samples, 0.06%)</title><rect x="4.4419%" y="149" width="0.0562%" height="15" fill="rgb(208,127,28)" fg:x="158" fg:w="2"/><text x="4.6919%" y="159.50"></text></g><g><title>`0x7FFB1E1BFAFD (2 samples, 0.06%)</title><rect x="4.4419%" y="133" width="0.0562%" height="15" fill="rgb(224,137,22)" fg:x="158" fg:w="2"/><text x="4.6919%" y="143.50"></text></g><g><title>`0x7FFB1E1E813F (2 samples, 0.06%)</title><rect x="4.4419%" y="117" width="0.0562%" height="15" fill="rgb(254,70,32)" fg:x="158" fg:w="2"/><text x="4.6919%" y="127.50"></text></g><g><title>`0x7FFB1E2FFBB4 (2 samples, 0.06%)</title><rect x="4.4419%" y="101" width="0.0562%" height="15" fill="rgb(229,75,37)" fg:x="158" fg:w="2"/><text x="4.6919%" y="111.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::resize (25 samples, 0.70%)</title><rect x="4.1327%" y="389" width="0.7028%" height="15" fill="rgb(252,64,23)" fg:x="147" fg:w="25"/><text x="4.3827%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::extend_with (25 samples, 0.70%)</title><rect x="4.1327%" y="373" width="0.7028%" height="15" fill="rgb(232,162,48)" fg:x="147" fg:w="25"/><text x="4.3827%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::write (12 samples, 0.34%)</title><rect x="4.4982%" y="357" width="0.3374%" height="15" fill="rgb(246,160,12)" fg:x="160" fg:w="12"/><text x="4.7482%" y="367.50"></text></g><g><title>`0x7FFAFCDE1A89 (12 samples, 0.34%)</title><rect x="4.4982%" y="341" width="0.3374%" height="15" fill="rgb(247,166,0)" fg:x="160" fg:w="12"/><text x="4.7482%" y="351.50"></text></g><g><title>`0x7FFB1E305113 (5 samples, 0.14%)</title><rect x="4.8355%" y="149" width="0.1406%" height="15" fill="rgb(249,219,21)" fg:x="172" fg:w="5"/><text x="5.0855%" y="159.50"></text></g><g><title>`0x7FFB1E1CAB69 (9 samples, 0.25%)</title><rect x="4.8355%" y="165" width="0.2530%" height="15" fill="rgb(205,209,3)" fg:x="172" fg:w="9"/><text x="5.0855%" y="175.50"></text></g><g><title>`0x7FFB1E305117 (4 samples, 0.11%)</title><rect x="4.9761%" y="149" width="0.1125%" height="15" fill="rgb(243,44,1)" fg:x="177" fg:w="4"/><text x="5.2261%" y="159.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::reserve (13 samples, 0.37%)</title><rect x="4.8355%" y="357" width="0.3655%" height="15" fill="rgb(206,159,16)" fg:x="172" fg:w="13"/><text x="5.0855%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::reserve (13 samples, 0.37%)</title><rect x="4.8355%" y="341" width="0.3655%" height="15" fill="rgb(244,77,30)" fg:x="172" fg:w="13"/><text x="5.0855%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (13 samples, 0.37%)</title><rect x="4.8355%" y="325" width="0.3655%" height="15" fill="rgb(218,69,12)" fg:x="172" fg:w="13"/><text x="5.0855%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (13 samples, 0.37%)</title><rect x="4.8355%" y="309" width="0.3655%" height="15" fill="rgb(212,87,7)" fg:x="172" fg:w="13"/><text x="5.0855%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (13 samples, 0.37%)</title><rect x="4.8355%" y="293" width="0.3655%" height="15" fill="rgb(245,114,25)" fg:x="172" fg:w="13"/><text x="5.0855%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (13 samples, 0.37%)</title><rect x="4.8355%" y="277" width="0.3655%" height="15" fill="rgb(210,61,42)" fg:x="172" fg:w="13"/><text x="5.0855%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (13 samples, 0.37%)</title><rect x="4.8355%" y="261" width="0.3655%" height="15" fill="rgb(211,52,33)" fg:x="172" fg:w="13"/><text x="5.0855%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (13 samples, 0.37%)</title><rect x="4.8355%" y="245" width="0.3655%" height="15" fill="rgb(234,58,33)" fg:x="172" fg:w="13"/><text x="5.0855%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (13 samples, 0.37%)</title><rect x="4.8355%" y="229" width="0.3655%" height="15" fill="rgb(220,115,36)" fg:x="172" fg:w="13"/><text x="5.0855%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (13 samples, 0.37%)</title><rect x="4.8355%" y="213" width="0.3655%" height="15" fill="rgb(243,153,54)" fg:x="172" fg:w="13"/><text x="5.0855%" y="223.50"></text></g><g><title>`0x7FFB1E1C9A86 (13 samples, 0.37%)</title><rect x="4.8355%" y="197" width="0.3655%" height="15" fill="rgb(251,47,18)" fg:x="172" fg:w="13"/><text x="5.0855%" y="207.50"></text></g><g><title>`0x7FFB1E1C9BC5 (13 samples, 0.37%)</title><rect x="4.8355%" y="181" width="0.3655%" height="15" fill="rgb(242,102,42)" fg:x="172" fg:w="13"/><text x="5.0855%" y="191.50"></text></g><g><title>`0x7FFB1E1CAB7C (4 samples, 0.11%)</title><rect x="5.0886%" y="165" width="0.1125%" height="15" fill="rgb(234,31,38)" fg:x="181" fg:w="4"/><text x="5.3386%" y="175.50"></text></g><g><title>`0x7FFB1E1C6F81 (4 samples, 0.11%)</title><rect x="5.0886%" y="149" width="0.1125%" height="15" fill="rgb(221,117,51)" fg:x="181" fg:w="4"/><text x="5.3386%" y="159.50"></text></g><g><title>`0x7FFB1E1BFAFD (4 samples, 0.11%)</title><rect x="5.0886%" y="133" width="0.1125%" height="15" fill="rgb(212,20,18)" fg:x="181" fg:w="4"/><text x="5.3386%" y="143.50"></text></g><g><title>`0x7FFB1E1E813F (4 samples, 0.11%)</title><rect x="5.0886%" y="117" width="0.1125%" height="15" fill="rgb(245,133,36)" fg:x="181" fg:w="4"/><text x="5.3386%" y="127.50"></text></g><g><title>`0x7FFB1E2FFBB4 (4 samples, 0.11%)</title><rect x="5.0886%" y="101" width="0.1125%" height="15" fill="rgb(212,6,19)" fg:x="181" fg:w="4"/><text x="5.3386%" y="111.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::resize (23 samples, 0.65%)</title><rect x="4.8355%" y="389" width="0.6466%" height="15" fill="rgb(218,1,36)" fg:x="172" fg:w="23"/><text x="5.0855%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::extend_with (23 samples, 0.65%)</title><rect x="4.8355%" y="373" width="0.6466%" height="15" fill="rgb(246,84,54)" fg:x="172" fg:w="23"/><text x="5.0855%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::write (10 samples, 0.28%)</title><rect x="5.2010%" y="357" width="0.2811%" height="15" fill="rgb(242,110,6)" fg:x="185" fg:w="10"/><text x="5.4510%" y="367.50"></text></g><g><title>`0x7FFAFCDE1A89 (10 samples, 0.28%)</title><rect x="5.2010%" y="341" width="0.2811%" height="15" fill="rgb(214,47,5)" fg:x="185" fg:w="10"/><text x="5.4510%" y="351.50"></text></g><g><title>`0x7FFB1E1CAA4D (1 samples, 0.03%)</title><rect x="5.4821%" y="117" width="0.0281%" height="15" fill="rgb(218,159,25)" fg:x="195" fg:w="1"/><text x="5.7321%" y="127.50"></text></g><g><title>`0x7FFB1E1BBE86 (1 samples, 0.03%)</title><rect x="5.4821%" y="101" width="0.0281%" height="15" fill="rgb(215,211,28)" fg:x="195" fg:w="1"/><text x="5.7321%" y="111.50"></text></g><g><title>`0x7FFB1E1BC20E (1 samples, 0.03%)</title><rect x="5.4821%" y="85" width="0.0281%" height="15" fill="rgb(238,59,32)" fg:x="195" fg:w="1"/><text x="5.7321%" y="95.50"></text></g><g><title>`0x7FFB1E1EB422 (1 samples, 0.03%)</title><rect x="5.4821%" y="69" width="0.0281%" height="15" fill="rgb(226,82,3)" fg:x="195" fg:w="1"/><text x="5.7321%" y="79.50"></text></g><g><title>`0x7FFB1E1E92AA (1 samples, 0.03%)</title><rect x="5.4821%" y="53" width="0.0281%" height="15" fill="rgb(240,164,32)" fg:x="195" fg:w="1"/><text x="5.7321%" y="63.50"></text></g><g><title>`0x7FFB1E2FFAF4 (1 samples, 0.03%)</title><rect x="5.4821%" y="37" width="0.0281%" height="15" fill="rgb(232,46,7)" fg:x="195" fg:w="1"/><text x="5.7321%" y="47.50"></text></g><g><title>`0x7FFB1E305104 (1 samples, 0.03%)</title><rect x="5.5103%" y="101" width="0.0281%" height="15" fill="rgb(229,129,53)" fg:x="196" fg:w="1"/><text x="5.7603%" y="111.50"></text></g><g><title>`0x7FFB1E305113 (12 samples, 0.34%)</title><rect x="5.5384%" y="101" width="0.3374%" height="15" fill="rgb(234,188,29)" fg:x="197" fg:w="12"/><text x="5.7884%" y="111.50"></text></g><g><title>`0x7FFB1E305117 (7 samples, 0.20%)</title><rect x="5.8757%" y="101" width="0.1968%" height="15" fill="rgb(246,141,4)" fg:x="209" fg:w="7"/><text x="6.1257%" y="111.50"></text></g><g><title>`0x7FFB1E305123 (1 samples, 0.03%)</title><rect x="6.0725%" y="101" width="0.0281%" height="15" fill="rgb(229,23,39)" fg:x="216" fg:w="1"/><text x="6.3225%" y="111.50"></text></g><g><title>`0x7FFB1E1CAB69 (23 samples, 0.65%)</title><rect x="5.5103%" y="117" width="0.6466%" height="15" fill="rgb(206,12,3)" fg:x="196" fg:w="23"/><text x="5.7603%" y="127.50"></text></g><g><title>`0x7FFB1E30512B (2 samples, 0.06%)</title><rect x="6.1006%" y="101" width="0.0562%" height="15" fill="rgb(252,226,20)" fg:x="217" fg:w="2"/><text x="6.3506%" y="111.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::default_allocator::impl$9::reallocate_copy(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (28 samples, 0.79%)</title><rect x="5.4821%" y="341" width="0.7872%" height="15" fill="rgb(216,123,35)" fg:x="195" fg:w="28"/><text x="5.7321%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;::resize(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (28 samples, 0.79%)</title><rect x="5.4821%" y="325" width="0.7872%" height="15" fill="rgb(212,68,40)" fg:x="195" fg:w="28"/><text x="5.7321%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (28 samples, 0.79%)</title><rect x="5.4821%" y="309" width="0.7872%" height="15" fill="rgb(254,125,32)" fg:x="195" fg:w="28"/><text x="5.7321%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (28 samples, 0.79%)</title><rect x="5.4821%" y="293" width="0.7872%" height="15" fill="rgb(253,97,22)" fg:x="195" fg:w="28"/><text x="5.7321%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (28 samples, 0.79%)</title><rect x="5.4821%" y="277" width="0.7872%" height="15" fill="rgb(241,101,14)" fg:x="195" fg:w="28"/><text x="5.7321%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (28 samples, 0.79%)</title><rect x="5.4821%" y="261" width="0.7872%" height="15" fill="rgb(238,103,29)" fg:x="195" fg:w="28"/><text x="5.7321%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (28 samples, 0.79%)</title><rect x="5.4821%" y="245" width="0.7872%" height="15" fill="rgb(233,195,47)" fg:x="195" fg:w="28"/><text x="5.7321%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (28 samples, 0.79%)</title><rect x="5.4821%" y="229" width="0.7872%" height="15" fill="rgb(246,218,30)" fg:x="195" fg:w="28"/><text x="5.7321%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (28 samples, 0.79%)</title><rect x="5.4821%" y="213" width="0.7872%" height="15" fill="rgb(219,145,47)" fg:x="195" fg:w="28"/><text x="5.7321%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (28 samples, 0.79%)</title><rect x="5.4821%" y="197" width="0.7872%" height="15" fill="rgb(243,12,26)" fg:x="195" fg:w="28"/><text x="5.7321%" y="207.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (28 samples, 0.79%)</title><rect x="5.4821%" y="181" width="0.7872%" height="15" fill="rgb(214,87,16)" fg:x="195" fg:w="28"/><text x="5.7321%" y="191.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (28 samples, 0.79%)</title><rect x="5.4821%" y="165" width="0.7872%" height="15" fill="rgb(208,99,42)" fg:x="195" fg:w="28"/><text x="5.7321%" y="175.50"></text></g><g><title>`0x7FFB1E1C9A86 (28 samples, 0.79%)</title><rect x="5.4821%" y="149" width="0.7872%" height="15" fill="rgb(253,99,2)" fg:x="195" fg:w="28"/><text x="5.7321%" y="159.50"></text></g><g><title>`0x7FFB1E1C9BC5 (28 samples, 0.79%)</title><rect x="5.4821%" y="133" width="0.7872%" height="15" fill="rgb(220,168,23)" fg:x="195" fg:w="28"/><text x="5.7321%" y="143.50"></text></g><g><title>`0x7FFB1E1CAB7C (4 samples, 0.11%)</title><rect x="6.1569%" y="117" width="0.1125%" height="15" fill="rgb(242,38,24)" fg:x="219" fg:w="4"/><text x="6.4069%" y="127.50"></text></g><g><title>`0x7FFB1E1C6F81 (4 samples, 0.11%)</title><rect x="6.1569%" y="101" width="0.1125%" height="15" fill="rgb(225,182,9)" fg:x="219" fg:w="4"/><text x="6.4069%" y="111.50"></text></g><g><title>`0x7FFB1E1BFAFD (4 samples, 0.11%)</title><rect x="6.1569%" y="85" width="0.1125%" height="15" fill="rgb(243,178,37)" fg:x="219" fg:w="4"/><text x="6.4069%" y="95.50"></text></g><g><title>`0x7FFB1E1E813F (4 samples, 0.11%)</title><rect x="6.1569%" y="69" width="0.1125%" height="15" fill="rgb(232,139,19)" fg:x="219" fg:w="4"/><text x="6.4069%" y="79.50"></text></g><g><title>`0x7FFB1E2FFBB4 (4 samples, 0.11%)</title><rect x="6.1569%" y="53" width="0.1125%" height="15" fill="rgb(225,201,24)" fg:x="219" fg:w="4"/><text x="6.4069%" y="63.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (60 samples, 1.69%)</title><rect x="5.4821%" y="373" width="1.6868%" height="15" fill="rgb(221,47,46)" fg:x="195" fg:w="60"/><text x="5.7321%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_generic(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;, nalgebra::base::dimension::Const (60 samples, 1.69%)</title><rect x="5.4821%" y="357" width="1.6868%" height="15" fill="rgb(249,23,13)" fg:x="195" fg:w="60"/><text x="5.7321%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;::fill_with(nalgebra::base::edition::impl$8::resize_generic::closure_env$0&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;,nalgebra::base::dimension::Const (32 samples, 0.90%)</title><rect x="6.2693%" y="341" width="0.8996%" height="15" fill="rgb(219,9,5)" fg:x="223" fg:w="32"/><text x="6.5193%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::iter::impl$36::next(nalgebra::base::iter::MatrixIterMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (20 samples, 0.56%)</title><rect x="6.6067%" y="325" width="0.5623%" height="15" fill="rgb(254,171,16)" fg:x="235" fg:w="20"/><text x="6.8567%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::iter::impl$31::next(nalgebra::base::iter::RawIter&lt;ptr_mut$&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt; &gt;,core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (20 samples, 0.56%)</title><rect x="6.6067%" y="309" width="0.5623%" height="15" fill="rgb(230,171,20)" fg:x="235" fg:w="20"/><text x="6.8567%" y="319.50"></text></g><g><title>`0x7FFAFCDE007B (5 samples, 0.14%)</title><rect x="7.1690%" y="341" width="0.1406%" height="15" fill="rgb(210,71,41)" fg:x="255" fg:w="5"/><text x="7.4190%" y="351.50"></text></g><g><title>`0x7FFAFCDE0746 (1 samples, 0.03%)</title><rect x="7.3095%" y="341" width="0.0281%" height="15" fill="rgb(206,173,20)" fg:x="260" fg:w="1"/><text x="7.5595%" y="351.50"></text></g><g><title>`0x7FFAFCDE075E (9 samples, 0.25%)</title><rect x="7.3376%" y="341" width="0.2530%" height="15" fill="rgb(233,88,34)" fg:x="261" fg:w="9"/><text x="7.5876%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::impl$42::clone(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (22 samples, 0.62%)</title><rect x="7.1690%" y="373" width="0.6185%" height="15" fill="rgb(223,209,46)" fg:x="255" fg:w="22"/><text x="7.4190%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::vec_storage::impl$23::clone(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (22 samples, 0.62%)</title><rect x="7.1690%" y="357" width="0.6185%" height="15" fill="rgb(250,43,18)" fg:x="255" fg:w="22"/><text x="7.4190%" y="367.50"></text></g><g><title>`0x7FFAFCDE0766 (7 samples, 0.20%)</title><rect x="7.5907%" y="341" width="0.1968%" height="15" fill="rgb(208,13,10)" fg:x="270" fg:w="7"/><text x="7.8407%" y="351.50"></text></g><g><title>`0x7FFB1E1BEF4A (1 samples, 0.03%)</title><rect x="7.7875%" y="357" width="0.0281%" height="15" fill="rgb(212,200,36)" fg:x="277" fg:w="1"/><text x="8.0375%" y="367.50"></text></g><g><title>`0x7FFB1E258E3F (1 samples, 0.03%)</title><rect x="7.7875%" y="341" width="0.0281%" height="15" fill="rgb(225,90,30)" fg:x="277" fg:w="1"/><text x="8.0375%" y="351.50"></text></g><g><title>`0x7FFB1E1E813F (1 samples, 0.03%)</title><rect x="7.7875%" y="325" width="0.0281%" height="15" fill="rgb(236,182,39)" fg:x="277" fg:w="1"/><text x="8.0375%" y="335.50"></text></g><g><title>`0x7FFB1E2FFBB4 (1 samples, 0.03%)</title><rect x="7.7875%" y="309" width="0.0281%" height="15" fill="rgb(212,144,35)" fg:x="277" fg:w="1"/><text x="8.0375%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::split_func::genbox&lt;1000&gt;(unsigned long long*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (169 samples, 4.75%)</title><rect x="3.2049%" y="405" width="4.7512%" height="15" fill="rgb(228,63,44)" fg:x="114" fg:w="169"/><text x="3.4549%" y="415.50">Rust_M..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally_mut&lt;f64,nalgebra::base::dimension::Const&lt;2&gt; &gt; (88 samples, 2.47%)</title><rect x="5.4821%" y="389" width="2.4740%" height="15" fill="rgb(228,109,6)" fg:x="195" fg:w="88"/><text x="5.7321%" y="399.50">Ru..</text></g><g><title>`0x7FFB1E1C6F81 (6 samples, 0.17%)</title><rect x="7.7875%" y="373" width="0.1687%" height="15" fill="rgb(238,117,24)" fg:x="277" fg:w="6"/><text x="8.0375%" y="383.50"></text></g><g><title>`0x7FFB1E1BFAFD (5 samples, 0.14%)</title><rect x="7.8156%" y="357" width="0.1406%" height="15" fill="rgb(242,26,26)" fg:x="278" fg:w="5"/><text x="8.0656%" y="367.50"></text></g><g><title>`0x7FFB1E1E813F (5 samples, 0.14%)</title><rect x="7.8156%" y="341" width="0.1406%" height="15" fill="rgb(221,92,48)" fg:x="278" fg:w="5"/><text x="8.0656%" y="351.50"></text></g><g><title>`0x7FFB1E2FFBB4 (5 samples, 0.14%)</title><rect x="7.8156%" y="325" width="0.1406%" height="15" fill="rgb(209,209,32)" fg:x="278" fg:w="5"/><text x="8.0656%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`exp (1 samples, 0.03%)</title><rect x="8.4060%" y="357" width="0.0281%" height="15" fill="rgb(221,70,22)" fg:x="299" fg:w="1"/><text x="8.6560%" y="367.50"></text></g><g><title>`0x7FFB1BEE7B69 (1 samples, 0.03%)</title><rect x="8.4341%" y="357" width="0.0281%" height="15" fill="rgb(248,145,5)" fg:x="300" fg:w="1"/><text x="8.6841%" y="367.50"></text></g><g><title>`0x7FFB1BEE7DC2 (1 samples, 0.03%)</title><rect x="8.4622%" y="357" width="0.0281%" height="15" fill="rgb(226,116,26)" fg:x="301" fg:w="1"/><text x="8.7122%" y="367.50"></text></g><g><title>`0x7FFB1BEE7DF7 (1 samples, 0.03%)</title><rect x="8.4903%" y="357" width="0.0281%" height="15" fill="rgb(244,5,17)" fg:x="302" fg:w="1"/><text x="8.7403%" y="367.50"></text></g><g><title>`0x7FFB1BEE7E5F (2 samples, 0.06%)</title><rect x="8.5184%" y="357" width="0.0562%" height="15" fill="rgb(252,159,33)" fg:x="303" fg:w="2"/><text x="8.7684%" y="367.50"></text></g><g><title>`0x7FFB1BEE7E7F (5 samples, 0.14%)</title><rect x="8.5746%" y="357" width="0.1406%" height="15" fill="rgb(206,71,0)" fg:x="305" fg:w="5"/><text x="8.8246%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::f64::impl$0::exp (14 samples, 0.39%)</title><rect x="8.3778%" y="373" width="0.3936%" height="15" fill="rgb(233,118,54)" fg:x="298" fg:w="14"/><text x="8.6278%" y="383.50"></text></g><g><title>`0x7FFB1BEE7E85 (2 samples, 0.06%)</title><rect x="8.7152%" y="357" width="0.0562%" height="15" fill="rgb(234,83,48)" fg:x="310" fg:w="2"/><text x="8.9652%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::f64::impl$0::powi (2 samples, 0.06%)</title><rect x="8.7714%" y="373" width="0.0562%" height="15" fill="rgb(228,3,54)" fg:x="312" fg:w="2"/><text x="9.0214%" y="383.50"></text></g><g><title>`0x7FFB1BEE7B62 (2 samples, 0.06%)</title><rect x="8.8277%" y="373" width="0.0562%" height="15" fill="rgb(226,155,13)" fg:x="314" fg:w="2"/><text x="9.0777%" y="383.50"></text></g><g><title>`0x7FFB1BEE7DC6 (1 samples, 0.03%)</title><rect x="8.8839%" y="373" width="0.0281%" height="15" fill="rgb(241,28,37)" fg:x="316" fg:w="1"/><text x="9.1339%" y="383.50"></text></g><g><title>`0x7FFB1BEE7E1E (1 samples, 0.03%)</title><rect x="8.9120%" y="373" width="0.0281%" height="15" fill="rgb(233,93,10)" fg:x="317" fg:w="1"/><text x="9.1620%" y="383.50"></text></g><g><title>`0x7FFB1BEE7E3B (2 samples, 0.06%)</title><rect x="8.9401%" y="373" width="0.0562%" height="15" fill="rgb(225,113,19)" fg:x="318" fg:w="2"/><text x="9.1901%" y="383.50"></text></g><g><title>`0x7FFB1BEE7E44 (1 samples, 0.03%)</title><rect x="8.9963%" y="373" width="0.0281%" height="15" fill="rgb(241,2,18)" fg:x="320" fg:w="1"/><text x="9.2463%" y="383.50"></text></g><g><title>`0x7FFB1BEE7E4D (1 samples, 0.03%)</title><rect x="9.0245%" y="373" width="0.0281%" height="15" fill="rgb(228,207,21)" fg:x="321" fg:w="1"/><text x="9.2745%" y="383.50"></text></g><g><title>`0x7FFB1BEE7E56 (1 samples, 0.03%)</title><rect x="9.0526%" y="373" width="0.0281%" height="15" fill="rgb(213,211,35)" fg:x="322" fg:w="1"/><text x="9.3026%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::split_func::split&lt;6,1000&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, double, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, unsigned long long[1000]*, unsigned long long*, enum2$&lt;core::option::Option (213 samples, 5.99%)</title><rect x="3.1206%" y="421" width="5.9882%" height="15" fill="rgb(209,83,10)" fg:x="111" fg:w="213"/><text x="3.3706%" y="431.50">Rust_MCS..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (41 samples, 1.15%)</title><rect x="7.9561%" y="405" width="1.1527%" height="15" fill="rgb(209,164,1)" fg:x="283" fg:w="41"/><text x="8.2061%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (41 samples, 1.15%)</title><rect x="7.9561%" y="389" width="1.1527%" height="15" fill="rgb(213,184,43)" fg:x="283" fg:w="41"/><text x="8.2061%" y="399.50"></text></g><g><title>`0x7FFB1BEE7E5F (1 samples, 0.03%)</title><rect x="9.0807%" y="373" width="0.0281%" height="15" fill="rgb(231,61,34)" fg:x="323" fg:w="1"/><text x="9.3307%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::slice::iter::Iter (106 samples, 2.98%)</title><rect x="19.1172%" y="405" width="2.9800%" height="15" fill="rgb(235,75,3)" fg:x="680" fg:w="106"/><text x="19.3672%" y="415.50">Rus..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;core::slice::iter::Iter (106 samples, 2.98%)</title><rect x="19.1172%" y="389" width="2.9800%" height="15" fill="rgb(220,106,47)" fg:x="680" fg:w="106"/><text x="19.3672%" y="399.50">Rus..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (14 samples, 0.39%)</title><rect x="21.7037%" y="373" width="0.3936%" height="15" fill="rgb(210,196,33)" fg:x="772" fg:w="14"/><text x="21.9537%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (14 samples, 0.39%)</title><rect x="21.7037%" y="357" width="0.3936%" height="15" fill="rgb(229,154,42)" fg:x="772" fg:w="14"/><text x="21.9537%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::strtsw::strtsw(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (485 samples, 13.64%)</title><rect x="9.1088%" y="421" width="13.6351%" height="15" fill="rgb(228,114,26)" fg:x="324" fg:w="485"/><text x="9.3588%" y="431.50">Rust_MCS-61bf4cd422d6..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$0::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (23 samples, 0.65%)</title><rect x="22.0973%" y="405" width="0.6466%" height="15" fill="rgb(208,144,1)" fg:x="786" fg:w="23"/><text x="22.3473%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;*, tuple$ (23 samples, 0.65%)</title><rect x="22.0973%" y="389" width="0.6466%" height="15" fill="rgb(239,112,37)" fg:x="786" fg:w="23"/><text x="22.3473%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;::get_unchecked(tuple$ (5 samples, 0.14%)</title><rect x="22.6033%" y="373" width="0.1406%" height="15" fill="rgb(210,96,50)" fg:x="804" fg:w="5"/><text x="22.8533%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (5 samples, 0.14%)</title><rect x="22.6033%" y="357" width="0.1406%" height="15" fill="rgb(222,178,2)" fg:x="804" fg:w="5"/><text x="22.8533%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (5 samples, 0.14%)</title><rect x="22.6033%" y="341" width="0.1406%" height="15" fill="rgb(226,74,18)" fg:x="804" fg:w="5"/><text x="22.8533%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (5 samples, 0.14%)</title><rect x="22.6033%" y="325" width="0.1406%" height="15" fill="rgb(225,67,54)" fg:x="804" fg:w="5"/><text x="22.8533%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (5 samples, 0.14%)</title><rect x="22.6033%" y="309" width="0.1406%" height="15" fill="rgb(251,92,32)" fg:x="804" fg:w="5"/><text x="22.8533%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::const_ptr::impl$0::wrapping_add (5 samples, 0.14%)</title><rect x="22.6033%" y="293" width="0.1406%" height="15" fill="rgb(228,149,22)" fg:x="804" fg:w="5"/><text x="22.8533%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::const_ptr::impl$0::wrapping_offset (5 samples, 0.14%)</title><rect x="22.6033%" y="277" width="0.1406%" height="15" fill="rgb(243,54,13)" fg:x="804" fg:w="5"/><text x="22.8533%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::updtrec::updtrec(unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="22.7439%" y="421" width="0.0562%" height="15" fill="rgb(243,180,28)" fg:x="809" fg:w="2"/><text x="22.9939%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::quadratic_func::quadmin (6 samples, 0.17%)</title><rect x="22.9688%" y="357" width="0.1687%" height="15" fill="rgb(208,167,24)" fg:x="817" fg:w="6"/><text x="23.2188%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::quadratic_func::quadpol (5 samples, 0.14%)</title><rect x="22.9969%" y="341" width="0.1406%" height="15" fill="rgb(245,73,45)" fg:x="818" fg:w="5"/><text x="23.2469%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::exgain::exgain&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (14 samples, 0.39%)</title><rect x="22.8001%" y="373" width="0.3936%" height="15" fill="rgb(237,203,48)" fg:x="811" fg:w="14"/><text x="23.0501%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::quadratic_func::quadpol (2 samples, 0.06%)</title><rect x="23.1375%" y="357" width="0.0562%" height="15" fill="rgb(211,197,16)" fg:x="823" fg:w="2"/><text x="23.3875%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::split_func::split2 (7 samples, 0.20%)</title><rect x="23.5030%" y="357" width="0.1968%" height="15" fill="rgb(243,99,51)" fg:x="836" fg:w="7"/><text x="23.7530%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (33 samples, 0.93%)</title><rect x="22.8001%" y="421" width="0.9277%" height="15" fill="rgb(215,123,29)" fg:x="811" fg:w="33"/><text x="23.0501%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec (33 samples, 0.93%)</title><rect x="22.8001%" y="405" width="0.9277%" height="15" fill="rgb(239,186,37)" fg:x="811" fg:w="33"/><text x="23.0501%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::as_mut_slice (33 samples, 0.93%)</title><rect x="22.8001%" y="389" width="0.9277%" height="15" fill="rgb(252,136,39)" fg:x="811" fg:w="33"/><text x="23.0501%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::splrnk::splrnk&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (19 samples, 0.53%)</title><rect x="23.1937%" y="373" width="0.5342%" height="15" fill="rgb(223,213,32)" fg:x="825" fg:w="19"/><text x="23.4437%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$0::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="23.6997%" y="357" width="0.0281%" height="15" fill="rgb(233,115,5)" fg:x="843" fg:w="1"/><text x="23.9497%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="23.6997%" y="341" width="0.0281%" height="15" fill="rgb(207,226,44)" fg:x="843" fg:w="1"/><text x="23.9497%" y="351.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;::get_unchecked(tuple$ (1 samples, 0.03%)</title><rect x="23.6997%" y="325" width="0.0281%" height="15" fill="rgb(208,126,0)" fg:x="843" fg:w="1"/><text x="23.9497%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="23.6997%" y="309" width="0.0281%" height="15" fill="rgb(244,66,21)" fg:x="843" fg:w="1"/><text x="23.9497%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="23.6997%" y="293" width="0.0281%" height="15" fill="rgb(222,97,12)" fg:x="843" fg:w="1"/><text x="23.9497%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="23.6997%" y="277" width="0.0281%" height="15" fill="rgb(219,213,19)" fg:x="843" fg:w="1"/><text x="23.9497%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="23.6997%" y="261" width="0.0281%" height="15" fill="rgb(252,169,30)" fg:x="843" fg:w="1"/><text x="23.9497%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::const_ptr::impl$0::wrapping_add (1 samples, 0.03%)</title><rect x="23.6997%" y="245" width="0.0281%" height="15" fill="rgb(206,32,51)" fg:x="843" fg:w="1"/><text x="23.9497%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::const_ptr::impl$0::wrapping_offset (1 samples, 0.03%)</title><rect x="23.6997%" y="229" width="0.0281%" height="15" fill="rgb(250,172,42)" fg:x="843" fg:w="1"/><text x="23.9497%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::vec::Vec (4 samples, 0.11%)</title><rect x="23.7279%" y="421" width="0.1125%" height="15" fill="rgb(209,34,43)" fg:x="844" fg:w="4"/><text x="23.9779%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (4 samples, 0.11%)</title><rect x="23.7279%" y="405" width="0.1125%" height="15" fill="rgb(223,11,35)" fg:x="844" fg:w="4"/><text x="23.9779%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (4 samples, 0.11%)</title><rect x="23.7279%" y="389" width="0.1125%" height="15" fill="rgb(251,219,26)" fg:x="844" fg:w="4"/><text x="23.9779%" y="399.50"></text></g><g><title>`0x7FFB1E1C6F81 (4 samples, 0.11%)</title><rect x="23.7279%" y="373" width="0.1125%" height="15" fill="rgb(231,119,3)" fg:x="844" fg:w="4"/><text x="23.9779%" y="383.50"></text></g><g><title>`0x7FFB1E1BFAFD (4 samples, 0.11%)</title><rect x="23.7279%" y="357" width="0.1125%" height="15" fill="rgb(216,97,11)" fg:x="844" fg:w="4"/><text x="23.9779%" y="367.50"></text></g><g><title>`0x7FFB1E1E813F (4 samples, 0.11%)</title><rect x="23.7279%" y="341" width="0.1125%" height="15" fill="rgb(223,59,9)" fg:x="844" fg:w="4"/><text x="23.9779%" y="351.50"></text></g><g><title>`0x7FFB1E2FFBB4 (4 samples, 0.11%)</title><rect x="23.7279%" y="325" width="0.1125%" height="15" fill="rgb(233,93,31)" fg:x="844" fg:w="4"/><text x="23.9779%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="23.8403%" y="421" width="0.0281%" height="15" fill="rgb(239,81,33)" fg:x="848" fg:w="1"/><text x="24.0903%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="23.8403%" y="405" width="0.0281%" height="15" fill="rgb(213,120,34)" fg:x="848" fg:w="1"/><text x="24.0903%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="23.8403%" y="389" width="0.0281%" height="15" fill="rgb(243,49,53)" fg:x="848" fg:w="1"/><text x="24.0903%" y="399.50"></text></g><g><title>`0x7FFB1E1C6F81 (1 samples, 0.03%)</title><rect x="23.8403%" y="373" width="0.0281%" height="15" fill="rgb(247,216,33)" fg:x="848" fg:w="1"/><text x="24.0903%" y="383.50"></text></g><g><title>`0x7FFB1E1BFAFD (1 samples, 0.03%)</title><rect x="23.8403%" y="357" width="0.0281%" height="15" fill="rgb(226,26,14)" fg:x="848" fg:w="1"/><text x="24.0903%" y="367.50"></text></g><g><title>`0x7FFB1E1E813F (1 samples, 0.03%)</title><rect x="23.8403%" y="341" width="0.0281%" height="15" fill="rgb(215,49,53)" fg:x="848" fg:w="1"/><text x="24.0903%" y="351.50"></text></g><g><title>`0x7FFB1E2FFBB4 (1 samples, 0.03%)</title><rect x="23.8403%" y="325" width="0.0281%" height="15" fill="rgb(245,162,40)" fg:x="848" fg:w="1"/><text x="24.0903%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="23.8684%" y="421" width="0.0281%" height="15" fill="rgb(229,68,17)" fg:x="849" fg:w="1"/><text x="24.1184%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="23.8684%" y="405" width="0.0281%" height="15" fill="rgb(213,182,10)" fg:x="849" fg:w="1"/><text x="24.1184%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="23.8684%" y="389" width="0.0281%" height="15" fill="rgb(245,125,30)" fg:x="849" fg:w="1"/><text x="24.1184%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="23.8684%" y="373" width="0.0281%" height="15" fill="rgb(232,202,2)" fg:x="849" fg:w="1"/><text x="24.1184%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="23.8684%" y="357" width="0.0281%" height="15" fill="rgb(237,140,51)" fg:x="849" fg:w="1"/><text x="24.1184%" y="367.50"></text></g><g><title>`0x7FFB1E1C6F81 (1 samples, 0.03%)</title><rect x="23.8684%" y="341" width="0.0281%" height="15" fill="rgb(236,157,25)" fg:x="849" fg:w="1"/><text x="24.1184%" y="351.50"></text></g><g><title>`0x7FFB1E1BFAFD (1 samples, 0.03%)</title><rect x="23.8684%" y="325" width="0.0281%" height="15" fill="rgb(219,209,0)" fg:x="849" fg:w="1"/><text x="24.1184%" y="335.50"></text></g><g><title>`0x7FFB1E1E813F (1 samples, 0.03%)</title><rect x="23.8684%" y="309" width="0.0281%" height="15" fill="rgb(240,116,54)" fg:x="849" fg:w="1"/><text x="24.1184%" y="319.50"></text></g><g><title>`0x7FFB1E2FFBB4 (1 samples, 0.03%)</title><rect x="23.8684%" y="293" width="0.0281%" height="15" fill="rgb(216,10,36)" fg:x="849" fg:w="1"/><text x="24.1184%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="23.8965%" y="421" width="0.0281%" height="15" fill="rgb(222,72,44)" fg:x="850" fg:w="1"/><text x="24.1465%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="23.8965%" y="405" width="0.0281%" height="15" fill="rgb(232,159,9)" fg:x="850" fg:w="1"/><text x="24.1465%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="23.8965%" y="389" width="0.0281%" height="15" fill="rgb(210,39,32)" fg:x="850" fg:w="1"/><text x="24.1465%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="23.8965%" y="373" width="0.0281%" height="15" fill="rgb(216,194,45)" fg:x="850" fg:w="1"/><text x="24.1465%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="23.8965%" y="357" width="0.0281%" height="15" fill="rgb(218,18,35)" fg:x="850" fg:w="1"/><text x="24.1465%" y="367.50"></text></g><g><title>`0x7FFB1E1C6F81 (1 samples, 0.03%)</title><rect x="23.8965%" y="341" width="0.0281%" height="15" fill="rgb(207,83,51)" fg:x="850" fg:w="1"/><text x="24.1465%" y="351.50"></text></g><g><title>`0x7FFB1E1BFAFD (1 samples, 0.03%)</title><rect x="23.8965%" y="325" width="0.0281%" height="15" fill="rgb(225,63,43)" fg:x="850" fg:w="1"/><text x="24.1465%" y="335.50"></text></g><g><title>`0x7FFB1E1E813F (1 samples, 0.03%)</title><rect x="23.8965%" y="309" width="0.0281%" height="15" fill="rgb(207,57,36)" fg:x="850" fg:w="1"/><text x="24.1465%" y="319.50"></text></g><g><title>`0x7FFB1E2FFBB4 (1 samples, 0.03%)</title><rect x="23.8965%" y="293" width="0.0281%" height="15" fill="rgb(216,99,33)" fg:x="850" fg:w="1"/><text x="24.1465%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::zeros (1 samples, 0.03%)</title><rect x="23.9247%" y="421" width="0.0281%" height="15" fill="rgb(225,42,16)" fg:x="851" fg:w="1"/><text x="24.1747%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::zeros_generic(nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="23.9247%" y="405" width="0.0281%" height="15" fill="rgb(220,201,45)" fg:x="851" fg:w="1"/><text x="24.1747%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::from_element_generic(nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="23.9247%" y="389" width="0.0281%" height="15" fill="rgb(225,33,4)" fg:x="851" fg:w="1"/><text x="24.1747%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::from_iterator_generic(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, core::iter::adapters::take::Take&lt;core::iter::sources::repeat::Repeat (1 samples, 0.03%)</title><rect x="23.9247%" y="373" width="0.0281%" height="15" fill="rgb(224,33,50)" fg:x="851" fg:w="1"/><text x="24.1747%" y="383.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::default_allocator::impl$2::allocate_from_iterator(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, core::iter::adapters::take::Take&lt;core::iter::sources::repeat::Repeat (1 samples, 0.03%)</title><rect x="23.9247%" y="357" width="0.0281%" height="15" fill="rgb(246,198,51)" fg:x="851" fg:w="1"/><text x="24.1747%" y="367.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;::new(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="23.9247%" y="341" width="0.0281%" height="15" fill="rgb(205,22,4)" fg:x="851" fg:w="1"/><text x="24.1747%" y="351.50"></text></g><g><title>`0x7FFAFCDE1A89 (1 samples, 0.03%)</title><rect x="23.9247%" y="325" width="0.0281%" height="15" fill="rgb(206,3,8)" fg:x="851" fg:w="1"/><text x="24.1747%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::iter::traits::iterator::Iterator::fold(nalgebra::base::iter::MatrixIter&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;, unsigned long long, nalgebra::base::min_max::impl$0::min::closure_env$1&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="23.9528%" y="389" width="0.0281%" height="15" fill="rgb(251,23,15)" fg:x="852" fg:w="1"/><text x="24.2028%" y="399.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::split_func::split1 (20 samples, 0.56%)</title><rect x="64.0708%" y="325" width="0.5623%" height="15" fill="rgb(252,88,28)" fg:x="2279" fg:w="20"/><text x="64.3208%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::updtf::updtf&lt;6&gt;(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (727 samples, 20.44%)</title><rect x="64.6331%" y="325" width="20.4386%" height="15" fill="rgb(212,127,14)" fg:x="2299" fg:w="727"/><text x="64.8831%" y="335.50">Rust_MCS-61bf4cd422d62802.exe`Ru..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::vertex::vert1 (71 samples, 2.00%)</title><rect x="85.0717%" y="325" width="1.9961%" height="15" fill="rgb(247,145,37)" fg:x="3026" fg:w="71"/><text x="85.3217%" y="335.50">R..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::vertex::vert2 (64 samples, 1.80%)</title><rect x="87.0678%" y="325" width="1.7993%" height="15" fill="rgb(209,117,53)" fg:x="3097" fg:w="64"/><text x="87.3178%" y="335.50">R..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$13::index(alloc::vec::Vec (46 samples, 1.29%)</title><rect x="88.8670%" y="325" width="1.2932%" height="15" fill="rgb(212,90,42)" fg:x="3161" fg:w="46"/><text x="89.1170%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (46 samples, 1.29%)</title><rect x="88.8670%" y="309" width="1.2932%" height="15" fill="rgb(218,164,37)" fg:x="3161" fg:w="46"/><text x="89.1170%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (46 samples, 1.29%)</title><rect x="88.8670%" y="293" width="1.2932%" height="15" fill="rgb(246,65,34)" fg:x="3161" fg:w="46"/><text x="89.1170%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (79 samples, 2.22%)</title><rect x="90.1602%" y="325" width="2.2210%" height="15" fill="rgb(231,100,33)" fg:x="3207" fg:w="79"/><text x="90.4102%" y="335.50">R..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (77 samples, 2.16%)</title><rect x="90.2165%" y="309" width="2.1647%" height="15" fill="rgb(228,126,14)" fg:x="3209" fg:w="77"/><text x="90.4665%" y="319.50">R..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (77 samples, 2.16%)</title><rect x="90.2165%" y="293" width="2.1647%" height="15" fill="rgb(215,173,21)" fg:x="3209" fg:w="77"/><text x="90.4665%" y="303.50">R..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;::fill (1 samples, 0.03%)</title><rect x="92.3812%" y="325" width="0.0281%" height="15" fill="rgb(210,6,40)" fg:x="3286" fg:w="1"/><text x="92.6312%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (196 samples, 5.51%)</title><rect x="92.4093%" y="325" width="5.5103%" height="15" fill="rgb(212,48,18)" fg:x="3287" fg:w="196"/><text x="92.6593%" y="335.50">Rust_MC..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::get_unchecked(tuple$ (15 samples, 0.42%)</title><rect x="97.4979%" y="309" width="0.4217%" height="15" fill="rgb(230,214,11)" fg:x="3468" fg:w="15"/><text x="97.7479%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (15 samples, 0.42%)</title><rect x="97.4979%" y="293" width="0.4217%" height="15" fill="rgb(254,105,39)" fg:x="3468" fg:w="15"/><text x="97.7479%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (15 samples, 0.42%)</title><rect x="97.4979%" y="277" width="0.4217%" height="15" fill="rgb(245,158,5)" fg:x="3468" fg:w="15"/><text x="97.7479%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (15 samples, 0.42%)</title><rect x="97.4979%" y="261" width="0.4217%" height="15" fill="rgb(249,208,11)" fg:x="3468" fg:w="15"/><text x="97.7479%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (15 samples, 0.42%)</title><rect x="97.4979%" y="245" width="0.4217%" height="15" fill="rgb(210,39,28)" fg:x="3468" fg:w="15"/><text x="97.7479%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::const_ptr::impl$0::wrapping_add (15 samples, 0.42%)</title><rect x="97.4979%" y="229" width="0.4217%" height="15" fill="rgb(211,56,53)" fg:x="3468" fg:w="15"/><text x="97.7479%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::const_ptr::impl$0::wrapping_offset (15 samples, 0.42%)</title><rect x="97.4979%" y="213" width="0.4217%" height="15" fill="rgb(226,201,30)" fg:x="3468" fg:w="15"/><text x="97.7479%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="97.9196%" y="325" width="0.0281%" height="15" fill="rgb(239,101,34)" fg:x="3483" fg:w="1"/><text x="98.1696%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::get_unchecked(tuple$ (1 samples, 0.03%)</title><rect x="97.9196%" y="309" width="0.0281%" height="15" fill="rgb(226,209,5)" fg:x="3483" fg:w="1"/><text x="98.1696%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="97.9196%" y="293" width="0.0281%" height="15" fill="rgb(250,105,47)" fg:x="3483" fg:w="1"/><text x="98.1696%" y="303.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="97.9196%" y="277" width="0.0281%" height="15" fill="rgb(230,72,3)" fg:x="3483" fg:w="1"/><text x="98.1696%" y="287.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="97.9196%" y="261" width="0.0281%" height="15" fill="rgb(232,218,39)" fg:x="3483" fg:w="1"/><text x="98.1696%" y="271.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="97.9196%" y="245" width="0.0281%" height="15" fill="rgb(248,166,6)" fg:x="3483" fg:w="1"/><text x="98.1696%" y="255.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::const_ptr::impl$0::wrapping_add (1 samples, 0.03%)</title><rect x="97.9196%" y="229" width="0.0281%" height="15" fill="rgb(247,89,20)" fg:x="3483" fg:w="1"/><text x="98.1696%" y="239.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::const_ptr::impl$0::wrapping_offset (1 samples, 0.03%)</title><rect x="97.9196%" y="213" width="0.0281%" height="15" fill="rgb(248,130,54)" fg:x="3483" fg:w="1"/><text x="98.1696%" y="223.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;::min (2,676 samples, 75.23%)</title><rect x="23.9528%" y="421" width="75.2319%" height="15" fill="rgb(234,196,4)" fg:x="852" fg:w="2676"/><text x="24.2028%" y="431.50">Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimens..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;::fold_with(nalgebra::base::min_max::impl$0::min::closure_env$0&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;, nalgebra::base::min_max::impl$0::min::closure_env$1&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (2,676 samples, 75.23%)</title><rect x="23.9528%" y="405" width="75.2319%" height="15" fill="rgb(250,143,31)" fg:x="852" fg:w="2676"/><text x="24.2028%" y="415.50">Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimens..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::min_max::impl$0::min::closure$0(nalgebra::base::min_max::impl$0::min::closure_env$0&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;, enum2$&lt;core::option::Option&lt;ref$ (2,675 samples, 75.20%)</title><rect x="23.9809%" y="389" width="75.2038%" height="15" fill="rgb(211,110,34)" fg:x="853" fg:w="2675"/><text x="24.2309%" y="399.50">Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::min_max::impl$0::min::closure$0(nalgebra::base::min_max::impl$0::min::closure_e..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`enum2$&lt;core::option::Option&lt;ref$&lt;usize&gt; &gt; &gt;::cloned(enum2$&lt;core::option::Option&lt;ref$ (2,675 samples, 75.20%)</title><rect x="23.9809%" y="373" width="75.2038%" height="15" fill="rgb(215,124,48)" fg:x="853" fg:w="2675"/><text x="24.2309%" y="383.50">Rust_MCS-61bf4cd422d62802.exe`enum2$&lt;core::option::Option&lt;ref$&lt;usize&gt; &gt; &gt;::cloned(enum2$&lt;core::option::Option&lt;ref$</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::clone::impls::impl$5::clone (2,675 samples, 75.20%)</title><rect x="23.9809%" y="357" width="75.2038%" height="15" fill="rgb(216,46,13)" fg:x="853" fg:w="2675"/><text x="24.2309%" y="367.50">Rust_MCS-61bf4cd422d62802.exe`core::clone::impls::impl$5::clone</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::vertex::vertex&lt;6&gt;(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (2,675 samples, 75.20%)</title><rect x="23.9809%" y="341" width="75.2038%" height="15" fill="rgb(205,184,25)" fg:x="853" fg:w="2675"/><text x="24.2309%" y="351.50">Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs_utils::vertex::vertex&lt;6&gt;(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,n..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$2::index_mut(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (44 samples, 1.24%)</title><rect x="97.9477%" y="325" width="1.2370%" height="15" fill="rgb(228,1,10)" fg:x="3484" fg:w="44"/><text x="98.1977%" y="335.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, tuple$ (44 samples, 1.24%)</title><rect x="97.9477%" y="309" width="1.2370%" height="15" fill="rgb(213,116,27)" fg:x="3484" fg:w="44"/><text x="98.1977%" y="319.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$0::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="99.1847%" y="421" width="0.0281%" height="15" fill="rgb(241,95,50)" fg:x="3528" fg:w="1"/><text x="99.4347%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="99.1847%" y="405" width="0.0281%" height="15" fill="rgb(238,48,32)" fg:x="3528" fg:w="1"/><text x="99.4347%" y="415.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="99.2128%" y="421" width="0.0281%" height="15" fill="rgb(235,113,49)" fg:x="3529" fg:w="1"/><text x="99.4628%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::sync::impl$29::deref (3,519 samples, 98.93%)</title><rect x="0.3374%" y="709" width="98.9317%" height="15" fill="rgb(205,127,43)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="719.50">Rust_MCS-61bf4cd422d62802.exe`alloc::sync::impl$29::deref</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::sync::Arc::inner (3,519 samples, 98.93%)</title><rect x="0.3374%" y="693" width="98.9317%" height="15" fill="rgb(250,162,2)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="703.50">Rust_MCS-61bf4cd422d62802.exe`alloc::sync::Arc::inner</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::non_null::NonNull::as_ref (3,519 samples, 98.93%)</title><rect x="0.3374%" y="677" width="98.9317%" height="15" fill="rgb(220,13,41)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="687.50">Rust_MCS-61bf4cd422d62802.exe`core::ptr::non_null::NonNull::as_ref</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt; (3,519 samples, 98.93%)</title><rect x="0.3374%" y="661" width="98.9317%" height="15" fill="rgb(249,221,25)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="671.50">Rust_MCS-61bf4cd422d62802.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::run_test::closure$1 (3,519 samples, 98.93%)</title><rect x="0.3374%" y="645" width="98.9317%" height="15" fill="rgb(215,208,19)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="655.50">Rust_MCS-61bf4cd422d62802.exe`test::run_test::closure$1</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place (3,519 samples, 98.93%)</title><rect x="0.3374%" y="629" width="98.9317%" height="15" fill="rgb(236,175,2)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="639.50">Rust_MCS-61bf4cd422d62802.exe`core::ptr::drop_in_place</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::sync::poison::mutex::impl$14::drop (3,519 samples, 98.93%)</title><rect x="0.3374%" y="613" width="98.9317%" height="15" fill="rgb(241,52,2)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="623.50">Rust_MCS-61bf4cd422d62802.exe`std::sync::poison::mutex::impl$14::drop</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::sync::poison::Flag::done (3,519 samples, 98.93%)</title><rect x="0.3374%" y="597" width="98.9317%" height="15" fill="rgb(248,140,14)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="607.50">Rust_MCS-61bf4cd422d62802.exe`std::sync::poison::Flag::done</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::run_test::closure$0 (3,519 samples, 98.93%)</title><rect x="0.3374%" y="581" width="98.9317%" height="15" fill="rgb(253,22,42)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="591.50">Rust_MCS-61bf4cd422d62802.exe`test::run_test::closure$0</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::run_test_in_process (3,519 samples, 98.93%)</title><rect x="0.3374%" y="565" width="98.9317%" height="15" fill="rgb(234,61,47)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="575.50">Rust_MCS-61bf4cd422d62802.exe`test::run_test_in_process</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::panic::catch_unwind (3,519 samples, 98.93%)</title><rect x="0.3374%" y="549" width="98.9317%" height="15" fill="rgb(208,226,15)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="559.50">Rust_MCS-61bf4cd422d62802.exe`std::panic::catch_unwind</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::panicking::try (3,519 samples, 98.93%)</title><rect x="0.3374%" y="533" width="98.9317%" height="15" fill="rgb(217,221,4)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="543.50">Rust_MCS-61bf4cd422d62802.exe`std::panicking::try</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::panicking::try::do_call (3,519 samples, 98.93%)</title><rect x="0.3374%" y="517" width="98.9317%" height="15" fill="rgb(212,174,34)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="527.50">Rust_MCS-61bf4cd422d62802.exe`std::panicking::try::do_call</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`test::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt; (*)()&gt; (3,519 samples, 98.93%)</title><rect x="0.3374%" y="501" width="98.9317%" height="15" fill="rgb(253,83,4)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="511.50">Rust_MCS-61bf4cd422d62802.exe`test::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,a..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ops::function::FnOnce::call_once&lt;Rust_MCS::tests::test_for_flamegraph_0::closure_env$0,tuple$&lt;&gt; &gt; (3,519 samples, 98.93%)</title><rect x="0.3374%" y="485" width="98.9317%" height="15" fill="rgb(250,195,49)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="495.50">Rust_MCS-61bf4cd422d62802.exe`core::ops::function::FnOnce::call_once&lt;Rust_MCS::tests::test_for_flamegraph_0::closure_env$0,tuple$&lt;&gt; &gt;</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::tests::test_for_flamegraph_0::closure$0 (3,519 samples, 98.93%)</title><rect x="0.3374%" y="469" width="98.9317%" height="15" fill="rgb(241,192,25)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="479.50">Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::tests::test_for_flamegraph_0::closure$0</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::tests::test_for_flamegraph_0 (3,519 samples, 98.93%)</title><rect x="0.3374%" y="453" width="98.9317%" height="15" fill="rgb(208,124,10)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="463.50">Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::tests::test_for_flamegraph_0</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, Rust_MCS::StopStruct*, Rust_MCS::IinitEnum*, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (3,519 samples, 98.93%)</title><rect x="0.3374%" y="437" width="98.9317%" height="15" fill="rgb(222,33,0)" fg:x="12" fg:w="3519"/><text x="0.5874%" y="447.50">Rust_MCS-61bf4cd422d62802.exe`Rust_MCS::mcs(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nal..</text></g><g><title>`0x7FFAFCDE05E0 (1 samples, 0.03%)</title><rect x="99.2409%" y="421" width="0.0281%" height="15" fill="rgb(234,209,28)" fg:x="3530" fg:w="1"/><text x="99.4909%" y="431.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (3,520 samples, 98.96%)</title><rect x="0.3374%" y="837" width="98.9598%" height="15" fill="rgb(224,11,23)" fg:x="12" fg:w="3520"/><text x="0.5874%" y="847.50">Rust_MCS-61bf4cd422d62802.exe`std::sys::pal::windows::thread::impl$0::new::thread_start</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::boxed::impl$28::call_once (3,520 samples, 98.96%)</title><rect x="0.3374%" y="821" width="98.9598%" height="15" fill="rgb(232,99,1)" fg:x="12" fg:w="3520"/><text x="0.5874%" y="831.50">Rust_MCS-61bf4cd422d62802.exe`alloc::boxed::impl$28::call_once</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::boxed::impl$28::call_once (3,520 samples, 98.96%)</title><rect x="0.3374%" y="805" width="98.9598%" height="15" fill="rgb(237,95,45)" fg:x="12" fg:w="3520"/><text x="0.5874%" y="815.50">Rust_MCS-61bf4cd422d62802.exe`alloc::boxed::impl$28::call_once</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`alloc::boxed::impl$8::drop (3,520 samples, 98.96%)</title><rect x="0.3374%" y="789" width="98.9598%" height="15" fill="rgb(208,109,11)" fg:x="12" fg:w="3520"/><text x="0.5874%" y="799.50">Rust_MCS-61bf4cd422d62802.exe`alloc::boxed::impl$8::drop</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::alloc::layout::Layout::for_value_raw (3,520 samples, 98.96%)</title><rect x="0.3374%" y="773" width="98.9598%" height="15" fill="rgb(216,190,48)" fg:x="12" fg:w="3520"/><text x="0.5874%" y="783.50">Rust_MCS-61bf4cd422d62802.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::mem::size_of_val_raw (3,520 samples, 98.96%)</title><rect x="0.3374%" y="757" width="98.9598%" height="15" fill="rgb(251,171,36)" fg:x="12" fg:w="3520"/><text x="0.5874%" y="767.50">Rust_MCS-61bf4cd422d62802.exe`core::mem::size_of_val_raw</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt; (3,520 samples, 98.96%)</title><rect x="0.3374%" y="741" width="98.9598%" height="15" fill="rgb(230,62,22)" fg:x="12" fg:w="3520"/><text x="0.5874%" y="751.50">Rust_MCS-61bf4cd422d62802.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;,tu..</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::thread::impl$0::spawn_unchecked_::closure$1 (3,520 samples, 98.96%)</title><rect x="0.3374%" y="725" width="98.9598%" height="15" fill="rgb(225,114,35)" fg:x="12" fg:w="3520"/><text x="0.5874%" y="735.50">Rust_MCS-61bf4cd422d62802.exe`std::thread::impl$0::spawn_unchecked_::closure$1</text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`std::sys::pal::windows::thread::Thread::set_name (1 samples, 0.03%)</title><rect x="99.2690%" y="709" width="0.0281%" height="15" fill="rgb(215,118,42)" fg:x="3531" fg:w="1"/><text x="99.5190%" y="719.50"></text></g><g><title>Rust_MCS-61bf4cd422d62802.exe`core::ffi::c_str::CStr::to_str (1 samples, 0.03%)</title><rect x="99.2690%" y="693" width="0.0281%" height="15" fill="rgb(243,119,21)" fg:x="3531" fg:w="1"/><text x="99.5190%" y="703.50"></text></g><g><title>`0x7FFB1E1FB997 (1 samples, 0.03%)</title><rect x="99.2972%" y="773" width="0.0281%" height="15" fill="rgb(252,177,53)" fg:x="3532" fg:w="1"/><text x="99.5472%" y="783.50"></text></g><g><title>`0x7FFB1E2FFE54 (1 samples, 0.03%)</title><rect x="99.2972%" y="757" width="0.0281%" height="15" fill="rgb(237,209,29)" fg:x="3532" fg:w="1"/><text x="99.5472%" y="767.50"></text></g><g><title>`0x7FFB1E1FA2DA (2 samples, 0.06%)</title><rect x="99.2972%" y="805" width="0.0562%" height="15" fill="rgb(212,65,23)" fg:x="3532" fg:w="2"/><text x="99.5472%" y="815.50"></text></g><g><title>`0x7FFB1E1FA6AC (2 samples, 0.06%)</title><rect x="99.2972%" y="789" width="0.0562%" height="15" fill="rgb(230,222,46)" fg:x="3532" fg:w="2"/><text x="99.5472%" y="799.50"></text></g><g><title>`0x7FFB1E1FBAEC (1 samples, 0.03%)</title><rect x="99.3253%" y="773" width="0.0281%" height="15" fill="rgb(215,135,32)" fg:x="3533" fg:w="1"/><text x="99.5753%" y="783.50"></text></g><g><title>`0x7FFB1E1A627E (1 samples, 0.03%)</title><rect x="99.3253%" y="757" width="0.0281%" height="15" fill="rgb(246,101,22)" fg:x="3533" fg:w="1"/><text x="99.5753%" y="767.50"></text></g><g><title>`0x7FFB1E1A674A (1 samples, 0.03%)</title><rect x="99.3253%" y="741" width="0.0281%" height="15" fill="rgb(206,107,13)" fg:x="3533" fg:w="1"/><text x="99.5753%" y="751.50"></text></g><g><title>`0x7FFB1E2FFCF4 (1 samples, 0.03%)</title><rect x="99.3253%" y="725" width="0.0281%" height="15" fill="rgb(250,100,44)" fg:x="3533" fg:w="1"/><text x="99.5753%" y="735.50"></text></g><g><title>`0x7FFB1E1FA3A1 (1 samples, 0.03%)</title><rect x="99.3534%" y="805" width="0.0281%" height="15" fill="rgb(231,147,38)" fg:x="3534" fg:w="1"/><text x="99.6034%" y="815.50"></text></g><g><title>`0x7FFB1E20853C (1 samples, 0.03%)</title><rect x="99.3534%" y="789" width="0.0281%" height="15" fill="rgb(229,8,40)" fg:x="3534" fg:w="1"/><text x="99.6034%" y="799.50"></text></g><g><title>`0x7FFB1CB1E8D7 (3,532 samples, 99.30%)</title><rect x="0.1125%" y="853" width="99.2972%" height="15" fill="rgb(221,135,30)" fg:x="4" fg:w="3532"/><text x="0.3625%" y="863.50">`0x7FFB1CB1E8D7</text></g><g><title>`0x7FFB1E2061B1 (4 samples, 0.11%)</title><rect x="99.2972%" y="837" width="0.1125%" height="15" fill="rgb(249,193,18)" fg:x="3532" fg:w="4"/><text x="99.5472%" y="847.50"></text></g><g><title>`0x7FFB1E204757 (4 samples, 0.11%)</title><rect x="99.2972%" y="821" width="0.1125%" height="15" fill="rgb(209,133,39)" fg:x="3532" fg:w="4"/><text x="99.5472%" y="831.50"></text></g><g><title>`0x7FFB1E2FF9B4 (1 samples, 0.03%)</title><rect x="99.3815%" y="805" width="0.0281%" height="15" fill="rgb(232,100,14)" fg:x="3535" fg:w="1"/><text x="99.6315%" y="815.50"></text></g><g><title>`0x7FFB1E25BF6C (3,533 samples, 99.33%)</title><rect x="0.1125%" y="869" width="99.3253%" height="15" fill="rgb(224,185,1)" fg:x="4" fg:w="3533"/><text x="0.3625%" y="879.50">`0x7FFB1E25BF6C</text></g><g><title>`0x7FFB1CB1E8E0 (1 samples, 0.03%)</title><rect x="99.4096%" y="853" width="0.0281%" height="15" fill="rgb(223,139,8)" fg:x="3536" fg:w="1"/><text x="99.6596%" y="863.50"></text></g><g><title>`0x7FFB1E25BFF6 (1 samples, 0.03%)</title><rect x="99.4096%" y="837" width="0.0281%" height="15" fill="rgb(232,213,38)" fg:x="3536" fg:w="1"/><text x="99.6596%" y="847.50"></text></g><g><title>`0x7FFB1E25C74D (1 samples, 0.03%)</title><rect x="99.4096%" y="821" width="0.0281%" height="15" fill="rgb(207,94,22)" fg:x="3536" fg:w="1"/><text x="99.6596%" y="831.50"></text></g><g><title>`0x7FFB1E1B2080 (1 samples, 0.03%)</title><rect x="99.4096%" y="805" width="0.0281%" height="15" fill="rgb(219,183,54)" fg:x="3536" fg:w="1"/><text x="99.6596%" y="815.50"></text></g><g><title>`0x7FFB1D520A42 (1 samples, 0.03%)</title><rect x="99.4096%" y="789" width="0.0281%" height="15" fill="rgb(216,185,54)" fg:x="3536" fg:w="1"/><text x="99.6596%" y="799.50"></text></g><g><title>`0x7FFB1D520A89 (1 samples, 0.03%)</title><rect x="99.4096%" y="773" width="0.0281%" height="15" fill="rgb(254,217,39)" fg:x="3536" fg:w="1"/><text x="99.6596%" y="783.50"></text></g><g><title>`0x7FFB1D4F2090 (1 samples, 0.03%)</title><rect x="99.4096%" y="757" width="0.0281%" height="15" fill="rgb(240,178,23)" fg:x="3536" fg:w="1"/><text x="99.6596%" y="767.50"></text></g><g><title>`0x7FFB1E291D7E (1 samples, 0.03%)</title><rect x="99.4377%" y="821" width="0.0281%" height="15" fill="rgb(218,11,47)" fg:x="3537" fg:w="1"/><text x="99.6877%" y="831.50"></text></g><g><title>`0x7FFB1E29391B (1 samples, 0.03%)</title><rect x="99.4377%" y="805" width="0.0281%" height="15" fill="rgb(218,51,51)" fg:x="3537" fg:w="1"/><text x="99.6877%" y="815.50"></text></g><g><title>`0x7FFB1E2939DD (1 samples, 0.03%)</title><rect x="99.4377%" y="789" width="0.0281%" height="15" fill="rgb(238,126,27)" fg:x="3537" fg:w="1"/><text x="99.6877%" y="799.50"></text></g><g><title>`0x7FFB1E305EEC (1 samples, 0.03%)</title><rect x="99.4377%" y="773" width="0.0281%" height="15" fill="rgb(249,202,22)" fg:x="3537" fg:w="1"/><text x="99.6877%" y="783.50"></text></g><g><title>`0x7FFB1E291F53 (1 samples, 0.03%)</title><rect x="99.4658%" y="821" width="0.0281%" height="15" fill="rgb(254,195,49)" fg:x="3538" fg:w="1"/><text x="99.7158%" y="831.50"></text></g><g><title>`0x7FFB1E229643 (1 samples, 0.03%)</title><rect x="99.4658%" y="805" width="0.0281%" height="15" fill="rgb(208,123,14)" fg:x="3538" fg:w="1"/><text x="99.7158%" y="815.50"></text></g><g><title>`0x7FFB1E22A1B2 (1 samples, 0.03%)</title><rect x="99.4658%" y="789" width="0.0281%" height="15" fill="rgb(224,200,8)" fg:x="3538" fg:w="1"/><text x="99.7158%" y="799.50"></text></g><g><title>`0x7FFB1E230D75 (1 samples, 0.03%)</title><rect x="99.4658%" y="773" width="0.0281%" height="15" fill="rgb(217,61,36)" fg:x="3538" fg:w="1"/><text x="99.7158%" y="783.50"></text></g><g><title>`0x7FFB1E29D60D (1 samples, 0.03%)</title><rect x="99.4658%" y="757" width="0.0281%" height="15" fill="rgb(206,35,45)" fg:x="3538" fg:w="1"/><text x="99.7158%" y="767.50"></text></g><g><title>`0x7FFB1E29D681 (1 samples, 0.03%)</title><rect x="99.4658%" y="741" width="0.0281%" height="15" fill="rgb(217,65,33)" fg:x="3538" fg:w="1"/><text x="99.7158%" y="751.50"></text></g><g><title>`0x7FFB1E3000F4 (1 samples, 0.03%)</title><rect x="99.4658%" y="725" width="0.0281%" height="15" fill="rgb(222,158,48)" fg:x="3538" fg:w="1"/><text x="99.7158%" y="735.50"></text></g><g><title>`0x7FFB1E291F94 (1 samples, 0.03%)</title><rect x="99.4940%" y="821" width="0.0281%" height="15" fill="rgb(254,2,54)" fg:x="3539" fg:w="1"/><text x="99.7440%" y="831.50"></text></g><g><title>`0x7FFB1E1CFFF3 (1 samples, 0.03%)</title><rect x="99.4940%" y="805" width="0.0281%" height="15" fill="rgb(250,143,38)" fg:x="3539" fg:w="1"/><text x="99.7440%" y="815.50"></text></g><g><title>`0x7FFB1E1D0181 (1 samples, 0.03%)</title><rect x="99.4940%" y="789" width="0.0281%" height="15" fill="rgb(248,25,0)" fg:x="3539" fg:w="1"/><text x="99.7440%" y="799.50"></text></g><g><title>`0x7FFB1E1CFAA9 (1 samples, 0.03%)</title><rect x="99.4940%" y="773" width="0.0281%" height="15" fill="rgb(206,152,27)" fg:x="3539" fg:w="1"/><text x="99.7440%" y="783.50"></text></g><g><title>`0x7FFB1E3032A4 (1 samples, 0.03%)</title><rect x="99.4940%" y="757" width="0.0281%" height="15" fill="rgb(240,77,30)" fg:x="3539" fg:w="1"/><text x="99.7440%" y="767.50"></text></g><g><title>`0x7FFB1E292C32 (1 samples, 0.03%)</title><rect x="99.5221%" y="821" width="0.0281%" height="15" fill="rgb(231,5,3)" fg:x="3540" fg:w="1"/><text x="99.7721%" y="831.50"></text></g><g><title>`0x7FFB1E1F3C76 (1 samples, 0.03%)</title><rect x="99.5221%" y="805" width="0.0281%" height="15" fill="rgb(207,226,32)" fg:x="3540" fg:w="1"/><text x="99.7721%" y="815.50"></text></g><g><title>`0x7FFB1E1F3EC0 (1 samples, 0.03%)</title><rect x="99.5221%" y="789" width="0.0281%" height="15" fill="rgb(222,207,47)" fg:x="3540" fg:w="1"/><text x="99.7721%" y="799.50"></text></g><g><title>`0x7FFB1E20039E (1 samples, 0.03%)</title><rect x="99.5502%" y="693" width="0.0281%" height="15" fill="rgb(229,115,45)" fg:x="3541" fg:w="1"/><text x="99.8002%" y="703.50"></text></g><g><title>`0x7FFB1E1A8CC3 (1 samples, 0.03%)</title><rect x="99.5502%" y="677" width="0.0281%" height="15" fill="rgb(224,191,6)" fg:x="3541" fg:w="1"/><text x="99.8002%" y="687.50"></text></g><g><title>`0x7FFB1E20064E (1 samples, 0.03%)</title><rect x="99.5783%" y="693" width="0.0281%" height="15" fill="rgb(230,227,24)" fg:x="3542" fg:w="1"/><text x="99.8283%" y="703.50"></text></g><g><title>`0x7FFB1E20239C (1 samples, 0.03%)</title><rect x="99.5783%" y="677" width="0.0281%" height="15" fill="rgb(228,80,19)" fg:x="3542" fg:w="1"/><text x="99.8283%" y="687.50"></text></g><g><title>`0x7FFB1E1FCE01 (1 samples, 0.03%)</title><rect x="99.5783%" y="661" width="0.0281%" height="15" fill="rgb(247,229,0)" fg:x="3542" fg:w="1"/><text x="99.8283%" y="671.50"></text></g><g><title>`0x7FFB1E1A635C (1 samples, 0.03%)</title><rect x="99.5783%" y="645" width="0.0281%" height="15" fill="rgb(237,194,15)" fg:x="3542" fg:w="1"/><text x="99.8283%" y="655.50"></text></g><g><title>`0x7FFB1E1A6EAB (1 samples, 0.03%)</title><rect x="99.5783%" y="629" width="0.0281%" height="15" fill="rgb(219,203,20)" fg:x="3542" fg:w="1"/><text x="99.8283%" y="639.50"></text></g><g><title>`0x7FFB1E1A85B1 (1 samples, 0.03%)</title><rect x="99.5783%" y="613" width="0.0281%" height="15" fill="rgb(234,128,8)" fg:x="3542" fg:w="1"/><text x="99.8283%" y="623.50"></text></g><g><title>`0x7FFB1E3001F4 (1 samples, 0.03%)</title><rect x="99.5783%" y="597" width="0.0281%" height="15" fill="rgb(248,202,8)" fg:x="3542" fg:w="1"/><text x="99.8283%" y="607.50"></text></g><g><title>`0x7FFB1E208518 (1 samples, 0.03%)</title><rect x="99.6064%" y="677" width="0.0281%" height="15" fill="rgb(206,104,37)" fg:x="3543" fg:w="1"/><text x="99.8564%" y="687.50"></text></g><g><title>`0x7FFB1E20853C (1 samples, 0.03%)</title><rect x="99.6345%" y="677" width="0.0281%" height="15" fill="rgb(223,8,27)" fg:x="3544" fg:w="1"/><text x="99.8845%" y="687.50"></text></g><g><title>`0x7FFB1E1FF082 (5 samples, 0.14%)</title><rect x="99.5502%" y="757" width="0.1406%" height="15" fill="rgb(216,217,28)" fg:x="3541" fg:w="5"/><text x="99.8002%" y="767.50"></text></g><g><title>`0x7FFB1E1BB0E7 (5 samples, 0.14%)</title><rect x="99.5502%" y="741" width="0.1406%" height="15" fill="rgb(249,199,1)" fg:x="3541" fg:w="5"/><text x="99.8002%" y="751.50"></text></g><g><title>`0x7FFB1E1FCE01 (5 samples, 0.14%)</title><rect x="99.5502%" y="725" width="0.1406%" height="15" fill="rgb(240,85,17)" fg:x="3541" fg:w="5"/><text x="99.8002%" y="735.50"></text></g><g><title>`0x7FFB1E1A63C9 (5 samples, 0.14%)</title><rect x="99.5502%" y="709" width="0.1406%" height="15" fill="rgb(206,108,45)" fg:x="3541" fg:w="5"/><text x="99.8002%" y="719.50"></text></g><g><title>`0x7FFB1E2007C2 (3 samples, 0.08%)</title><rect x="99.6064%" y="693" width="0.0843%" height="15" fill="rgb(245,210,41)" fg:x="3543" fg:w="3"/><text x="99.8564%" y="703.50"></text></g><g><title>`0x7FFB1E208581 (1 samples, 0.03%)</title><rect x="99.6626%" y="677" width="0.0281%" height="15" fill="rgb(206,13,37)" fg:x="3545" fg:w="1"/><text x="99.9126%" y="687.50"></text></g><g><title>`0x7FFB1E1FF0AA (1 samples, 0.03%)</title><rect x="99.6908%" y="757" width="0.0281%" height="15" fill="rgb(250,61,18)" fg:x="3546" fg:w="1"/><text x="99.9408%" y="767.50"></text></g><g><title>`0x7FFB1E1FA227 (1 samples, 0.03%)</title><rect x="99.6908%" y="741" width="0.0281%" height="15" fill="rgb(235,172,48)" fg:x="3546" fg:w="1"/><text x="99.9408%" y="751.50"></text></g><g><title>`0x7FFB1E1FA3A1 (1 samples, 0.03%)</title><rect x="99.6908%" y="725" width="0.0281%" height="15" fill="rgb(249,201,17)" fg:x="3546" fg:w="1"/><text x="99.9408%" y="735.50"></text></g><g><title>`0x7FFB1E20865A (1 samples, 0.03%)</title><rect x="99.6908%" y="709" width="0.0281%" height="15" fill="rgb(219,208,6)" fg:x="3546" fg:w="1"/><text x="99.9408%" y="719.50"></text></g><g><title>`0x7FFB1B4A8EEE (1 samples, 0.03%)</title><rect x="99.7189%" y="645" width="0.0281%" height="15" fill="rgb(248,31,23)" fg:x="3547" fg:w="1"/><text x="99.9689%" y="655.50"></text></g><g><title>`0x7FFB1B4A7678 (1 samples, 0.03%)</title><rect x="99.7189%" y="629" width="0.0281%" height="15" fill="rgb(245,15,42)" fg:x="3547" fg:w="1"/><text x="99.9689%" y="639.50"></text></g><g><title>`0x7FFB1B4A6DF1 (1 samples, 0.03%)</title><rect x="99.7189%" y="613" width="0.0281%" height="15" fill="rgb(222,217,39)" fg:x="3547" fg:w="1"/><text x="99.9689%" y="623.50"></text></g><g><title>`0x7FFB1B4A6AFD (1 samples, 0.03%)</title><rect x="99.7189%" y="597" width="0.0281%" height="15" fill="rgb(210,219,27)" fg:x="3547" fg:w="1"/><text x="99.9689%" y="607.50"></text></g><g><title>`0x7FFB1B4A6C11 (1 samples, 0.03%)</title><rect x="99.7189%" y="581" width="0.0281%" height="15" fill="rgb(252,166,36)" fg:x="3547" fg:w="1"/><text x="99.9689%" y="591.50"></text></g><g><title>`0x7FFB1B5835FD (2 samples, 0.06%)</title><rect x="99.7189%" y="661" width="0.0562%" height="15" fill="rgb(245,132,34)" fg:x="3547" fg:w="2"/><text x="99.9689%" y="671.50"></text></g><g><title>`0x7FFB1B4A8F2E (1 samples, 0.03%)</title><rect x="99.7470%" y="645" width="0.0281%" height="15" fill="rgb(236,54,3)" fg:x="3548" fg:w="1"/><text x="99.9970%" y="655.50"></text></g><g><title>`0x7FFB1B4A6420 (1 samples, 0.03%)</title><rect x="99.7470%" y="629" width="0.0281%" height="15" fill="rgb(241,173,43)" fg:x="3548" fg:w="1"/><text x="99.9970%" y="639.50"></text></g><g><title>`0x7FFB1B4A65A3 (1 samples, 0.03%)</title><rect x="99.7470%" y="613" width="0.0281%" height="15" fill="rgb(215,190,9)" fg:x="3548" fg:w="1"/><text x="99.9970%" y="623.50"></text></g><g><title>`0x7FFB1B4A779B (1 samples, 0.03%)</title><rect x="99.7470%" y="597" width="0.0281%" height="15" fill="rgb(242,101,16)" fg:x="3548" fg:w="1"/><text x="99.9970%" y="607.50"></text></g><g><title>`0x7FFB1B4A921C (1 samples, 0.03%)</title><rect x="99.7470%" y="581" width="0.0281%" height="15" fill="rgb(223,190,21)" fg:x="3548" fg:w="1"/><text x="99.9970%" y="591.50"></text></g><g><title>`0x7FFB1E2FF8D4 (1 samples, 0.03%)</title><rect x="99.7470%" y="565" width="0.0281%" height="15" fill="rgb(215,228,25)" fg:x="3548" fg:w="1"/><text x="99.9970%" y="575.50"></text></g><g><title>`0x7FFB1E277390 (9 samples, 0.25%)</title><rect x="99.5502%" y="805" width="0.2530%" height="15" fill="rgb(225,36,22)" fg:x="3541" fg:w="9"/><text x="99.8002%" y="815.50"></text></g><g><title>`0x7FFB1E20A650 (9 samples, 0.25%)</title><rect x="99.5502%" y="789" width="0.2530%" height="15" fill="rgb(251,106,46)" fg:x="3541" fg:w="9"/><text x="99.8002%" y="799.50"></text></g><g><title>`0x7FFB1E1FED20 (9 samples, 0.25%)</title><rect x="99.5502%" y="773" width="0.2530%" height="15" fill="rgb(208,90,1)" fg:x="3541" fg:w="9"/><text x="99.8002%" y="783.50"></text></g><g><title>`0x7FFB1E1FF114 (3 samples, 0.08%)</title><rect x="99.7189%" y="757" width="0.0843%" height="15" fill="rgb(243,10,4)" fg:x="3547" fg:w="3"/><text x="99.9689%" y="767.50"></text></g><g><title>`0x7FFB1E261603 (3 samples, 0.08%)</title><rect x="99.7189%" y="741" width="0.0843%" height="15" fill="rgb(212,137,27)" fg:x="3547" fg:w="3"/><text x="99.9689%" y="751.50"></text></g><g><title>`0x7FFB1E261946 (3 samples, 0.08%)</title><rect x="99.7189%" y="725" width="0.0843%" height="15" fill="rgb(231,220,49)" fg:x="3547" fg:w="3"/><text x="99.9689%" y="735.50"></text></g><g><title>`0x7FFB1E26191A (3 samples, 0.08%)</title><rect x="99.7189%" y="709" width="0.0843%" height="15" fill="rgb(237,96,20)" fg:x="3547" fg:w="3"/><text x="99.9689%" y="719.50"></text></g><g><title>`0x7FFB1E1B142C (3 samples, 0.08%)</title><rect x="99.7189%" y="693" width="0.0843%" height="15" fill="rgb(239,229,30)" fg:x="3547" fg:w="3"/><text x="99.9689%" y="703.50"></text></g><g><title>`0x7FFB1E1B2080 (3 samples, 0.08%)</title><rect x="99.7189%" y="677" width="0.0843%" height="15" fill="rgb(219,65,33)" fg:x="3547" fg:w="3"/><text x="99.9689%" y="687.50"></text></g><g><title>`0x7FFB1B583668 (1 samples, 0.03%)</title><rect x="99.7751%" y="661" width="0.0281%" height="15" fill="rgb(243,134,7)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="671.50"></text></g><g><title>`0x7FFB1B505680 (1 samples, 0.03%)</title><rect x="99.7751%" y="645" width="0.0281%" height="15" fill="rgb(216,177,54)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="655.50"></text></g><g><title>`0x7FFB1B505774 (1 samples, 0.03%)</title><rect x="99.7751%" y="629" width="0.0281%" height="15" fill="rgb(211,160,20)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="639.50"></text></g><g><title>`0x7FFB1B589547 (1 samples, 0.03%)</title><rect x="99.7751%" y="613" width="0.0281%" height="15" fill="rgb(239,85,39)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="623.50"></text></g><g><title>`0x7FFB1B589587 (1 samples, 0.03%)</title><rect x="99.7751%" y="597" width="0.0281%" height="15" fill="rgb(232,125,22)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="607.50"></text></g><g><title>`0x7FFB1B589653 (1 samples, 0.03%)</title><rect x="99.7751%" y="581" width="0.0281%" height="15" fill="rgb(244,57,34)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="591.50"></text></g><g><title>`0x7FFB1B58979D (1 samples, 0.03%)</title><rect x="99.7751%" y="565" width="0.0281%" height="15" fill="rgb(214,203,32)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="575.50"></text></g><g><title>`0x7FFB1B5ACD08 (1 samples, 0.03%)</title><rect x="99.7751%" y="549" width="0.0281%" height="15" fill="rgb(207,58,43)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="559.50"></text></g><g><title>`0x7FFB1B5A8E63 (1 samples, 0.03%)</title><rect x="99.7751%" y="533" width="0.0281%" height="15" fill="rgb(215,193,15)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="543.50"></text></g><g><title>`0x7FFB1B5AAEEF (1 samples, 0.03%)</title><rect x="99.7751%" y="517" width="0.0281%" height="15" fill="rgb(232,15,44)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="527.50"></text></g><g><title>`0x7FFB1B5ADAA4 (1 samples, 0.03%)</title><rect x="99.7751%" y="501" width="0.0281%" height="15" fill="rgb(212,3,48)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="511.50"></text></g><g><title>`0x7FFB1B5AA833 (1 samples, 0.03%)</title><rect x="99.7751%" y="485" width="0.0281%" height="15" fill="rgb(218,128,7)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="495.50"></text></g><g><title>`0x7FFB1B5AC5FC (1 samples, 0.03%)</title><rect x="99.7751%" y="469" width="0.0281%" height="15" fill="rgb(226,216,39)" fg:x="3549" fg:w="1"/><text x="100.0251%" y="479.50"></text></g><g><title>`0x7FFB1E277405 (1 samples, 0.03%)</title><rect x="99.8032%" y="805" width="0.0281%" height="15" fill="rgb(243,47,51)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="815.50"></text></g><g><title>`0x7FFB1E1A7B48 (1 samples, 0.03%)</title><rect x="99.8032%" y="789" width="0.0281%" height="15" fill="rgb(241,183,40)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="799.50"></text></g><g><title>`0x7FFB1E1AA92B (1 samples, 0.03%)</title><rect x="99.8032%" y="773" width="0.0281%" height="15" fill="rgb(231,217,32)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="783.50"></text></g><g><title>`0x7FFB1E1AAAF6 (1 samples, 0.03%)</title><rect x="99.8032%" y="757" width="0.0281%" height="15" fill="rgb(229,61,38)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="767.50"></text></g><g><title>`0x7FFB1E1AA2F3 (1 samples, 0.03%)</title><rect x="99.8032%" y="741" width="0.0281%" height="15" fill="rgb(225,210,5)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="751.50"></text></g><g><title>`0x7FFB1E1FF696 (1 samples, 0.03%)</title><rect x="99.8032%" y="725" width="0.0281%" height="15" fill="rgb(231,79,45)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="735.50"></text></g><g><title>`0x7FFB1E1FEFD3 (1 samples, 0.03%)</title><rect x="99.8032%" y="709" width="0.0281%" height="15" fill="rgb(224,100,7)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="719.50"></text></g><g><title>`0x7FFB1E1B9376 (1 samples, 0.03%)</title><rect x="99.8032%" y="693" width="0.0281%" height="15" fill="rgb(241,198,18)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="703.50"></text></g><g><title>`0x7FFB1E1B97D9 (1 samples, 0.03%)</title><rect x="99.8032%" y="677" width="0.0281%" height="15" fill="rgb(252,97,53)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="687.50"></text></g><g><title>`0x7FFB1E2C5251 (1 samples, 0.03%)</title><rect x="99.8032%" y="661" width="0.0281%" height="15" fill="rgb(220,88,7)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="671.50"></text></g><g><title>`0x7FFB1E2C52D8 (1 samples, 0.03%)</title><rect x="99.8032%" y="645" width="0.0281%" height="15" fill="rgb(213,176,14)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="655.50"></text></g><g><title>`0x7FFB1E2CBD0F (1 samples, 0.03%)</title><rect x="99.8032%" y="629" width="0.0281%" height="15" fill="rgb(246,73,7)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="639.50"></text></g><g><title>`0x7FFB1E2CEB19 (1 samples, 0.03%)</title><rect x="99.8032%" y="613" width="0.0281%" height="15" fill="rgb(245,64,36)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="623.50"></text></g><g><title>`0x7FFB1E276B76 (1 samples, 0.03%)</title><rect x="99.8032%" y="597" width="0.0281%" height="15" fill="rgb(245,80,10)" fg:x="3550" fg:w="1"/><text x="100.0532%" y="607.50"></text></g><g><title>`0x7FFB1E292CFD (11 samples, 0.31%)</title><rect x="99.5502%" y="821" width="0.3092%" height="15" fill="rgb(232,107,50)" fg:x="3541" fg:w="11"/><text x="99.8002%" y="831.50"></text></g><g><title>`0x7FFB1E27747F (1 samples, 0.03%)</title><rect x="99.8313%" y="805" width="0.0281%" height="15" fill="rgb(253,3,0)" fg:x="3551" fg:w="1"/><text x="100.0813%" y="815.50"></text></g><g><title>`0x7FFB1B56237D (1 samples, 0.03%)</title><rect x="99.8313%" y="789" width="0.0281%" height="15" fill="rgb(212,99,53)" fg:x="3551" fg:w="1"/><text x="100.0813%" y="799.50"></text></g><g><title>`0x7FFB1B5624EA (1 samples, 0.03%)</title><rect x="99.8313%" y="773" width="0.0281%" height="15" fill="rgb(249,111,54)" fg:x="3551" fg:w="1"/><text x="100.0813%" y="783.50"></text></g><g><title>`0x7FFB1E2FFAD4 (1 samples, 0.03%)</title><rect x="99.8313%" y="757" width="0.0281%" height="15" fill="rgb(249,55,30)" fg:x="3551" fg:w="1"/><text x="100.0813%" y="767.50"></text></g><g><title>`0x7FFB1E292DF1 (1 samples, 0.03%)</title><rect x="99.8594%" y="821" width="0.0281%" height="15" fill="rgb(237,47,42)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="831.50"></text></g><g><title>`0x7FFB1E20064E (1 samples, 0.03%)</title><rect x="99.8594%" y="805" width="0.0281%" height="15" fill="rgb(211,20,18)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="815.50"></text></g><g><title>`0x7FFB1E20239C (1 samples, 0.03%)</title><rect x="99.8594%" y="789" width="0.0281%" height="15" fill="rgb(231,203,46)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="799.50"></text></g><g><title>`0x7FFB1E1FCD73 (1 samples, 0.03%)</title><rect x="99.8594%" y="773" width="0.0281%" height="15" fill="rgb(237,142,3)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="783.50"></text></g><g><title>`0x7FFB1E1FD0A8 (1 samples, 0.03%)</title><rect x="99.8594%" y="757" width="0.0281%" height="15" fill="rgb(241,107,1)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="767.50"></text></g><g><title>`0x7FFB1E1B9376 (1 samples, 0.03%)</title><rect x="99.8594%" y="741" width="0.0281%" height="15" fill="rgb(229,83,13)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="751.50"></text></g><g><title>`0x7FFB1E1B97D9 (1 samples, 0.03%)</title><rect x="99.8594%" y="725" width="0.0281%" height="15" fill="rgb(241,91,40)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="735.50"></text></g><g><title>`0x7FFB1E2C5251 (1 samples, 0.03%)</title><rect x="99.8594%" y="709" width="0.0281%" height="15" fill="rgb(225,3,45)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="719.50"></text></g><g><title>`0x7FFB1E2C52D8 (1 samples, 0.03%)</title><rect x="99.8594%" y="693" width="0.0281%" height="15" fill="rgb(244,223,14)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="703.50"></text></g><g><title>`0x7FFB1E2CBD0F (1 samples, 0.03%)</title><rect x="99.8594%" y="677" width="0.0281%" height="15" fill="rgb(224,124,37)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="687.50"></text></g><g><title>`0x7FFB1E2CEB19 (1 samples, 0.03%)</title><rect x="99.8594%" y="661" width="0.0281%" height="15" fill="rgb(251,171,30)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="671.50"></text></g><g><title>`0x7FFB1E276B95 (1 samples, 0.03%)</title><rect x="99.8594%" y="645" width="0.0281%" height="15" fill="rgb(236,46,54)" fg:x="3552" fg:w="1"/><text x="100.1094%" y="655.50"></text></g><g><title>`0x7FFB1E1FA581 (1 samples, 0.03%)</title><rect x="99.8875%" y="773" width="0.0281%" height="15" fill="rgb(245,213,5)" fg:x="3553" fg:w="1"/><text x="100.1375%" y="783.50"></text></g><g><title>`0x7FFB1E1FAC59 (1 samples, 0.03%)</title><rect x="99.8875%" y="757" width="0.0281%" height="15" fill="rgb(230,144,27)" fg:x="3553" fg:w="1"/><text x="100.1375%" y="767.50"></text></g><g><title>`0x7FFB1E1FB1B0 (1 samples, 0.03%)</title><rect x="99.8875%" y="741" width="0.0281%" height="15" fill="rgb(220,86,6)" fg:x="3553" fg:w="1"/><text x="100.1375%" y="751.50"></text></g><g><title>`0x7FFB1E1FB4E3 (1 samples, 0.03%)</title><rect x="99.8875%" y="725" width="0.0281%" height="15" fill="rgb(240,20,13)" fg:x="3553" fg:w="1"/><text x="100.1375%" y="735.50"></text></g><g><title>`0x7FFB1E2FFF94 (1 samples, 0.03%)</title><rect x="99.8875%" y="709" width="0.0281%" height="15" fill="rgb(217,89,34)" fg:x="3553" fg:w="1"/><text x="100.1375%" y="719.50"></text></g><g><title>`0x7FFB1E292DF8 (2 samples, 0.06%)</title><rect x="99.8875%" y="821" width="0.0562%" height="15" fill="rgb(229,13,5)" fg:x="3553" fg:w="2"/><text x="100.1375%" y="831.50"></text></g><g><title>`0x7FFB1E1FA227 (2 samples, 0.06%)</title><rect x="99.8875%" y="805" width="0.0562%" height="15" fill="rgb(244,67,35)" fg:x="3553" fg:w="2"/><text x="100.1375%" y="815.50"></text></g><g><title>`0x7FFB1E1FA2DA (2 samples, 0.06%)</title><rect x="99.8875%" y="789" width="0.0562%" height="15" fill="rgb(221,40,2)" fg:x="3553" fg:w="2"/><text x="100.1375%" y="799.50"></text></g><g><title>`0x7FFB1E1FA6AC (1 samples, 0.03%)</title><rect x="99.9157%" y="773" width="0.0281%" height="15" fill="rgb(237,157,21)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="783.50"></text></g><g><title>`0x7FFB1E1FBAEC (1 samples, 0.03%)</title><rect x="99.9157%" y="757" width="0.0281%" height="15" fill="rgb(222,94,11)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="767.50"></text></g><g><title>`0x7FFB1E1A63C9 (1 samples, 0.03%)</title><rect x="99.9157%" y="741" width="0.0281%" height="15" fill="rgb(249,113,6)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="751.50"></text></g><g><title>`0x7FFB1E20064E (1 samples, 0.03%)</title><rect x="99.9157%" y="725" width="0.0281%" height="15" fill="rgb(238,137,36)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="735.50"></text></g><g><title>`0x7FFB1E20239C (1 samples, 0.03%)</title><rect x="99.9157%" y="709" width="0.0281%" height="15" fill="rgb(210,102,26)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="719.50"></text></g><g><title>`0x7FFB1E1FCE01 (1 samples, 0.03%)</title><rect x="99.9157%" y="693" width="0.0281%" height="15" fill="rgb(218,30,30)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="703.50"></text></g><g><title>`0x7FFB1E1A627E (1 samples, 0.03%)</title><rect x="99.9157%" y="677" width="0.0281%" height="15" fill="rgb(214,67,26)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="687.50"></text></g><g><title>`0x7FFB1E1A6683 (1 samples, 0.03%)</title><rect x="99.9157%" y="661" width="0.0281%" height="15" fill="rgb(251,9,53)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="671.50"></text></g><g><title>`0x7FFB1E1B9376 (1 samples, 0.03%)</title><rect x="99.9157%" y="645" width="0.0281%" height="15" fill="rgb(228,204,25)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="655.50"></text></g><g><title>`0x7FFB1E1B97D9 (1 samples, 0.03%)</title><rect x="99.9157%" y="629" width="0.0281%" height="15" fill="rgb(207,153,8)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="639.50"></text></g><g><title>`0x7FFB1E2C5251 (1 samples, 0.03%)</title><rect x="99.9157%" y="613" width="0.0281%" height="15" fill="rgb(242,9,16)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="623.50"></text></g><g><title>`0x7FFB1E2C52D8 (1 samples, 0.03%)</title><rect x="99.9157%" y="597" width="0.0281%" height="15" fill="rgb(217,211,10)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="607.50"></text></g><g><title>`0x7FFB1E2CBD0F (1 samples, 0.03%)</title><rect x="99.9157%" y="581" width="0.0281%" height="15" fill="rgb(219,228,52)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="591.50"></text></g><g><title>`0x7FFB1E2CEB19 (1 samples, 0.03%)</title><rect x="99.9157%" y="565" width="0.0281%" height="15" fill="rgb(231,92,29)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="575.50"></text></g><g><title>`0x7FFB1E276B76 (1 samples, 0.03%)</title><rect x="99.9157%" y="549" width="0.0281%" height="15" fill="rgb(232,8,23)" fg:x="3554" fg:w="1"/><text x="100.1657%" y="559.50"></text></g><g><title>`0x7FFB1BE56E0D (1 samples, 0.03%)</title><rect x="99.9438%" y="725" width="0.0281%" height="15" fill="rgb(216,211,34)" fg:x="3555" fg:w="1"/><text x="100.1938%" y="735.50"></text></g><g><title>`0x7FFB1BEF2AE1 (1 samples, 0.03%)</title><rect x="99.9438%" y="709" width="0.0281%" height="15" fill="rgb(236,151,0)" fg:x="3555" fg:w="1"/><text x="100.1938%" y="719.50"></text></g><g><title>`0x7FFB1BEF38F3 (1 samples, 0.03%)</title><rect x="99.9438%" y="693" width="0.0281%" height="15" fill="rgb(209,168,3)" fg:x="3555" fg:w="1"/><text x="100.1938%" y="703.50"></text></g><g><title>all (3,557 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(208,129,28)" fg:x="0" fg:w="3557"/><text x="0.2500%" y="895.50"></text></g><g><title>`0x7FFB1E29340E (20 samples, 0.56%)</title><rect x="99.4377%" y="869" width="0.5623%" height="15" fill="rgb(229,78,22)" fg:x="3537" fg:w="20"/><text x="99.6877%" y="879.50"></text></g><g><title>`0x7FFB1E2BEA23 (20 samples, 0.56%)</title><rect x="99.4377%" y="853" width="0.5623%" height="15" fill="rgb(228,187,13)" fg:x="3537" fg:w="20"/><text x="99.6877%" y="863.50"></text></g><g><title>`0x7FFB1E2910F8 (20 samples, 0.56%)</title><rect x="99.4377%" y="837" width="0.5623%" height="15" fill="rgb(240,119,24)" fg:x="3537" fg:w="20"/><text x="99.6877%" y="847.50"></text></g><g><title>`0x7FFB1E292F01 (2 samples, 0.06%)</title><rect x="99.9438%" y="821" width="0.0562%" height="15" fill="rgb(209,194,42)" fg:x="3555" fg:w="2"/><text x="100.1938%" y="831.50"></text></g><g><title>`0x7FFB1E261946 (2 samples, 0.06%)</title><rect x="99.9438%" y="805" width="0.0562%" height="15" fill="rgb(247,200,46)" fg:x="3555" fg:w="2"/><text x="100.1938%" y="815.50"></text></g><g><title>`0x7FFB1E261946 (2 samples, 0.06%)</title><rect x="99.9438%" y="789" width="0.0562%" height="15" fill="rgb(218,76,16)" fg:x="3555" fg:w="2"/><text x="100.1938%" y="799.50"></text></g><g><title>`0x7FFB1E26191A (2 samples, 0.06%)</title><rect x="99.9438%" y="773" width="0.0562%" height="15" fill="rgb(225,21,48)" fg:x="3555" fg:w="2"/><text x="100.1938%" y="783.50"></text></g><g><title>`0x7FFB1E1B142C (2 samples, 0.06%)</title><rect x="99.9438%" y="757" width="0.0562%" height="15" fill="rgb(239,223,50)" fg:x="3555" fg:w="2"/><text x="100.1938%" y="767.50"></text></g><g><title>`0x7FFB1E1B2080 (2 samples, 0.06%)</title><rect x="99.9438%" y="741" width="0.0562%" height="15" fill="rgb(244,45,21)" fg:x="3555" fg:w="2"/><text x="100.1938%" y="751.50"></text></g><g><title>`0x7FFB1BE56E26 (1 samples, 0.03%)</title><rect x="99.9719%" y="725" width="0.0281%" height="15" fill="rgb(232,33,43)" fg:x="3556" fg:w="1"/><text x="100.2219%" y="735.50"></text></g><g><title>`0x7FFB1BEBAF66 (1 samples, 0.03%)</title><rect x="99.9719%" y="709" width="0.0281%" height="15" fill="rgb(209,8,3)" fg:x="3556" fg:w="1"/><text x="100.2219%" y="719.50"></text></g><g><title>`0x7FFB1BE4A776 (1 samples, 0.03%)</title><rect x="99.9719%" y="693" width="0.0281%" height="15" fill="rgb(214,25,53)" fg:x="3556" fg:w="1"/><text x="100.2219%" y="703.50"></text></g><g><title>`0x7FFB1BE4A906 (1 samples, 0.03%)</title><rect x="99.9719%" y="677" width="0.0281%" height="15" fill="rgb(254,186,54)" fg:x="3556" fg:w="1"/><text x="100.2219%" y="687.50"></text></g><g><title>`0x7FFB1BE4AE4A (1 samples, 0.03%)</title><rect x="99.9719%" y="661" width="0.0281%" height="15" fill="rgb(208,174,49)" fg:x="3556" fg:w="1"/><text x="100.2219%" y="671.50"></text></g><g><title>`0x7FFB1BE4AFD1 (1 samples, 0.03%)</title><rect x="99.9719%" y="645" width="0.0281%" height="15" fill="rgb(233,191,51)" fg:x="3556" fg:w="1"/><text x="100.2219%" y="655.50"></text></g><g><title>`0x7FFB1BE4A326 (1 samples, 0.03%)</title><rect x="99.9719%" y="629" width="0.0281%" height="15" fill="rgb(222,134,10)" fg:x="3556" fg:w="1"/><text x="100.2219%" y="639.50"></text></g><g><title>`0x7FFB1B4ABDCF (1 samples, 0.03%)</title><rect x="99.9719%" y="613" width="0.0281%" height="15" fill="rgb(230,226,20)" fg:x="3556" fg:w="1"/><text x="100.2219%" y="623.50"></text></g></svg></svg>