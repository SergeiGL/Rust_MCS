<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="902" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="885.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="885.00"> </text><svg id="frames" x="10" width="1180" total_samples="1141"><g><title>Rust_MCS-26858cd3588a32c7.exe`test::cli::parse_opts (1 samples, 0.09%)</title><rect x="0.0000%" y="549" width="0.0876%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::cli::optgroups (1 samples, 0.09%)</title><rect x="0.0000%" y="533" width="0.0876%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`getopts::Options::optopt (1 samples, 0.09%)</title><rect x="0.0000%" y="517" width="0.0876%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::formatters::pretty::impl$1::write_run_finish&lt;std::io::stdio::Stdout&gt; (1 samples, 0.09%)</title><rect x="0.0876%" y="533" width="0.0876%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.3376%" y="543.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::formatters::pretty::PrettyFormatter::write_plain (1 samples, 0.09%)</title><rect x="0.0876%" y="517" width="0.0876%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.3376%" y="527.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::console::impl$0::flush (1 samples, 0.09%)</title><rect x="0.0876%" y="501" width="0.0876%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.3376%" y="511.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`invoke_main() (3 samples, 0.26%)</title><rect x="0.0000%" y="789" width="0.2629%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="3"/><text x="0.2500%" y="799.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`main (3 samples, 0.26%)</title><rect x="0.0000%" y="773" width="0.2629%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="3"/><text x="0.2500%" y="783.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::rt::lang_start_internal (3 samples, 0.26%)</title><rect x="0.0000%" y="757" width="0.2629%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="3"/><text x="0.2500%" y="767.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::panic::catch_unwind (3 samples, 0.26%)</title><rect x="0.0000%" y="741" width="0.2629%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="3"/><text x="0.2500%" y="751.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::panicking::try (3 samples, 0.26%)</title><rect x="0.0000%" y="725" width="0.2629%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="3"/><text x="0.2500%" y="735.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::panicking::try::do_call (3 samples, 0.26%)</title><rect x="0.0000%" y="709" width="0.2629%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="3"/><text x="0.2500%" y="719.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::rt::lang_start_internal::closure$1 (3 samples, 0.26%)</title><rect x="0.0000%" y="693" width="0.2629%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="3"/><text x="0.2500%" y="703.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::panic::catch_unwind (3 samples, 0.26%)</title><rect x="0.0000%" y="677" width="0.2629%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="3"/><text x="0.2500%" y="687.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (3 samples, 0.26%)</title><rect x="0.0000%" y="661" width="0.2629%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="3"/><text x="0.2500%" y="671.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (3 samples, 0.26%)</title><rect x="0.0000%" y="645" width="0.2629%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="3"/><text x="0.2500%" y="655.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::test_main_static (3 samples, 0.26%)</title><rect x="0.0000%" y="629" width="0.2629%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="3"/><text x="0.2500%" y="639.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place (3 samples, 0.26%)</title><rect x="0.0000%" y="613" width="0.2629%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="3"/><text x="0.2500%" y="623.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$25::drop (3 samples, 0.26%)</title><rect x="0.0000%" y="597" width="0.2629%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="3"/><text x="0.2500%" y="607.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place (3 samples, 0.26%)</title><rect x="0.0000%" y="581" width="0.2629%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="3"/><text x="0.2500%" y="591.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::test_main (3 samples, 0.26%)</title><rect x="0.0000%" y="565" width="0.2629%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="3"/><text x="0.2500%" y="575.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::console::run_tests_console (2 samples, 0.18%)</title><rect x="0.0876%" y="549" width="0.1753%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="2"/><text x="0.3376%" y="559.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::run_tests (1 samples, 0.09%)</title><rect x="0.1753%" y="533" width="0.0876%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="1"/><text x="0.4253%" y="543.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::console::run_tests_console::closure$2 (1 samples, 0.09%)</title><rect x="0.1753%" y="517" width="0.0876%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="1"/><text x="0.4253%" y="527.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::console::on_test_event (1 samples, 0.09%)</title><rect x="0.1753%" y="501" width="0.0876%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="1"/><text x="0.4253%" y="511.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place&lt;enum2$&lt;test::event::TestEvent&gt; &gt; (1 samples, 0.09%)</title><rect x="0.1753%" y="485" width="0.0876%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="1"/><text x="0.4253%" y="495.50"></text></g><g><title>`0x7FFA145E5947 (1 samples, 0.09%)</title><rect x="0.2629%" y="629" width="0.0876%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="1"/><text x="0.5129%" y="639.50"></text></g><g><title>`0x7FFA1473FD80 (1 samples, 0.09%)</title><rect x="0.2629%" y="613" width="0.0876%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="1"/><text x="0.5129%" y="623.50"></text></g><g><title>`0x7FFA1462B050 (2 samples, 0.18%)</title><rect x="0.2629%" y="677" width="0.1753%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="2"/><text x="0.5129%" y="687.50"></text></g><g><title>`0x7FFA145E4364 (2 samples, 0.18%)</title><rect x="0.2629%" y="661" width="0.1753%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="2"/><text x="0.5129%" y="671.50"></text></g><g><title>`0x7FFA145E494D (2 samples, 0.18%)</title><rect x="0.2629%" y="645" width="0.1753%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="2"/><text x="0.5129%" y="655.50"></text></g><g><title>`0x7FFA145E5A9C (1 samples, 0.09%)</title><rect x="0.3506%" y="629" width="0.0876%" height="15" fill="rgb(229,88,8)" fg:x="4" fg:w="1"/><text x="0.6006%" y="639.50"></text></g><g><title>`0x7FFA145E8999 (1 samples, 0.09%)</title><rect x="0.3506%" y="613" width="0.0876%" height="15" fill="rgb(213,181,19)" fg:x="4" fg:w="1"/><text x="0.6006%" y="623.50"></text></g><g><title>`0x7FFA1462C5FE (1 samples, 0.09%)</title><rect x="0.3506%" y="597" width="0.0876%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="1"/><text x="0.6006%" y="607.50"></text></g><g><title>`0x7FFA1462E3BC (1 samples, 0.09%)</title><rect x="0.3506%" y="581" width="0.0876%" height="15" fill="rgb(241,83,37)" fg:x="4" fg:w="1"/><text x="0.6006%" y="591.50"></text></g><g><title>`0x7FFA145E70E1 (1 samples, 0.09%)</title><rect x="0.3506%" y="565" width="0.0876%" height="15" fill="rgb(233,36,39)" fg:x="4" fg:w="1"/><text x="0.6006%" y="575.50"></text></g><g><title>`0x7FFA145E884E (1 samples, 0.09%)</title><rect x="0.3506%" y="549" width="0.0876%" height="15" fill="rgb(226,3,54)" fg:x="4" fg:w="1"/><text x="0.6006%" y="559.50"></text></g><g><title>`0x7FFA145E8D1A (1 samples, 0.09%)</title><rect x="0.3506%" y="533" width="0.0876%" height="15" fill="rgb(245,192,40)" fg:x="4" fg:w="1"/><text x="0.6006%" y="543.50"></text></g><g><title>`0x7FFA1473FC24 (1 samples, 0.09%)</title><rect x="0.3506%" y="517" width="0.0876%" height="15" fill="rgb(238,167,29)" fg:x="4" fg:w="1"/><text x="0.6006%" y="527.50"></text></g><g><title>`0x7FFA1462B05A (1 samples, 0.09%)</title><rect x="0.4382%" y="677" width="0.0876%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="1"/><text x="0.6882%" y="687.50"></text></g><g><title>`0x7FFA145E41D7 (1 samples, 0.09%)</title><rect x="0.4382%" y="661" width="0.0876%" height="15" fill="rgb(231,60,39)" fg:x="5" fg:w="1"/><text x="0.6882%" y="671.50"></text></g><g><title>`0x7FFA145E4351 (1 samples, 0.09%)</title><rect x="0.4382%" y="645" width="0.0876%" height="15" fill="rgb(208,69,12)" fg:x="5" fg:w="1"/><text x="0.6882%" y="655.50"></text></g><g><title>`0x7FFA146346AA (1 samples, 0.09%)</title><rect x="0.4382%" y="629" width="0.0876%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="1"/><text x="0.6882%" y="639.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`__scrt_common_main_seh() (7 samples, 0.61%)</title><rect x="0.0000%" y="805" width="0.6135%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="7"/><text x="0.2500%" y="815.50"></text></g><g><title>`0x7FFA11CA04F6 (4 samples, 0.35%)</title><rect x="0.2629%" y="789" width="0.3506%" height="15" fill="rgb(222,207,29)" fg:x="3" fg:w="4"/><text x="0.5129%" y="799.50"></text></g><g><title>`0x7FFA11C8586D (4 samples, 0.35%)</title><rect x="0.2629%" y="773" width="0.3506%" height="15" fill="rgb(206,96,30)" fg:x="3" fg:w="4"/><text x="0.5129%" y="783.50"></text></g><g><title>`0x7FFA11C2710B (4 samples, 0.35%)</title><rect x="0.2629%" y="757" width="0.3506%" height="15" fill="rgb(218,138,4)" fg:x="3" fg:w="4"/><text x="0.5129%" y="767.50"></text></g><g><title>`0x7FFA11C77BF9 (4 samples, 0.35%)</title><rect x="0.2629%" y="741" width="0.3506%" height="15" fill="rgb(250,191,14)" fg:x="3" fg:w="4"/><text x="0.5129%" y="751.50"></text></g><g><title>`0x7FFA12091D46 (4 samples, 0.35%)</title><rect x="0.2629%" y="725" width="0.3506%" height="15" fill="rgb(239,60,40)" fg:x="3" fg:w="4"/><text x="0.5129%" y="735.50"></text></g><g><title>`0x7FFA146366A0 (4 samples, 0.35%)</title><rect x="0.2629%" y="709" width="0.3506%" height="15" fill="rgb(206,27,48)" fg:x="3" fg:w="4"/><text x="0.5129%" y="719.50"></text></g><g><title>`0x7FFA1462ACD0 (4 samples, 0.35%)</title><rect x="0.2629%" y="693" width="0.3506%" height="15" fill="rgb(225,35,8)" fg:x="3" fg:w="4"/><text x="0.5129%" y="703.50"></text></g><g><title>`0x7FFA1462B0C4 (1 samples, 0.09%)</title><rect x="0.5259%" y="677" width="0.0876%" height="15" fill="rgb(250,213,24)" fg:x="6" fg:w="1"/><text x="0.7759%" y="687.50"></text></g><g><title>`0x7FFA1468AD83 (1 samples, 0.09%)</title><rect x="0.5259%" y="661" width="0.0876%" height="15" fill="rgb(247,123,22)" fg:x="6" fg:w="1"/><text x="0.7759%" y="671.50"></text></g><g><title>`0x7FFA1468B0C6 (1 samples, 0.09%)</title><rect x="0.5259%" y="645" width="0.0876%" height="15" fill="rgb(231,138,38)" fg:x="6" fg:w="1"/><text x="0.7759%" y="655.50"></text></g><g><title>`0x7FFA1468B09A (1 samples, 0.09%)</title><rect x="0.5259%" y="629" width="0.0876%" height="15" fill="rgb(231,145,46)" fg:x="6" fg:w="1"/><text x="0.7759%" y="639.50"></text></g><g><title>`0x7FFA145FCC0C (1 samples, 0.09%)</title><rect x="0.5259%" y="613" width="0.0876%" height="15" fill="rgb(251,118,11)" fg:x="6" fg:w="1"/><text x="0.7759%" y="623.50"></text></g><g><title>`0x7FFA145FD860 (1 samples, 0.09%)</title><rect x="0.5259%" y="597" width="0.0876%" height="15" fill="rgb(217,147,25)" fg:x="6" fg:w="1"/><text x="0.7759%" y="607.50"></text></g><g><title>`0x7FFA13677ACF (1 samples, 0.09%)</title><rect x="0.5259%" y="581" width="0.0876%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="1"/><text x="0.7759%" y="591.50"></text></g><g><title>`0x7FFA136AE3DA (1 samples, 0.09%)</title><rect x="0.5259%" y="565" width="0.0876%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="1"/><text x="0.7759%" y="575.50"></text></g><g><title>`0x7FFA136B1071 (1 samples, 0.09%)</title><rect x="0.5259%" y="549" width="0.0876%" height="15" fill="rgb(227,1,9)" fg:x="6" fg:w="1"/><text x="0.7759%" y="559.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::basket_func::basket1&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, Rust_MCS::StopStruct*, enum2$&lt;core::option::Option (1 samples, 0.09%)</title><rect x="1.0517%" y="389" width="0.0876%" height="15" fill="rgb(248,47,43)" fg:x="12" fg:w="1"/><text x="1.3017%" y="399.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$13::index(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="1.0517%" y="373" width="0.0876%" height="15" fill="rgb(221,10,30)" fg:x="12" fg:w="1"/><text x="1.3017%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="1.0517%" y="357" width="0.0876%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="1"/><text x="1.3017%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="1.0517%" y="341" width="0.0876%" height="15" fill="rgb(222,148,37)" fg:x="12" fg:w="1"/><text x="1.3017%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::feval::hm6(ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="1.0517%" y="325" width="0.0876%" height="15" fill="rgb(234,67,33)" fg:x="12" fg:w="1"/><text x="1.3017%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::basket_func::basket&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, Rust_MCS::StopStruct*, enum2$&lt;core::option::Option (1 samples, 0.09%)</title><rect x="1.1394%" y="389" width="0.0876%" height="15" fill="rgb(247,98,35)" fg:x="13" fg:w="1"/><text x="1.3894%" y="399.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lsconvex::lsconvex(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.09%)</title><rect x="1.2270%" y="341" width="0.0876%" height="15" fill="rgb(247,138,52)" fg:x="14" fg:w="1"/><text x="1.4770%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::range::impl$6::next(core::ops::range::Range (1 samples, 0.09%)</title><rect x="1.2270%" y="325" width="0.0876%" height="15" fill="rgb(213,79,30)" fg:x="14" fg:w="1"/><text x="1.4770%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1 samples, 0.09%)</title><rect x="1.2270%" y="309" width="0.0876%" height="15" fill="rgb(246,177,23)" fg:x="14" fg:w="1"/><text x="1.4770%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::cmp::impls::impl$58::lt (1 samples, 0.09%)</title><rect x="1.2270%" y="293" width="0.0876%" height="15" fill="rgb(230,62,27)" fg:x="14" fg:w="1"/><text x="1.4770%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::push (1 samples, 0.09%)</title><rect x="1.3146%" y="309" width="0.0876%" height="15" fill="rgb(216,154,8)" fg:x="15" fg:w="1"/><text x="1.5646%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.09%)</title><rect x="1.3146%" y="293" width="0.0876%" height="15" fill="rgb(244,35,45)" fg:x="15" fg:w="1"/><text x="1.5646%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::ptr (1 samples, 0.09%)</title><rect x="1.3146%" y="277" width="0.0876%" height="15" fill="rgb(251,115,12)" fg:x="15" fg:w="1"/><text x="1.5646%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.09%)</title><rect x="1.3146%" y="261" width="0.0876%" height="15" fill="rgb(240,54,50)" fg:x="15" fg:w="1"/><text x="1.5646%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.09%)</title><rect x="1.3146%" y="245" width="0.0876%" height="15" fill="rgb(233,84,52)" fg:x="15" fg:w="1"/><text x="1.5646%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="1.4023%" y="309" width="0.0876%" height="15" fill="rgb(207,117,47)" fg:x="16" fg:w="1"/><text x="1.6523%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="1.4023%" y="293" width="0.0876%" height="15" fill="rgb(249,43,39)" fg:x="16" fg:w="1"/><text x="1.6523%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="1.4023%" y="277" width="0.0876%" height="15" fill="rgb(209,38,44)" fg:x="16" fg:w="1"/><text x="1.6523%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="1.4023%" y="261" width="0.0876%" height="15" fill="rgb(236,212,23)" fg:x="16" fg:w="1"/><text x="1.6523%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.09%)</title><rect x="1.4023%" y="245" width="0.0876%" height="15" fill="rgb(242,79,21)" fg:x="16" fg:w="1"/><text x="1.6523%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.4023%" y="229" width="0.0876%" height="15" fill="rgb(211,96,35)" fg:x="16" fg:w="1"/><text x="1.6523%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.4023%" y="213" width="0.0876%" height="15" fill="rgb(253,215,40)" fg:x="16" fg:w="1"/><text x="1.6523%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.4023%" y="197" width="0.0876%" height="15" fill="rgb(211,81,21)" fg:x="16" fg:w="1"/><text x="1.6523%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.09%)</title><rect x="1.4023%" y="181" width="0.0876%" height="15" fill="rgb(208,190,38)" fg:x="16" fg:w="1"/><text x="1.6523%" y="191.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="1.4023%" y="165" width="0.0876%" height="15" fill="rgb(235,213,38)" fg:x="16" fg:w="1"/><text x="1.6523%" y="175.50"></text></g><g><title>`0x7FFA14607AFE (1 samples, 0.09%)</title><rect x="1.4023%" y="149" width="0.0876%" height="15" fill="rgb(237,122,38)" fg:x="16" fg:w="1"/><text x="1.6523%" y="159.50"></text></g><g><title>`0x7FFA145F007D (1 samples, 0.09%)</title><rect x="1.4023%" y="133" width="0.0876%" height="15" fill="rgb(244,218,35)" fg:x="16" fg:w="1"/><text x="1.6523%" y="143.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lsdescent::lsdescent&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (3 samples, 0.26%)</title><rect x="1.3146%" y="341" width="0.2629%" height="15" fill="rgb(240,68,47)" fg:x="15" fg:w="3"/><text x="1.5646%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 0.26%)</title><rect x="1.3146%" y="325" width="0.2629%" height="15" fill="rgb(210,16,53)" fg:x="15" fg:w="3"/><text x="1.5646%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::impl$0::select_nth_unstable_by(ref_mut$&lt;slice2$ (1 samples, 0.09%)</title><rect x="1.4899%" y="309" width="0.0876%" height="15" fill="rgb(235,124,12)" fg:x="17" fg:w="1"/><text x="1.7399%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::sort::select::partition_at_index(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.09%)</title><rect x="1.4899%" y="293" width="0.0876%" height="15" fill="rgb(224,169,11)" fg:x="17" fg:w="1"/><text x="1.7399%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::sort::select::partition_at_index_loop(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, enum2$&lt;core::option::Option&lt;ref$&lt;f64&gt; &gt; &gt;, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.09%)</title><rect x="1.4899%" y="277" width="0.0876%" height="15" fill="rgb(250,166,2)" fg:x="17" fg:w="1"/><text x="1.7399%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.09%)</title><rect x="1.4899%" y="261" width="0.0876%" height="15" fill="rgb(242,216,29)" fg:x="17" fg:w="1"/><text x="1.7399%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::sort::shared::smallsort::insert_tail(double*, double*, core::slice::impl$0::select_nth_unstable_by::closure_env$0 (1 samples, 0.09%)</title><rect x="1.4899%" y="245" width="0.0876%" height="15" fill="rgb(230,116,27)" fg:x="17" fg:w="1"/><text x="1.7399%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="1.4899%" y="229" width="0.0876%" height="15" fill="rgb(228,99,48)" fg:x="17" fg:w="1"/><text x="1.7399%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.09%)</title><rect x="1.5776%" y="325" width="0.0876%" height="15" fill="rgb(253,11,6)" fg:x="18" fg:w="1"/><text x="1.8276%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.09%)</title><rect x="1.5776%" y="309" width="0.0876%" height="15" fill="rgb(247,143,39)" fg:x="18" fg:w="1"/><text x="1.8276%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.5776%" y="293" width="0.0876%" height="15" fill="rgb(236,97,10)" fg:x="18" fg:w="1"/><text x="1.8276%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.5776%" y="277" width="0.0876%" height="15" fill="rgb(233,208,19)" fg:x="18" fg:w="1"/><text x="1.8276%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.5776%" y="261" width="0.0876%" height="15" fill="rgb(216,164,2)" fg:x="18" fg:w="1"/><text x="1.8276%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.09%)</title><rect x="1.5776%" y="245" width="0.0876%" height="15" fill="rgb(220,129,5)" fg:x="18" fg:w="1"/><text x="1.8276%" y="255.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="1.5776%" y="229" width="0.0876%" height="15" fill="rgb(242,17,10)" fg:x="18" fg:w="1"/><text x="1.8276%" y="239.50"></text></g><g><title>`0x7FFA146078B4 (1 samples, 0.09%)</title><rect x="1.5776%" y="213" width="0.0876%" height="15" fill="rgb(242,107,0)" fg:x="18" fg:w="1"/><text x="1.8276%" y="223.50"></text></g><g><title>`0x7FFA1460860D (1 samples, 0.09%)</title><rect x="1.5776%" y="197" width="0.0876%" height="15" fill="rgb(251,28,31)" fg:x="18" fg:w="1"/><text x="1.8276%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lspar::lspar&lt;6&gt;(unsigned long long, double, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (2 samples, 0.18%)</title><rect x="1.5776%" y="341" width="0.1753%" height="15" fill="rgb(233,223,10)" fg:x="18" fg:w="2"/><text x="1.8276%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::push (1 samples, 0.09%)</title><rect x="1.6652%" y="325" width="0.0876%" height="15" fill="rgb(215,21,27)" fg:x="19" fg:w="1"/><text x="1.9152%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.09%)</title><rect x="1.6652%" y="309" width="0.0876%" height="15" fill="rgb(232,23,21)" fg:x="19" fg:w="1"/><text x="1.9152%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::ptr (1 samples, 0.09%)</title><rect x="1.6652%" y="293" width="0.0876%" height="15" fill="rgb(244,5,23)" fg:x="19" fg:w="1"/><text x="1.9152%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.09%)</title><rect x="1.6652%" y="277" width="0.0876%" height="15" fill="rgb(226,81,46)" fg:x="19" fg:w="1"/><text x="1.9152%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.09%)</title><rect x="1.6652%" y="261" width="0.0876%" height="15" fill="rgb(247,70,30)" fg:x="19" fg:w="1"/><text x="1.9152%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::grow_one&lt;usize,alloc::alloc::Global&gt; (1 samples, 0.09%)</title><rect x="1.6652%" y="245" width="0.0876%" height="15" fill="rgb(212,68,19)" fg:x="19" fg:w="1"/><text x="1.9152%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.09%)</title><rect x="1.6652%" y="229" width="0.0876%" height="15" fill="rgb(240,187,13)" fg:x="19" fg:w="1"/><text x="1.9152%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="1.6652%" y="213" width="0.0876%" height="15" fill="rgb(223,113,26)" fg:x="19" fg:w="1"/><text x="1.9152%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.09%)</title><rect x="1.6652%" y="197" width="0.0876%" height="15" fill="rgb(206,192,2)" fg:x="19" fg:w="1"/><text x="1.9152%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.09%)</title><rect x="1.6652%" y="181" width="0.0876%" height="15" fill="rgb(241,108,4)" fg:x="19" fg:w="1"/><text x="1.9152%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.09%)</title><rect x="1.6652%" y="165" width="0.0876%" height="15" fill="rgb(247,173,49)" fg:x="19" fg:w="1"/><text x="1.9152%" y="175.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.09%)</title><rect x="1.6652%" y="149" width="0.0876%" height="15" fill="rgb(224,114,35)" fg:x="19" fg:w="1"/><text x="1.9152%" y="159.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.09%)</title><rect x="1.6652%" y="133" width="0.0876%" height="15" fill="rgb(245,159,27)" fg:x="19" fg:w="1"/><text x="1.9152%" y="143.50"></text></g><g><title>`0x7FFA14615376 (1 samples, 0.09%)</title><rect x="1.6652%" y="117" width="0.0876%" height="15" fill="rgb(245,172,44)" fg:x="19" fg:w="1"/><text x="1.9152%" y="127.50"></text></g><g><title>`0x7FFA146154B5 (1 samples, 0.09%)</title><rect x="1.6652%" y="101" width="0.0876%" height="15" fill="rgb(236,23,11)" fg:x="19" fg:w="1"/><text x="1.9152%" y="111.50"></text></g><g><title>`0x7FFA14615DAA (1 samples, 0.09%)</title><rect x="1.6652%" y="85" width="0.0876%" height="15" fill="rgb(205,117,38)" fg:x="19" fg:w="1"/><text x="1.9152%" y="95.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="1.6652%" y="69" width="0.0876%" height="15" fill="rgb(237,72,25)" fg:x="19" fg:w="1"/><text x="1.9152%" y="79.50"></text></g><g><title>`0x7FFA146077E7 (1 samples, 0.09%)</title><rect x="1.6652%" y="53" width="0.0876%" height="15" fill="rgb(244,70,9)" fg:x="19" fg:w="1"/><text x="1.9152%" y="63.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lsguard::lsguard(double, alloc::vec::Vec (1 samples, 0.09%)</title><rect x="1.7528%" y="325" width="0.0876%" height="15" fill="rgb(217,125,39)" fg:x="20" fg:w="1"/><text x="2.0028%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::impl$0::sort_unstable_by(ref_mut$&lt;slice2$ (1 samples, 0.09%)</title><rect x="1.7528%" y="309" width="0.0876%" height="15" fill="rgb(235,36,10)" fg:x="20" fg:w="1"/><text x="2.0028%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::sort::unstable::sort(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0 (1 samples, 0.09%)</title><rect x="1.7528%" y="293" width="0.0876%" height="15" fill="rgb(251,123,47)" fg:x="20" fg:w="1"/><text x="2.0028%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left(ref_mut$&lt;slice2$&lt;f64&gt; &gt;, unsigned long long, core::slice::impl$0::sort_unstable_by::closure_env$0 (1 samples, 0.09%)</title><rect x="1.7528%" y="277" width="0.0876%" height="15" fill="rgb(221,13,13)" fg:x="20" fg:w="1"/><text x="2.0028%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::sort::shared::smallsort::insert_tail(double*, double*, core::slice::impl$0::sort_unstable_by::closure_env$0 (1 samples, 0.09%)</title><rect x="1.7528%" y="261" width="0.0876%" height="15" fill="rgb(238,131,9)" fg:x="20" fg:w="1"/><text x="2.0028%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0 (1 samples, 0.09%)</title><rect x="1.7528%" y="245" width="0.0876%" height="15" fill="rgb(211,50,8)" fg:x="20" fg:w="1"/><text x="2.0028%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lsguard::lsguard::closure$0 (1 samples, 0.09%)</title><rect x="1.7528%" y="229" width="0.0876%" height="15" fill="rgb(245,182,24)" fg:x="20" fg:w="1"/><text x="2.0028%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::f64::impl$0::total_cmp (1 samples, 0.09%)</title><rect x="1.7528%" y="213" width="0.0876%" height="15" fill="rgb(242,14,37)" fg:x="20" fg:w="1"/><text x="2.0028%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.09%)</title><rect x="1.8405%" y="293" width="0.0876%" height="15" fill="rgb(246,228,12)" fg:x="21" fg:w="1"/><text x="2.0905%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.8405%" y="277" width="0.0876%" height="15" fill="rgb(213,55,15)" fg:x="21" fg:w="1"/><text x="2.0905%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.8405%" y="261" width="0.0876%" height="15" fill="rgb(209,9,3)" fg:x="21" fg:w="1"/><text x="2.0905%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.8405%" y="245" width="0.0876%" height="15" fill="rgb(230,59,30)" fg:x="21" fg:w="1"/><text x="2.0905%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.09%)</title><rect x="1.8405%" y="229" width="0.0876%" height="15" fill="rgb(209,121,21)" fg:x="21" fg:w="1"/><text x="2.0905%" y="239.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="1.8405%" y="213" width="0.0876%" height="15" fill="rgb(220,109,13)" fg:x="21" fg:w="1"/><text x="2.0905%" y="223.50"></text></g><g><title>`0x7FFA146078B4 (1 samples, 0.09%)</title><rect x="1.8405%" y="197" width="0.0876%" height="15" fill="rgb(232,18,1)" fg:x="21" fg:w="1"/><text x="2.0905%" y="207.50"></text></g><g><title>`0x7FFA14607FF0 (1 samples, 0.09%)</title><rect x="1.8405%" y="181" width="0.0876%" height="15" fill="rgb(215,41,42)" fg:x="21" fg:w="1"/><text x="2.0905%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="1.9281%" y="293" width="0.0876%" height="15" fill="rgb(224,123,36)" fg:x="22" fg:w="1"/><text x="2.1781%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="1.9281%" y="277" width="0.0876%" height="15" fill="rgb(240,125,3)" fg:x="22" fg:w="1"/><text x="2.1781%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="1.9281%" y="261" width="0.0876%" height="15" fill="rgb(205,98,50)" fg:x="22" fg:w="1"/><text x="2.1781%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="1.9281%" y="245" width="0.0876%" height="15" fill="rgb(205,185,37)" fg:x="22" fg:w="1"/><text x="2.1781%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.9281%" y="229" width="0.0876%" height="15" fill="rgb(238,207,15)" fg:x="22" fg:w="1"/><text x="2.1781%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.9281%" y="213" width="0.0876%" height="15" fill="rgb(213,199,42)" fg:x="22" fg:w="1"/><text x="2.1781%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="1.9281%" y="197" width="0.0876%" height="15" fill="rgb(235,201,11)" fg:x="22" fg:w="1"/><text x="2.1781%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.09%)</title><rect x="1.9281%" y="181" width="0.0876%" height="15" fill="rgb(207,46,11)" fg:x="22" fg:w="1"/><text x="2.1781%" y="191.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="1.9281%" y="165" width="0.0876%" height="15" fill="rgb(241,35,35)" fg:x="22" fg:w="1"/><text x="2.1781%" y="175.50"></text></g><g><title>`0x7FFA146078B4 (1 samples, 0.09%)</title><rect x="1.9281%" y="149" width="0.0876%" height="15" fill="rgb(243,32,47)" fg:x="22" fg:w="1"/><text x="2.1781%" y="159.50"></text></g><g><title>`0x7FFA1460818E (1 samples, 0.09%)</title><rect x="1.9281%" y="133" width="0.0876%" height="15" fill="rgb(247,202,23)" fg:x="22" fg:w="1"/><text x="2.1781%" y="143.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lsquart::lsquart&lt;6&gt;(unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (4 samples, 0.35%)</title><rect x="1.7528%" y="341" width="0.3506%" height="15" fill="rgb(219,102,11)" fg:x="20" fg:w="4"/><text x="2.0028%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lslocal::lslocal&lt;6&gt;(unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (3 samples, 0.26%)</title><rect x="1.8405%" y="325" width="0.2629%" height="15" fill="rgb(243,110,44)" fg:x="21" fg:w="3"/><text x="2.0905%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 0.26%)</title><rect x="1.8405%" y="309" width="0.2629%" height="15" fill="rgb(222,74,54)" fg:x="21" fg:w="3"/><text x="2.0905%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="2.0158%" y="293" width="0.0876%" height="15" fill="rgb(216,99,12)" fg:x="23" fg:w="1"/><text x="2.2658%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="2.0158%" y="277" width="0.0876%" height="15" fill="rgb(226,22,26)" fg:x="23" fg:w="1"/><text x="2.2658%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="2.0158%" y="261" width="0.0876%" height="15" fill="rgb(217,163,10)" fg:x="23" fg:w="1"/><text x="2.2658%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="2.0158%" y="245" width="0.0876%" height="15" fill="rgb(213,25,53)" fg:x="23" fg:w="1"/><text x="2.2658%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.09%)</title><rect x="2.0158%" y="229" width="0.0876%" height="15" fill="rgb(252,105,26)" fg:x="23" fg:w="1"/><text x="2.2658%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="2.0158%" y="213" width="0.0876%" height="15" fill="rgb(220,39,43)" fg:x="23" fg:w="1"/><text x="2.2658%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="2.0158%" y="197" width="0.0876%" height="15" fill="rgb(229,68,48)" fg:x="23" fg:w="1"/><text x="2.2658%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="2.0158%" y="181" width="0.0876%" height="15" fill="rgb(252,8,32)" fg:x="23" fg:w="1"/><text x="2.2658%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.09%)</title><rect x="2.0158%" y="165" width="0.0876%" height="15" fill="rgb(223,20,43)" fg:x="23" fg:w="1"/><text x="2.2658%" y="175.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="2.0158%" y="149" width="0.0876%" height="15" fill="rgb(229,81,49)" fg:x="23" fg:w="1"/><text x="2.2658%" y="159.50"></text></g><g><title>`0x7FFA14607AFE (1 samples, 0.09%)</title><rect x="2.0158%" y="133" width="0.0876%" height="15" fill="rgb(236,28,36)" fg:x="23" fg:w="1"/><text x="2.2658%" y="143.50"></text></g><g><title>`0x7FFA145F010D (1 samples, 0.09%)</title><rect x="2.0158%" y="117" width="0.0876%" height="15" fill="rgb(249,185,26)" fg:x="23" fg:w="1"/><text x="2.2658%" y="127.50"></text></g><g><title>`0x7FFA14605585 (1 samples, 0.09%)</title><rect x="2.0158%" y="101" width="0.0876%" height="15" fill="rgb(249,174,33)" fg:x="23" fg:w="1"/><text x="2.2658%" y="111.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::cmp::impls::impl$54::partial_cmp (1 samples, 0.09%)</title><rect x="2.1034%" y="325" width="0.0876%" height="15" fill="rgb(233,201,37)" fg:x="24" fg:w="1"/><text x="2.3534%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::gls&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (12 samples, 1.05%)</title><rect x="1.2270%" y="357" width="1.0517%" height="15" fill="rgb(221,78,26)" fg:x="14" fg:w="12"/><text x="1.4770%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lsrange::lsrange&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (2 samples, 0.18%)</title><rect x="2.1034%" y="341" width="0.1753%" height="15" fill="rgb(250,127,30)" fg:x="24" fg:w="2"/><text x="2.3534%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::traits::iterator::Iterator::min_by(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt; &gt;, Rust_MCS::gls::lsrange::lsrange::closure_env$2 (1 samples, 0.09%)</title><rect x="2.1911%" y="325" width="0.0876%" height="15" fill="rgb(230,49,44)" fg:x="25" fg:w="1"/><text x="2.4411%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::traits::iterator::Iterator::reduce(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt; &gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;f64,Rust_MCS::gls::lsrange::lsrange::closure_env$2 (1 samples, 0.09%)</title><rect x="2.1911%" y="309" width="0.0876%" height="15" fill="rgb(229,67,23)" fg:x="25" fg:w="1"/><text x="2.4411%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$1 (1 samples, 0.09%)</title><rect x="2.1911%" y="293" width="0.0876%" height="15" fill="rgb(249,83,47)" fg:x="25" fg:w="1"/><text x="2.4411%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::adapters::filter::impl$3::next(core::iter::adapters::filter::Filter&lt;core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$0 (1 samples, 0.09%)</title><rect x="2.1911%" y="277" width="0.0876%" height="15" fill="rgb(215,43,3)" fg:x="25" fg:w="1"/><text x="2.4411%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::traits::iterator::Iterator::find(core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;*, Rust_MCS::gls::lsrange::lsrange::closure_env$0 (1 samples, 0.09%)</title><rect x="2.1911%" y="261" width="0.0876%" height="15" fill="rgb(238,154,13)" fg:x="25" fg:w="1"/><text x="2.4411%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::traits::iterator::Iterator::try_fold(core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,ref_mut$&lt;Rust_MCS::gls::lsrange::lsrange::closure_env$0 (1 samples, 0.09%)</title><rect x="2.1911%" y="245" width="0.0876%" height="15" fill="rgb(219,56,2)" fg:x="25" fg:w="1"/><text x="2.4411%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::traits::iterator::Iterator::find::check::closure$0(core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,ref_mut$&lt;Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt; &gt; &gt;*, tuple$&lt;&gt;, tuple$&lt;ref$&lt;f64&gt;,ref$ (1 samples, 0.09%)</title><rect x="2.1911%" y="229" width="0.0876%" height="15" fill="rgb(233,0,4)" fg:x="25" fg:w="1"/><text x="2.4411%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ops::function::impls::impl$3::call_mut(Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt;**, tuple$&lt;ref$&lt;f64&gt;,ref$ (1 samples, 0.09%)</title><rect x="2.1911%" y="213" width="0.0876%" height="15" fill="rgb(235,30,7)" fg:x="25" fg:w="1"/><text x="2.4411%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lsrange::lsrange::closure$0(Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt;*, tuple$&lt;ref$&lt;f64&gt;,ref$ (1 samples, 0.09%)</title><rect x="2.1911%" y="197" width="0.0876%" height="15" fill="rgb(250,79,13)" fg:x="25" fg:w="1"/><text x="2.4411%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::hessian::hessian(unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.09%)</title><rect x="2.2787%" y="357" width="0.0876%" height="15" fill="rgb(211,146,34)" fg:x="26" fg:w="1"/><text x="2.5287%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::feval::hm6(ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="2.2787%" y="341" width="0.0876%" height="15" fill="rgb(228,22,38)" fg:x="26" fg:w="1"/><text x="2.5287%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::csearch::csearch&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (14 samples, 1.23%)</title><rect x="1.2270%" y="373" width="1.2270%" height="15" fill="rgb(235,168,5)" fg:x="14" fg:w="14"/><text x="1.4770%" y="383.50"></text></g><g><title>`0x7FFA14612871 (1 samples, 0.09%)</title><rect x="2.3663%" y="357" width="0.0876%" height="15" fill="rgb(221,155,16)" fg:x="27" fg:w="1"/><text x="2.6163%" y="367.50"></text></g><g><title>`0x7FFA1460A83A (1 samples, 0.09%)</title><rect x="2.3663%" y="341" width="0.0876%" height="15" fill="rgb(215,215,53)" fg:x="27" fg:w="1"/><text x="2.6163%" y="351.50"></text></g><g><title>`0x7FFA1469D58A (1 samples, 0.09%)</title><rect x="2.3663%" y="325" width="0.0876%" height="15" fill="rgb(223,4,10)" fg:x="27" fg:w="1"/><text x="2.6163%" y="335.50"></text></g><g><title>`0x7FFA1460DEEE (1 samples, 0.09%)</title><rect x="2.3663%" y="309" width="0.0876%" height="15" fill="rgb(234,103,6)" fg:x="27" fg:w="1"/><text x="2.6163%" y="319.50"></text></g><g><title>`0x7FFA146CA8F9 (1 samples, 0.09%)</title><rect x="2.3663%" y="293" width="0.0876%" height="15" fill="rgb(227,97,0)" fg:x="27" fg:w="1"/><text x="2.6163%" y="303.50"></text></g><g><title>`0x7FFA1473FAE4 (1 samples, 0.09%)</title><rect x="2.3663%" y="277" width="0.0876%" height="15" fill="rgb(234,150,53)" fg:x="27" fg:w="1"/><text x="2.6163%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::feval::hm6(ref$&lt;slice2$ (3 samples, 0.26%)</title><rect x="2.4540%" y="357" width="0.2629%" height="15" fill="rgb(228,201,54)" fg:x="28" fg:w="3"/><text x="2.7040%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::f64::impl$0::exp (1 samples, 0.09%)</title><rect x="2.6293%" y="341" width="0.0876%" height="15" fill="rgb(222,22,37)" fg:x="30" fg:w="1"/><text x="2.8793%" y="351.50"></text></g><g><title>`0x7FFA11CA827F (1 samples, 0.09%)</title><rect x="2.6293%" y="325" width="0.0876%" height="15" fill="rgb(237,53,32)" fg:x="30" fg:w="1"/><text x="2.8793%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::triple::triple&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (4 samples, 0.35%)</title><rect x="2.4540%" y="373" width="0.3506%" height="15" fill="rgb(233,25,53)" fg:x="28" fg:w="4"/><text x="2.7040%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::hessian::hessian(unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.09%)</title><rect x="2.7169%" y="357" width="0.0876%" height="15" fill="rgb(210,40,34)" fg:x="31" fg:w="1"/><text x="2.9669%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::feval::hm6(ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="2.7169%" y="341" width="0.0876%" height="15" fill="rgb(241,220,44)" fg:x="31" fg:w="1"/><text x="2.9669%" y="351.50"></text></g><g><title>`0x7FFA11CA8256 (1 samples, 0.09%)</title><rect x="2.7169%" y="325" width="0.0876%" height="15" fill="rgb(235,28,35)" fg:x="31" fg:w="1"/><text x="2.9669%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="2.8046%" y="325" width="0.0876%" height="15" fill="rgb(210,56,17)" fg:x="32" fg:w="1"/><text x="3.0546%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="2.8046%" y="309" width="0.0876%" height="15" fill="rgb(224,130,29)" fg:x="32" fg:w="1"/><text x="3.0546%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="2.8046%" y="293" width="0.0876%" height="15" fill="rgb(235,212,8)" fg:x="32" fg:w="1"/><text x="3.0546%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.09%)</title><rect x="2.8046%" y="277" width="0.0876%" height="15" fill="rgb(223,33,50)" fg:x="32" fg:w="1"/><text x="3.0546%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.09%)</title><rect x="2.8046%" y="261" width="0.0876%" height="15" fill="rgb(219,149,13)" fg:x="32" fg:w="1"/><text x="3.0546%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.09%)</title><rect x="2.8046%" y="245" width="0.0876%" height="15" fill="rgb(250,156,29)" fg:x="32" fg:w="1"/><text x="3.0546%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 0.09%)</title><rect x="2.8046%" y="229" width="0.0876%" height="15" fill="rgb(216,193,19)" fg:x="32" fg:w="1"/><text x="3.0546%" y="239.50"></text></g><g><title>`0x7FFA14612451 (1 samples, 0.09%)</title><rect x="2.8046%" y="213" width="0.0876%" height="15" fill="rgb(216,135,14)" fg:x="32" fg:w="1"/><text x="3.0546%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(nalgebra::linalg::lu::LU (1 samples, 0.09%)</title><rect x="2.8922%" y="325" width="0.0876%" height="15" fill="rgb(241,47,5)" fg:x="33" fg:w="1"/><text x="3.1422%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(nalgebra::linalg::permutation_sequence::PermutationSequence (1 samples, 0.09%)</title><rect x="2.8922%" y="309" width="0.0876%" height="15" fill="rgb(233,42,35)" fg:x="33" fg:w="1"/><text x="3.1422%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(nalgebra::base::matrix::Matrix&lt;tuple$&lt;usize,usize&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;tuple$&lt;usize,usize&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="2.8922%" y="293" width="0.0876%" height="15" fill="rgb(231,13,6)" fg:x="33" fg:w="1"/><text x="3.1422%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(nalgebra::base::vec_storage::VecStorage&lt;tuple$&lt;usize,usize&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="2.8922%" y="277" width="0.0876%" height="15" fill="rgb(207,181,40)" fg:x="33" fg:w="1"/><text x="3.1422%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;tuple$ (1 samples, 0.09%)</title><rect x="2.8922%" y="261" width="0.0876%" height="15" fill="rgb(254,173,49)" fg:x="33" fg:w="1"/><text x="3.1422%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;tuple$ (1 samples, 0.09%)</title><rect x="2.8922%" y="245" width="0.0876%" height="15" fill="rgb(221,1,38)" fg:x="33" fg:w="1"/><text x="3.1422%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec&lt;tuple$ (1 samples, 0.09%)</title><rect x="2.8922%" y="229" width="0.0876%" height="15" fill="rgb(206,124,46)" fg:x="33" fg:w="1"/><text x="3.1422%" y="239.50"></text></g><g><title>`0x7FFA14612871 (1 samples, 0.09%)</title><rect x="2.8922%" y="213" width="0.0876%" height="15" fill="rgb(249,21,11)" fg:x="33" fg:w="1"/><text x="3.1422%" y="223.50"></text></g><g><title>`0x7FFA1460AC3D (1 samples, 0.09%)</title><rect x="2.8922%" y="197" width="0.0876%" height="15" fill="rgb(222,201,40)" fg:x="33" fg:w="1"/><text x="3.1422%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;::view(tuple$&lt;usize,usize&gt;, tuple$ (1 samples, 0.09%)</title><rect x="2.9798%" y="325" width="0.0876%" height="15" fill="rgb(235,61,29)" fg:x="34" fg:w="1"/><text x="3.2298%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;::assert_view_index(tuple$&lt;usize,usize&gt;, tuple$&lt;usize,usize&gt;, tuple$ (1 samples, 0.09%)</title><rect x="2.9798%" y="309" width="0.0876%" height="15" fill="rgb(219,207,3)" fg:x="34" fg:w="1"/><text x="3.2298%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::component_div(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="3.0675%" y="325" width="0.0876%" height="15" fill="rgb(222,56,46)" fg:x="35" fg:w="1"/><text x="3.3175%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::clone_owned_sum (1 samples, 0.09%)</title><rect x="3.0675%" y="309" width="0.0876%" height="15" fill="rgb(239,76,54)" fg:x="35" fg:w="1"/><text x="3.3175%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::uninit(nalgebra::base::dimension::Dyn, nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="3.0675%" y="293" width="0.0876%" height="15" fill="rgb(231,124,27)" fg:x="35" fg:w="1"/><text x="3.3175%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::default_allocator::impl$1::allocate_uninit(nalgebra::base::dimension::Dyn, nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="3.0675%" y="277" width="0.0876%" height="15" fill="rgb(249,195,6)" fg:x="35" fg:w="1"/><text x="3.3175%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.09%)</title><rect x="3.0675%" y="261" width="0.0876%" height="15" fill="rgb(237,174,47)" fg:x="35" fg:w="1"/><text x="3.3175%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.09%)</title><rect x="3.0675%" y="245" width="0.0876%" height="15" fill="rgb(206,201,31)" fg:x="35" fg:w="1"/><text x="3.3175%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.09%)</title><rect x="3.0675%" y="229" width="0.0876%" height="15" fill="rgb(231,57,52)" fg:x="35" fg:w="1"/><text x="3.3175%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (1 samples, 0.09%)</title><rect x="3.0675%" y="213" width="0.0876%" height="15" fill="rgb(248,177,22)" fg:x="35" fg:w="1"/><text x="3.3175%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (1 samples, 0.09%)</title><rect x="3.0675%" y="197" width="0.0876%" height="15" fill="rgb(215,211,37)" fg:x="35" fg:w="1"/><text x="3.3175%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.09%)</title><rect x="3.0675%" y="181" width="0.0876%" height="15" fill="rgb(241,128,51)" fg:x="35" fg:w="1"/><text x="3.3175%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.09%)</title><rect x="3.0675%" y="165" width="0.0876%" height="15" fill="rgb(227,165,31)" fg:x="35" fg:w="1"/><text x="3.3175%" y="175.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.09%)</title><rect x="3.0675%" y="149" width="0.0876%" height="15" fill="rgb(228,167,24)" fg:x="35" fg:w="1"/><text x="3.3175%" y="159.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.09%)</title><rect x="3.0675%" y="133" width="0.0876%" height="15" fill="rgb(228,143,12)" fg:x="35" fg:w="1"/><text x="3.3175%" y="143.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.09%)</title><rect x="3.0675%" y="117" width="0.0876%" height="15" fill="rgb(249,149,8)" fg:x="35" fg:w="1"/><text x="3.3175%" y="127.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="3.0675%" y="101" width="0.0876%" height="15" fill="rgb(243,35,44)" fg:x="35" fg:w="1"/><text x="3.3175%" y="111.50"></text></g><g><title>`0x7FFA146078B4 (1 samples, 0.09%)</title><rect x="3.0675%" y="85" width="0.0876%" height="15" fill="rgb(246,89,9)" fg:x="35" fg:w="1"/><text x="3.3175%" y="95.50"></text></g><g><title>`0x7FFA14608047 (1 samples, 0.09%)</title><rect x="3.0675%" y="69" width="0.0876%" height="15" fill="rgb(233,213,13)" fg:x="35" fg:w="1"/><text x="3.3175%" y="79.50"></text></g><g><title>`0x7FFA145EFF27 (1 samples, 0.09%)</title><rect x="3.1551%" y="85" width="0.0876%" height="15" fill="rgb(233,141,41)" fg:x="36" fg:w="1"/><text x="3.4051%" y="95.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::minq::minq&lt;6&gt;(double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (6 samples, 0.53%)</title><rect x="2.8046%" y="373" width="0.5259%" height="15" fill="rgb(239,167,4)" fg:x="32" fg:w="6"/><text x="3.0546%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::minq::minqsub::minqsub&lt;6&gt;(unsigned long long*, nalgebra::base::matrix::Matrix&lt;bool,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;bool,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;bool,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;bool,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (6 samples, 0.53%)</title><rect x="2.8046%" y="357" width="0.5259%" height="15" fill="rgb(209,217,16)" fg:x="32" fg:w="6"/><text x="3.0546%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::minq::ldlup::ldlup&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (6 samples, 0.53%)</title><rect x="2.8046%" y="341" width="0.5259%" height="15" fill="rgb(219,88,35)" fg:x="32" fg:w="6"/><text x="3.0546%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;::transpose (2 samples, 0.18%)</title><rect x="3.1551%" y="325" width="0.1753%" height="15" fill="rgb(220,193,23)" fg:x="36" fg:w="2"/><text x="3.4051%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt; &gt;::uninit (2 samples, 0.18%)</title><rect x="3.1551%" y="309" width="0.1753%" height="15" fill="rgb(230,90,52)" fg:x="36" fg:w="2"/><text x="3.4051%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::default_allocator::impl$1::allocate_uninit (2 samples, 0.18%)</title><rect x="3.1551%" y="293" width="0.1753%" height="15" fill="rgb(252,106,19)" fg:x="36" fg:w="2"/><text x="3.4051%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,alloc::alloc::Global&gt;::reserve_exact (2 samples, 0.18%)</title><rect x="3.1551%" y="277" width="0.1753%" height="15" fill="rgb(206,74,20)" fg:x="36" fg:w="2"/><text x="3.4051%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,alloc::alloc::Global&gt;::reserve_exact (2 samples, 0.18%)</title><rect x="3.1551%" y="261" width="0.1753%" height="15" fill="rgb(230,138,44)" fg:x="36" fg:w="2"/><text x="3.4051%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (2 samples, 0.18%)</title><rect x="3.1551%" y="245" width="0.1753%" height="15" fill="rgb(235,182,43)" fg:x="36" fg:w="2"/><text x="3.4051%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (2 samples, 0.18%)</title><rect x="3.1551%" y="229" width="0.1753%" height="15" fill="rgb(242,16,51)" fg:x="36" fg:w="2"/><text x="3.4051%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (2 samples, 0.18%)</title><rect x="3.1551%" y="213" width="0.1753%" height="15" fill="rgb(248,9,4)" fg:x="36" fg:w="2"/><text x="3.4051%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.18%)</title><rect x="3.1551%" y="197" width="0.1753%" height="15" fill="rgb(210,31,22)" fg:x="36" fg:w="2"/><text x="3.4051%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.18%)</title><rect x="3.1551%" y="181" width="0.1753%" height="15" fill="rgb(239,54,39)" fg:x="36" fg:w="2"/><text x="3.4051%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.18%)</title><rect x="3.1551%" y="165" width="0.1753%" height="15" fill="rgb(230,99,41)" fg:x="36" fg:w="2"/><text x="3.4051%" y="175.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (2 samples, 0.18%)</title><rect x="3.1551%" y="149" width="0.1753%" height="15" fill="rgb(253,106,12)" fg:x="36" fg:w="2"/><text x="3.4051%" y="159.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (2 samples, 0.18%)</title><rect x="3.1551%" y="133" width="0.1753%" height="15" fill="rgb(213,46,41)" fg:x="36" fg:w="2"/><text x="3.4051%" y="143.50"></text></g><g><title>`0x7FFA14607776 (2 samples, 0.18%)</title><rect x="3.1551%" y="117" width="0.1753%" height="15" fill="rgb(215,133,35)" fg:x="36" fg:w="2"/><text x="3.4051%" y="127.50"></text></g><g><title>`0x7FFA14607AFE (2 samples, 0.18%)</title><rect x="3.1551%" y="101" width="0.1753%" height="15" fill="rgb(213,28,5)" fg:x="36" fg:w="2"/><text x="3.4051%" y="111.50"></text></g><g><title>`0x7FFA145F0396 (1 samples, 0.09%)</title><rect x="3.2428%" y="85" width="0.0876%" height="15" fill="rgb(215,77,49)" fg:x="37" fg:w="1"/><text x="3.4928%" y="95.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (2 samples, 0.18%)</title><rect x="3.3304%" y="373" width="0.1753%" height="15" fill="rgb(248,100,22)" fg:x="38" fg:w="2"/><text x="3.5804%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="3.3304%" y="357" width="0.1753%" height="15" fill="rgb(208,67,9)" fg:x="38" fg:w="2"/><text x="3.5804%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="3.3304%" y="341" width="0.1753%" height="15" fill="rgb(219,133,21)" fg:x="38" fg:w="2"/><text x="3.5804%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="3.3304%" y="325" width="0.1753%" height="15" fill="rgb(246,46,29)" fg:x="38" fg:w="2"/><text x="3.5804%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.18%)</title><rect x="3.3304%" y="309" width="0.1753%" height="15" fill="rgb(246,185,52)" fg:x="38" fg:w="2"/><text x="3.5804%" y="319.50"></text></g><g><title>`0x7FFA14607776 (2 samples, 0.18%)</title><rect x="3.3304%" y="293" width="0.1753%" height="15" fill="rgb(252,136,11)" fg:x="38" fg:w="2"/><text x="3.5804%" y="303.50"></text></g><g><title>`0x7FFA14607AFE (2 samples, 0.18%)</title><rect x="3.3304%" y="277" width="0.1753%" height="15" fill="rgb(219,138,53)" fg:x="38" fg:w="2"/><text x="3.5804%" y="287.50"></text></g><g><title>`0x7FFA145EFC80 (2 samples, 0.18%)</title><rect x="3.3304%" y="261" width="0.1753%" height="15" fill="rgb(211,51,23)" fg:x="38" fg:w="2"/><text x="3.5804%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lsdescent::lsdescent&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (1 samples, 0.09%)</title><rect x="3.5057%" y="325" width="0.0876%" height="15" fill="rgb(247,221,28)" fg:x="40" fg:w="1"/><text x="3.7557%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.09%)</title><rect x="3.5057%" y="309" width="0.0876%" height="15" fill="rgb(251,222,45)" fg:x="40" fg:w="1"/><text x="3.7557%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="3.5057%" y="293" width="0.0876%" height="15" fill="rgb(217,162,53)" fg:x="40" fg:w="1"/><text x="3.7557%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="3.5057%" y="277" width="0.0876%" height="15" fill="rgb(229,93,14)" fg:x="40" fg:w="1"/><text x="3.7557%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="3.5057%" y="261" width="0.0876%" height="15" fill="rgb(209,67,49)" fg:x="40" fg:w="1"/><text x="3.7557%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="3.5057%" y="245" width="0.0876%" height="15" fill="rgb(213,87,29)" fg:x="40" fg:w="1"/><text x="3.7557%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.09%)</title><rect x="3.5057%" y="229" width="0.0876%" height="15" fill="rgb(205,151,52)" fg:x="40" fg:w="1"/><text x="3.7557%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="3.5057%" y="213" width="0.0876%" height="15" fill="rgb(253,215,39)" fg:x="40" fg:w="1"/><text x="3.7557%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="3.5057%" y="197" width="0.0876%" height="15" fill="rgb(221,220,41)" fg:x="40" fg:w="1"/><text x="3.7557%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="3.5057%" y="181" width="0.0876%" height="15" fill="rgb(218,133,21)" fg:x="40" fg:w="1"/><text x="3.7557%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.09%)</title><rect x="3.5057%" y="165" width="0.0876%" height="15" fill="rgb(221,193,43)" fg:x="40" fg:w="1"/><text x="3.7557%" y="175.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="3.5057%" y="149" width="0.0876%" height="15" fill="rgb(240,128,52)" fg:x="40" fg:w="1"/><text x="3.7557%" y="159.50"></text></g><g><title>`0x7FFA14607AFE (1 samples, 0.09%)</title><rect x="3.5057%" y="133" width="0.0876%" height="15" fill="rgb(253,114,12)" fg:x="40" fg:w="1"/><text x="3.7557%" y="143.50"></text></g><g><title>`0x7FFA145F010D (1 samples, 0.09%)</title><rect x="3.5057%" y="117" width="0.0876%" height="15" fill="rgb(215,223,47)" fg:x="40" fg:w="1"/><text x="3.7557%" y="127.50"></text></g><g><title>`0x7FFA14605585 (1 samples, 0.09%)</title><rect x="3.5057%" y="101" width="0.0876%" height="15" fill="rgb(248,225,23)" fg:x="40" fg:w="1"/><text x="3.7557%" y="111.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (2 samples, 0.18%)</title><rect x="3.5933%" y="309" width="0.1753%" height="15" fill="rgb(250,108,0)" fg:x="41" fg:w="2"/><text x="3.8433%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::traits::iterator::Iterator::min_by(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="3.6810%" y="293" width="0.0876%" height="15" fill="rgb(228,208,7)" fg:x="42" fg:w="1"/><text x="3.9310%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::traits::iterator::Iterator::reduce(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;bool&gt; &gt;,Rust_MCS::gls::lssort::lssort::closure_env$10&gt;,Rust_MCS::gls::lssort::lssort::closure_env$11&gt;,Rust_MCS::gls::lssort::lssort::closure_env$12&gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0 (1 samples, 0.09%)</title><rect x="3.6810%" y="277" width="0.0876%" height="15" fill="rgb(244,45,10)" fg:x="42" fg:w="1"/><text x="3.9310%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="3.6810%" y="261" width="0.0876%" height="15" fill="rgb(207,125,25)" fg:x="42" fg:w="1"/><text x="3.9310%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::adapters::filter::impl$3::next(core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="3.6810%" y="245" width="0.0876%" height="15" fill="rgb(210,195,18)" fg:x="42" fg:w="1"/><text x="3.9310%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::traits::iterator::Iterator::find(core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="3.6810%" y="229" width="0.0876%" height="15" fill="rgb(249,80,12)" fg:x="42" fg:w="1"/><text x="3.9310%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::adapters::filter_map::impl$2::try_fold(core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;bool&gt; &gt;,Rust_MCS::gls::lssort::lssort::closure_env$10&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;f64,ref_mut$ (1 samples, 0.09%)</title><rect x="3.6810%" y="213" width="0.0876%" height="15" fill="rgb(221,65,9)" fg:x="42" fg:w="1"/><text x="3.9310%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::adapters::enumerate::impl$1::try_fold(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;bool&gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::filter_map::filter_map_try_fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;bool&gt; &gt;,f64,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;f64,tuple$&lt;&gt; &gt; &gt;,Rust_MCS::gls::lssort::lssort::closure_env$10,core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;f64,ref_mut$ (1 samples, 0.09%)</title><rect x="3.6810%" y="197" width="0.0876%" height="15" fill="rgb(235,49,36)" fg:x="42" fg:w="1"/><text x="3.9310%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::traits::iterator::Iterator::try_fold(core::slice::iter::Iter&lt;bool&gt;*, tuple$&lt;&gt;, core::iter::adapters::enumerate::impl$1::try_fold::enumerate::closure_env$0&lt;ref$&lt;bool&gt;,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;f64,tuple$&lt;&gt; &gt; &gt;,core::iter::adapters::filter_map::filter_map_try_fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;bool&gt; &gt;,f64,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;f64,tuple$&lt;&gt; &gt; &gt;,Rust_MCS::gls::lssort::lssort::closure_env$10,core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;f64,ref_mut$ (1 samples, 0.09%)</title><rect x="3.6810%" y="181" width="0.0876%" height="15" fill="rgb(225,32,20)" fg:x="42" fg:w="1"/><text x="3.9310%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::adapters::enumerate::impl$1::try_fold::enumerate::closure$0(core::iter::adapters::enumerate::impl$1::try_fold::enumerate::closure_env$0&lt;ref$&lt;bool&gt;,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;f64,tuple$&lt;&gt; &gt; &gt;,core::iter::adapters::filter_map::filter_map_try_fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;bool&gt; &gt;,f64,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;f64,tuple$&lt;&gt; &gt; &gt;,Rust_MCS::gls::lssort::lssort::closure_env$10,core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;f64,ref_mut$&lt;Rust_MCS::gls::lssort::lssort::closure_env$11&gt; &gt; &gt; &gt;*, tuple$ (1 samples, 0.09%)</title><rect x="3.6810%" y="165" width="0.0876%" height="15" fill="rgb(215,141,46)" fg:x="42" fg:w="1"/><text x="3.9310%" y="175.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::adapters::filter_map::filter_map_try_fold::closure$0(core::iter::adapters::filter_map::filter_map_try_fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;bool&gt; &gt;,f64,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;f64,tuple$&lt;&gt; &gt; &gt;,Rust_MCS::gls::lssort::lssort::closure_env$10,core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;f64,ref_mut$&lt;Rust_MCS::gls::lssort::lssort::closure_env$11&gt; &gt; &gt;*, tuple$&lt;&gt;, tuple$&lt;usize,ref$ (1 samples, 0.09%)</title><rect x="3.6810%" y="149" width="0.0876%" height="15" fill="rgb(250,160,47)" fg:x="42" fg:w="1"/><text x="3.9310%" y="159.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lssort::lssort::closure$10(Rust_MCS::gls::lssort::lssort::closure_env$10*, tuple$&lt;usize,ref$ (1 samples, 0.09%)</title><rect x="3.6810%" y="133" width="0.0876%" height="15" fill="rgb(216,222,40)" fg:x="42" fg:w="1"/><text x="3.9310%" y="143.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lslocal::lslocal&lt;6&gt;(unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (3 samples, 0.26%)</title><rect x="3.5933%" y="325" width="0.2629%" height="15" fill="rgb(234,217,39)" fg:x="41" fg:w="3"/><text x="3.8433%" y="335.50"></text></g><g><title>`0x7FFA14612871 (1 samples, 0.09%)</title><rect x="3.7686%" y="309" width="0.0876%" height="15" fill="rgb(207,178,40)" fg:x="43" fg:w="1"/><text x="4.0186%" y="319.50"></text></g><g><title>`0x7FFA1460A9D3 (1 samples, 0.09%)</title><rect x="3.7686%" y="293" width="0.0876%" height="15" fill="rgb(221,136,13)" fg:x="43" fg:w="1"/><text x="4.0186%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lspar::lspar&lt;6&gt;(unsigned long long, double, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 0.26%)</title><rect x="3.8563%" y="325" width="0.2629%" height="15" fill="rgb(249,199,10)" fg:x="44" fg:w="3"/><text x="4.1063%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (2 samples, 0.18%)</title><rect x="3.9439%" y="309" width="0.1753%" height="15" fill="rgb(249,222,13)" fg:x="45" fg:w="2"/><text x="4.1939%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (2 samples, 0.18%)</title><rect x="3.9439%" y="293" width="0.1753%" height="15" fill="rgb(244,185,38)" fg:x="45" fg:w="2"/><text x="4.1939%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="3.9439%" y="277" width="0.1753%" height="15" fill="rgb(236,202,9)" fg:x="45" fg:w="2"/><text x="4.1939%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="3.9439%" y="261" width="0.1753%" height="15" fill="rgb(250,229,37)" fg:x="45" fg:w="2"/><text x="4.1939%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="3.9439%" y="245" width="0.1753%" height="15" fill="rgb(206,174,23)" fg:x="45" fg:w="2"/><text x="4.1939%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.18%)</title><rect x="3.9439%" y="229" width="0.1753%" height="15" fill="rgb(211,33,43)" fg:x="45" fg:w="2"/><text x="4.1939%" y="239.50"></text></g><g><title>`0x7FFA14607776 (2 samples, 0.18%)</title><rect x="3.9439%" y="213" width="0.1753%" height="15" fill="rgb(245,58,50)" fg:x="45" fg:w="2"/><text x="4.1939%" y="223.50"></text></g><g><title>`0x7FFA146078B4 (2 samples, 0.18%)</title><rect x="3.9439%" y="197" width="0.1753%" height="15" fill="rgb(244,68,36)" fg:x="45" fg:w="2"/><text x="4.1939%" y="207.50"></text></g><g><title>`0x7FFA14608047 (2 samples, 0.18%)</title><rect x="3.9439%" y="181" width="0.1753%" height="15" fill="rgb(232,229,15)" fg:x="45" fg:w="2"/><text x="4.1939%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lsquart::lsquart&lt;6&gt;(unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (1 samples, 0.09%)</title><rect x="4.1192%" y="325" width="0.0876%" height="15" fill="rgb(254,30,23)" fg:x="47" fg:w="1"/><text x="4.3692%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lslocal::lslocal&lt;6&gt;(unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double, double, double, double, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool, alloc::vec::Vec (1 samples, 0.09%)</title><rect x="4.1192%" y="309" width="0.0876%" height="15" fill="rgb(235,160,14)" fg:x="47" fg:w="1"/><text x="4.3692%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.09%)</title><rect x="4.1192%" y="293" width="0.0876%" height="15" fill="rgb(212,155,44)" fg:x="47" fg:w="1"/><text x="4.3692%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="4.1192%" y="277" width="0.0876%" height="15" fill="rgb(226,2,50)" fg:x="47" fg:w="1"/><text x="4.3692%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="4.1192%" y="261" width="0.0876%" height="15" fill="rgb(234,177,6)" fg:x="47" fg:w="1"/><text x="4.3692%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="4.1192%" y="245" width="0.0876%" height="15" fill="rgb(217,24,9)" fg:x="47" fg:w="1"/><text x="4.3692%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="4.1192%" y="229" width="0.0876%" height="15" fill="rgb(220,13,46)" fg:x="47" fg:w="1"/><text x="4.3692%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.09%)</title><rect x="4.1192%" y="213" width="0.0876%" height="15" fill="rgb(239,221,27)" fg:x="47" fg:w="1"/><text x="4.3692%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="4.1192%" y="197" width="0.0876%" height="15" fill="rgb(222,198,25)" fg:x="47" fg:w="1"/><text x="4.3692%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="4.1192%" y="181" width="0.0876%" height="15" fill="rgb(211,99,13)" fg:x="47" fg:w="1"/><text x="4.3692%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="4.1192%" y="165" width="0.0876%" height="15" fill="rgb(232,111,31)" fg:x="47" fg:w="1"/><text x="4.3692%" y="175.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.09%)</title><rect x="4.1192%" y="149" width="0.0876%" height="15" fill="rgb(245,82,37)" fg:x="47" fg:w="1"/><text x="4.3692%" y="159.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="4.1192%" y="133" width="0.0876%" height="15" fill="rgb(227,149,46)" fg:x="47" fg:w="1"/><text x="4.3692%" y="143.50"></text></g><g><title>`0x7FFA14607AFE (1 samples, 0.09%)</title><rect x="4.1192%" y="117" width="0.0876%" height="15" fill="rgb(218,36,50)" fg:x="47" fg:w="1"/><text x="4.3692%" y="127.50"></text></g><g><title>`0x7FFA145F010D (1 samples, 0.09%)</title><rect x="4.1192%" y="101" width="0.0876%" height="15" fill="rgb(226,80,48)" fg:x="47" fg:w="1"/><text x="4.3692%" y="111.50"></text></g><g><title>`0x7FFA14605585 (1 samples, 0.09%)</title><rect x="4.1192%" y="85" width="0.0876%" height="15" fill="rgb(238,224,15)" fg:x="47" fg:w="1"/><text x="4.3692%" y="95.50"></text></g><g><title>`0x7FFA14607FED (1 samples, 0.09%)</title><rect x="4.2068%" y="197" width="0.0876%" height="15" fill="rgb(241,136,10)" fg:x="48" fg:w="1"/><text x="4.4568%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (2 samples, 0.18%)</title><rect x="4.2068%" y="309" width="0.1753%" height="15" fill="rgb(208,32,45)" fg:x="48" fg:w="2"/><text x="4.4568%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="4.2068%" y="293" width="0.1753%" height="15" fill="rgb(207,135,9)" fg:x="48" fg:w="2"/><text x="4.4568%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="4.2068%" y="277" width="0.1753%" height="15" fill="rgb(206,86,44)" fg:x="48" fg:w="2"/><text x="4.4568%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="4.2068%" y="261" width="0.1753%" height="15" fill="rgb(245,177,15)" fg:x="48" fg:w="2"/><text x="4.4568%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.18%)</title><rect x="4.2068%" y="245" width="0.1753%" height="15" fill="rgb(206,64,50)" fg:x="48" fg:w="2"/><text x="4.4568%" y="255.50"></text></g><g><title>`0x7FFA14607776 (2 samples, 0.18%)</title><rect x="4.2068%" y="229" width="0.1753%" height="15" fill="rgb(234,36,40)" fg:x="48" fg:w="2"/><text x="4.4568%" y="239.50"></text></g><g><title>`0x7FFA146078B4 (2 samples, 0.18%)</title><rect x="4.2068%" y="213" width="0.1753%" height="15" fill="rgb(213,64,8)" fg:x="48" fg:w="2"/><text x="4.4568%" y="223.50"></text></g><g><title>`0x7FFA14607FF0 (1 samples, 0.09%)</title><rect x="4.2945%" y="197" width="0.0876%" height="15" fill="rgb(210,75,36)" fg:x="49" fg:w="1"/><text x="4.5445%" y="207.50"></text></g><g><title>`0x7FFA146123A7 (1 samples, 0.09%)</title><rect x="4.3821%" y="309" width="0.0876%" height="15" fill="rgb(229,88,21)" fg:x="50" fg:w="1"/><text x="4.6321%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::lsearch::lsearch&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, enum2$&lt;core::option::Option&lt;usize&gt; &gt;, Rust_MCS::StopStruct*, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (38 samples, 3.33%)</title><rect x="1.2270%" y="389" width="3.3304%" height="15" fill="rgb(252,204,47)" fg:x="14" fg:w="38"/><text x="1.4770%" y="399.50">Rus..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (12 samples, 1.05%)</title><rect x="3.5057%" y="373" width="1.0517%" height="15" fill="rgb(208,77,27)" fg:x="40" fg:w="12"/><text x="3.7557%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_slice (12 samples, 1.05%)</title><rect x="3.5057%" y="357" width="1.0517%" height="15" fill="rgb(221,76,26)" fg:x="40" fg:w="12"/><text x="3.7557%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::gls&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (12 samples, 1.05%)</title><rect x="3.5057%" y="341" width="1.0517%" height="15" fill="rgb(225,139,18)" fg:x="40" fg:w="12"/><text x="3.7557%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (4 samples, 0.35%)</title><rect x="4.2068%" y="325" width="0.3506%" height="15" fill="rgb(230,137,11)" fg:x="48" fg:w="4"/><text x="4.4568%" y="335.50"></text></g><g><title>`0x7FFA146123DD (1 samples, 0.09%)</title><rect x="4.4698%" y="309" width="0.0876%" height="15" fill="rgb(212,28,1)" fg:x="51" fg:w="1"/><text x="4.7198%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::split_func::genbox&lt;1000&gt;(unsigned long long*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="4.5574%" y="373" width="0.0876%" height="15" fill="rgb(248,164,17)" fg:x="52" fg:w="1"/><text x="4.8074%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::updtrec::updtrec(unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="4.5574%" y="357" width="0.0876%" height="15" fill="rgb(222,171,42)" fg:x="52" fg:w="1"/><text x="4.8074%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally_mut&lt;f64,nalgebra::base::dimension::Const&lt;3&gt; &gt; (1 samples, 0.09%)</title><rect x="4.6450%" y="373" width="0.0876%" height="15" fill="rgb(243,84,45)" fg:x="53" fg:w="1"/><text x="4.8950%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::impl$42::clone(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="4.6450%" y="357" width="0.0876%" height="15" fill="rgb(252,49,23)" fg:x="53" fg:w="1"/><text x="4.8950%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::vec_storage::impl$23::clone(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="4.6450%" y="341" width="0.0876%" height="15" fill="rgb(215,19,7)" fg:x="53" fg:w="1"/><text x="4.8950%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="4.6450%" y="325" width="0.0876%" height="15" fill="rgb(238,81,41)" fg:x="53" fg:w="1"/><text x="4.8950%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="4.6450%" y="309" width="0.0876%" height="15" fill="rgb(210,199,37)" fg:x="53" fg:w="1"/><text x="4.8950%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="4.6450%" y="293" width="0.0876%" height="15" fill="rgb(244,192,49)" fg:x="53" fg:w="1"/><text x="4.8950%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="4.6450%" y="277" width="0.0876%" height="15" fill="rgb(226,211,11)" fg:x="53" fg:w="1"/><text x="4.8950%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="4.6450%" y="261" width="0.0876%" height="15" fill="rgb(236,162,54)" fg:x="53" fg:w="1"/><text x="4.8950%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="4.6450%" y="245" width="0.0876%" height="15" fill="rgb(220,229,9)" fg:x="53" fg:w="1"/><text x="4.8950%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="4.6450%" y="229" width="0.0876%" height="15" fill="rgb(250,87,22)" fg:x="53" fg:w="1"/><text x="4.8950%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.09%)</title><rect x="4.6450%" y="213" width="0.0876%" height="15" fill="rgb(239,43,17)" fg:x="53" fg:w="1"/><text x="4.8950%" y="223.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="4.6450%" y="197" width="0.0876%" height="15" fill="rgb(231,177,25)" fg:x="53" fg:w="1"/><text x="4.8950%" y="207.50"></text></g><g><title>`0x7FFA14607AFE (1 samples, 0.09%)</title><rect x="4.6450%" y="181" width="0.0876%" height="15" fill="rgb(219,179,1)" fg:x="53" fg:w="1"/><text x="4.8950%" y="191.50"></text></g><g><title>`0x7FFA145EF69B (1 samples, 0.09%)</title><rect x="4.6450%" y="165" width="0.0876%" height="15" fill="rgb(238,219,53)" fg:x="53" fg:w="1"/><text x="4.8950%" y="175.50"></text></g><g><title>`0x7FFA1460BB97 (1 samples, 0.09%)</title><rect x="4.6450%" y="149" width="0.0876%" height="15" fill="rgb(232,167,36)" fg:x="53" fg:w="1"/><text x="4.8950%" y="159.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::split_func::splinit&lt;6,1000&gt;(unsigned long long, unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, unsigned long long[1000]*, unsigned long long*, enum2$&lt;core::option::Option&lt;usize&gt; &gt;*, unsigned long long*, unsigned long long*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (3 samples, 0.26%)</title><rect x="4.5574%" y="389" width="0.2629%" height="15" fill="rgb(244,19,51)" fg:x="52" fg:w="3"/><text x="4.8074%" y="399.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (1 samples, 0.09%)</title><rect x="4.7327%" y="373" width="0.0876%" height="15" fill="rgb(224,6,22)" fg:x="54" fg:w="1"/><text x="4.9827%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::feval::hm6(ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="4.7327%" y="357" width="0.0876%" height="15" fill="rgb(224,145,5)" fg:x="54" fg:w="1"/><text x="4.9827%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::updtrec::updtrec(unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.18%)</title><rect x="4.9956%" y="357" width="0.1753%" height="15" fill="rgb(234,130,49)" fg:x="57" fg:w="2"/><text x="5.2456%" y="367.50"></text></g><g><title>`0x7FFA14745053 (2 samples, 0.18%)</title><rect x="5.1709%" y="117" width="0.1753%" height="15" fill="rgb(254,6,2)" fg:x="59" fg:w="2"/><text x="5.4209%" y="127.50"></text></g><g><title>`0x7FFA14616459 (3 samples, 0.26%)</title><rect x="5.1709%" y="133" width="0.2629%" height="15" fill="rgb(208,96,46)" fg:x="59" fg:w="3"/><text x="5.4209%" y="143.50"></text></g><g><title>`0x7FFA14745057 (1 samples, 0.09%)</title><rect x="5.3462%" y="117" width="0.0876%" height="15" fill="rgb(239,3,39)" fg:x="61" fg:w="1"/><text x="5.5962%" y="127.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (4 samples, 0.35%)</title><rect x="5.1709%" y="325" width="0.3506%" height="15" fill="rgb(233,210,1)" fg:x="59" fg:w="4"/><text x="5.4209%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (4 samples, 0.35%)</title><rect x="5.1709%" y="309" width="0.3506%" height="15" fill="rgb(244,137,37)" fg:x="59" fg:w="4"/><text x="5.4209%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (4 samples, 0.35%)</title><rect x="5.1709%" y="293" width="0.3506%" height="15" fill="rgb(240,136,2)" fg:x="59" fg:w="4"/><text x="5.4209%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (4 samples, 0.35%)</title><rect x="5.1709%" y="277" width="0.3506%" height="15" fill="rgb(239,18,37)" fg:x="59" fg:w="4"/><text x="5.4209%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (4 samples, 0.35%)</title><rect x="5.1709%" y="261" width="0.3506%" height="15" fill="rgb(218,185,22)" fg:x="59" fg:w="4"/><text x="5.4209%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (4 samples, 0.35%)</title><rect x="5.1709%" y="245" width="0.3506%" height="15" fill="rgb(225,218,4)" fg:x="59" fg:w="4"/><text x="5.4209%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (4 samples, 0.35%)</title><rect x="5.1709%" y="229" width="0.3506%" height="15" fill="rgb(230,182,32)" fg:x="59" fg:w="4"/><text x="5.4209%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.35%)</title><rect x="5.1709%" y="213" width="0.3506%" height="15" fill="rgb(242,56,43)" fg:x="59" fg:w="4"/><text x="5.4209%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (4 samples, 0.35%)</title><rect x="5.1709%" y="197" width="0.3506%" height="15" fill="rgb(233,99,24)" fg:x="59" fg:w="4"/><text x="5.4209%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (4 samples, 0.35%)</title><rect x="5.1709%" y="181" width="0.3506%" height="15" fill="rgb(234,209,42)" fg:x="59" fg:w="4"/><text x="5.4209%" y="191.50"></text></g><g><title>`0x7FFA14615376 (4 samples, 0.35%)</title><rect x="5.1709%" y="165" width="0.3506%" height="15" fill="rgb(227,7,12)" fg:x="59" fg:w="4"/><text x="5.4209%" y="175.50"></text></g><g><title>`0x7FFA146154B5 (4 samples, 0.35%)</title><rect x="5.1709%" y="149" width="0.3506%" height="15" fill="rgb(245,203,43)" fg:x="59" fg:w="4"/><text x="5.4209%" y="159.50"></text></g><g><title>`0x7FFA1461646C (1 samples, 0.09%)</title><rect x="5.4338%" y="133" width="0.0876%" height="15" fill="rgb(238,205,33)" fg:x="62" fg:w="1"/><text x="5.6838%" y="143.50"></text></g><g><title>`0x7FFA14612871 (1 samples, 0.09%)</title><rect x="5.4338%" y="117" width="0.0876%" height="15" fill="rgb(231,56,7)" fg:x="62" fg:w="1"/><text x="5.6838%" y="127.50"></text></g><g><title>`0x7FFA1460A83A (1 samples, 0.09%)</title><rect x="5.4338%" y="101" width="0.0876%" height="15" fill="rgb(244,186,29)" fg:x="62" fg:w="1"/><text x="5.6838%" y="111.50"></text></g><g><title>`0x7FFA1469D58A (1 samples, 0.09%)</title><rect x="5.4338%" y="85" width="0.0876%" height="15" fill="rgb(234,111,31)" fg:x="62" fg:w="1"/><text x="5.6838%" y="95.50"></text></g><g><title>`0x7FFA1460DEEE (1 samples, 0.09%)</title><rect x="5.4338%" y="69" width="0.0876%" height="15" fill="rgb(241,149,10)" fg:x="62" fg:w="1"/><text x="5.6838%" y="79.50"></text></g><g><title>`0x7FFA146CA8F9 (1 samples, 0.09%)</title><rect x="5.4338%" y="53" width="0.0876%" height="15" fill="rgb(249,206,44)" fg:x="62" fg:w="1"/><text x="5.6838%" y="63.50"></text></g><g><title>`0x7FFA1473FAE4 (1 samples, 0.09%)</title><rect x="5.4338%" y="37" width="0.0876%" height="15" fill="rgb(251,153,30)" fg:x="62" fg:w="1"/><text x="5.6838%" y="47.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::range::impl$6::next(core::ops::range::Range (1 samples, 0.09%)</title><rect x="5.5215%" y="325" width="0.0876%" height="15" fill="rgb(239,152,38)" fg:x="63" fg:w="1"/><text x="5.7715%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1 samples, 0.09%)</title><rect x="5.5215%" y="309" width="0.0876%" height="15" fill="rgb(249,139,47)" fg:x="63" fg:w="1"/><text x="5.7715%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::cmp::impls::impl$58::lt (1 samples, 0.09%)</title><rect x="5.5215%" y="293" width="0.0876%" height="15" fill="rgb(244,64,35)" fg:x="63" fg:w="1"/><text x="5.7715%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::resize(unsigned long long, enum2$&lt;core::option::Option (7 samples, 0.61%)</title><rect x="5.1709%" y="357" width="0.6135%" height="15" fill="rgb(216,46,15)" fg:x="59" fg:w="7"/><text x="5.4209%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::extend_with(unsigned long long, enum2$&lt;core::option::Option (7 samples, 0.61%)</title><rect x="5.1709%" y="341" width="0.6135%" height="15" fill="rgb(250,74,19)" fg:x="59" fg:w="7"/><text x="5.4209%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;usize&gt; &gt;*, enum2$&lt;core::option::Option (2 samples, 0.18%)</title><rect x="5.6091%" y="325" width="0.1753%" height="15" fill="rgb(249,42,33)" fg:x="64" fg:w="2"/><text x="5.8591%" y="335.50"></text></g><g><title>`0x7FFA1461633D (1 samples, 0.09%)</title><rect x="5.7844%" y="133" width="0.0876%" height="15" fill="rgb(242,149,17)" fg:x="66" fg:w="1"/><text x="6.0344%" y="143.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="5.7844%" y="117" width="0.0876%" height="15" fill="rgb(244,29,21)" fg:x="66" fg:w="1"/><text x="6.0344%" y="127.50"></text></g><g><title>`0x7FFA14607AFE (1 samples, 0.09%)</title><rect x="5.7844%" y="101" width="0.0876%" height="15" fill="rgb(220,130,37)" fg:x="66" fg:w="1"/><text x="6.0344%" y="111.50"></text></g><g><title>`0x7FFA145EF7F1 (1 samples, 0.09%)</title><rect x="5.7844%" y="85" width="0.0876%" height="15" fill="rgb(211,67,2)" fg:x="66" fg:w="1"/><text x="6.0344%" y="95.50"></text></g><g><title>`0x7FFA14745044 (1 samples, 0.09%)</title><rect x="5.8720%" y="117" width="0.0876%" height="15" fill="rgb(235,68,52)" fg:x="67" fg:w="1"/><text x="6.1220%" y="127.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::reserve (3 samples, 0.26%)</title><rect x="5.7844%" y="325" width="0.2629%" height="15" fill="rgb(246,142,3)" fg:x="66" fg:w="3"/><text x="6.0344%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;isize,alloc::alloc::Global&gt;::reserve (3 samples, 0.26%)</title><rect x="5.7844%" y="309" width="0.2629%" height="15" fill="rgb(241,25,7)" fg:x="66" fg:w="3"/><text x="6.0344%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (3 samples, 0.26%)</title><rect x="5.7844%" y="293" width="0.2629%" height="15" fill="rgb(242,119,39)" fg:x="66" fg:w="3"/><text x="6.0344%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (3 samples, 0.26%)</title><rect x="5.7844%" y="277" width="0.2629%" height="15" fill="rgb(241,98,45)" fg:x="66" fg:w="3"/><text x="6.0344%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (3 samples, 0.26%)</title><rect x="5.7844%" y="261" width="0.2629%" height="15" fill="rgb(254,28,30)" fg:x="66" fg:w="3"/><text x="6.0344%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (3 samples, 0.26%)</title><rect x="5.7844%" y="245" width="0.2629%" height="15" fill="rgb(241,142,54)" fg:x="66" fg:w="3"/><text x="6.0344%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (3 samples, 0.26%)</title><rect x="5.7844%" y="229" width="0.2629%" height="15" fill="rgb(222,85,15)" fg:x="66" fg:w="3"/><text x="6.0344%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.26%)</title><rect x="5.7844%" y="213" width="0.2629%" height="15" fill="rgb(210,85,47)" fg:x="66" fg:w="3"/><text x="6.0344%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (3 samples, 0.26%)</title><rect x="5.7844%" y="197" width="0.2629%" height="15" fill="rgb(224,206,25)" fg:x="66" fg:w="3"/><text x="6.0344%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (3 samples, 0.26%)</title><rect x="5.7844%" y="181" width="0.2629%" height="15" fill="rgb(243,201,19)" fg:x="66" fg:w="3"/><text x="6.0344%" y="191.50"></text></g><g><title>`0x7FFA14615376 (3 samples, 0.26%)</title><rect x="5.7844%" y="165" width="0.2629%" height="15" fill="rgb(236,59,4)" fg:x="66" fg:w="3"/><text x="6.0344%" y="175.50"></text></g><g><title>`0x7FFA146154B5 (3 samples, 0.26%)</title><rect x="5.7844%" y="149" width="0.2629%" height="15" fill="rgb(254,179,45)" fg:x="66" fg:w="3"/><text x="6.0344%" y="159.50"></text></g><g><title>`0x7FFA14616459 (2 samples, 0.18%)</title><rect x="5.8720%" y="133" width="0.1753%" height="15" fill="rgb(226,14,10)" fg:x="67" fg:w="2"/><text x="6.1220%" y="143.50"></text></g><g><title>`0x7FFA14745053 (1 samples, 0.09%)</title><rect x="5.9597%" y="117" width="0.0876%" height="15" fill="rgb(244,27,41)" fg:x="68" fg:w="1"/><text x="6.2097%" y="127.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::resize (6 samples, 0.53%)</title><rect x="5.7844%" y="357" width="0.5259%" height="15" fill="rgb(235,35,32)" fg:x="66" fg:w="6"/><text x="6.0344%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::extend_with (6 samples, 0.53%)</title><rect x="5.7844%" y="341" width="0.5259%" height="15" fill="rgb(218,68,31)" fg:x="66" fg:w="6"/><text x="6.0344%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::write (3 samples, 0.26%)</title><rect x="6.0473%" y="325" width="0.2629%" height="15" fill="rgb(207,120,37)" fg:x="69" fg:w="3"/><text x="6.2973%" y="335.50"></text></g><g><title>`0x7FF9F5FB1A89 (3 samples, 0.26%)</title><rect x="6.0473%" y="309" width="0.2629%" height="15" fill="rgb(227,98,0)" fg:x="69" fg:w="3"/><text x="6.2973%" y="319.50"></text></g><g><title>`0x7FFA1461633D (1 samples, 0.09%)</title><rect x="6.3103%" y="133" width="0.0876%" height="15" fill="rgb(207,7,3)" fg:x="72" fg:w="1"/><text x="6.5603%" y="143.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="6.3103%" y="117" width="0.0876%" height="15" fill="rgb(206,98,19)" fg:x="72" fg:w="1"/><text x="6.5603%" y="127.50"></text></g><g><title>`0x7FFA14607AFE (1 samples, 0.09%)</title><rect x="6.3103%" y="101" width="0.0876%" height="15" fill="rgb(217,5,26)" fg:x="72" fg:w="1"/><text x="6.5603%" y="111.50"></text></g><g><title>`0x7FFA145F09B0 (1 samples, 0.09%)</title><rect x="6.3103%" y="85" width="0.0876%" height="15" fill="rgb(235,190,38)" fg:x="72" fg:w="1"/><text x="6.5603%" y="95.50"></text></g><g><title>`0x7FFA145F1EDF (1 samples, 0.09%)</title><rect x="6.3103%" y="69" width="0.0876%" height="15" fill="rgb(247,86,24)" fg:x="72" fg:w="1"/><text x="6.5603%" y="79.50"></text></g><g><title>`0x7FFA145F2854 (1 samples, 0.09%)</title><rect x="6.3103%" y="53" width="0.0876%" height="15" fill="rgb(205,101,16)" fg:x="72" fg:w="1"/><text x="6.5603%" y="63.50"></text></g><g><title>`0x7FFA145F238A (1 samples, 0.09%)</title><rect x="6.3103%" y="37" width="0.0876%" height="15" fill="rgb(246,168,33)" fg:x="72" fg:w="1"/><text x="6.5603%" y="47.50"></text></g><g><title>`0x7FFA14744FA6 (1 samples, 0.09%)</title><rect x="6.3979%" y="117" width="0.0876%" height="15" fill="rgb(231,114,1)" fg:x="73" fg:w="1"/><text x="6.6479%" y="127.50"></text></g><g><title>`0x7FFA14745049 (1 samples, 0.09%)</title><rect x="6.4855%" y="117" width="0.0876%" height="15" fill="rgb(207,184,53)" fg:x="74" fg:w="1"/><text x="6.7355%" y="127.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::reserve (4 samples, 0.35%)</title><rect x="6.3103%" y="325" width="0.3506%" height="15" fill="rgb(224,95,51)" fg:x="72" fg:w="4"/><text x="6.5603%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::reserve (4 samples, 0.35%)</title><rect x="6.3103%" y="309" width="0.3506%" height="15" fill="rgb(212,188,45)" fg:x="72" fg:w="4"/><text x="6.5603%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (4 samples, 0.35%)</title><rect x="6.3103%" y="293" width="0.3506%" height="15" fill="rgb(223,154,38)" fg:x="72" fg:w="4"/><text x="6.5603%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (4 samples, 0.35%)</title><rect x="6.3103%" y="277" width="0.3506%" height="15" fill="rgb(251,22,52)" fg:x="72" fg:w="4"/><text x="6.5603%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (4 samples, 0.35%)</title><rect x="6.3103%" y="261" width="0.3506%" height="15" fill="rgb(229,209,22)" fg:x="72" fg:w="4"/><text x="6.5603%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (4 samples, 0.35%)</title><rect x="6.3103%" y="245" width="0.3506%" height="15" fill="rgb(234,138,34)" fg:x="72" fg:w="4"/><text x="6.5603%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (4 samples, 0.35%)</title><rect x="6.3103%" y="229" width="0.3506%" height="15" fill="rgb(212,95,11)" fg:x="72" fg:w="4"/><text x="6.5603%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.35%)</title><rect x="6.3103%" y="213" width="0.3506%" height="15" fill="rgb(240,179,47)" fg:x="72" fg:w="4"/><text x="6.5603%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (4 samples, 0.35%)</title><rect x="6.3103%" y="197" width="0.3506%" height="15" fill="rgb(240,163,11)" fg:x="72" fg:w="4"/><text x="6.5603%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (4 samples, 0.35%)</title><rect x="6.3103%" y="181" width="0.3506%" height="15" fill="rgb(236,37,12)" fg:x="72" fg:w="4"/><text x="6.5603%" y="191.50"></text></g><g><title>`0x7FFA14615376 (4 samples, 0.35%)</title><rect x="6.3103%" y="165" width="0.3506%" height="15" fill="rgb(232,164,16)" fg:x="72" fg:w="4"/><text x="6.5603%" y="175.50"></text></g><g><title>`0x7FFA146154B5 (4 samples, 0.35%)</title><rect x="6.3103%" y="149" width="0.3506%" height="15" fill="rgb(244,205,15)" fg:x="72" fg:w="4"/><text x="6.5603%" y="159.50"></text></g><g><title>`0x7FFA14616459 (3 samples, 0.26%)</title><rect x="6.3979%" y="133" width="0.2629%" height="15" fill="rgb(223,117,47)" fg:x="73" fg:w="3"/><text x="6.6479%" y="143.50"></text></g><g><title>`0x7FFA14745053 (1 samples, 0.09%)</title><rect x="6.5732%" y="117" width="0.0876%" height="15" fill="rgb(244,107,35)" fg:x="75" fg:w="1"/><text x="6.8232%" y="127.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::resize (7 samples, 0.61%)</title><rect x="6.3103%" y="357" width="0.6135%" height="15" fill="rgb(205,140,8)" fg:x="72" fg:w="7"/><text x="6.5603%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::extend_with (7 samples, 0.61%)</title><rect x="6.3103%" y="341" width="0.6135%" height="15" fill="rgb(228,84,46)" fg:x="72" fg:w="7"/><text x="6.5603%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::write (3 samples, 0.26%)</title><rect x="6.6608%" y="325" width="0.2629%" height="15" fill="rgb(254,188,9)" fg:x="76" fg:w="3"/><text x="6.9108%" y="335.50"></text></g><g><title>`0x7FF9F5FB1A89 (3 samples, 0.26%)</title><rect x="6.6608%" y="309" width="0.2629%" height="15" fill="rgb(206,112,54)" fg:x="76" fg:w="3"/><text x="6.9108%" y="319.50"></text></g><g><title>`0x7FFA14745053 (2 samples, 0.18%)</title><rect x="6.9238%" y="69" width="0.1753%" height="15" fill="rgb(216,84,49)" fg:x="79" fg:w="2"/><text x="7.1738%" y="79.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::default_allocator::impl$9::reallocate_copy(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (3 samples, 0.26%)</title><rect x="6.9238%" y="309" width="0.2629%" height="15" fill="rgb(214,194,35)" fg:x="79" fg:w="3"/><text x="7.1738%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;::resize(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (3 samples, 0.26%)</title><rect x="6.9238%" y="293" width="0.2629%" height="15" fill="rgb(249,28,3)" fg:x="79" fg:w="3"/><text x="7.1738%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (3 samples, 0.26%)</title><rect x="6.9238%" y="277" width="0.2629%" height="15" fill="rgb(222,56,52)" fg:x="79" fg:w="3"/><text x="7.1738%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (3 samples, 0.26%)</title><rect x="6.9238%" y="261" width="0.2629%" height="15" fill="rgb(245,217,50)" fg:x="79" fg:w="3"/><text x="7.1738%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (3 samples, 0.26%)</title><rect x="6.9238%" y="245" width="0.2629%" height="15" fill="rgb(213,201,24)" fg:x="79" fg:w="3"/><text x="7.1738%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (3 samples, 0.26%)</title><rect x="6.9238%" y="229" width="0.2629%" height="15" fill="rgb(248,116,28)" fg:x="79" fg:w="3"/><text x="7.1738%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (3 samples, 0.26%)</title><rect x="6.9238%" y="213" width="0.2629%" height="15" fill="rgb(219,72,43)" fg:x="79" fg:w="3"/><text x="7.1738%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (3 samples, 0.26%)</title><rect x="6.9238%" y="197" width="0.2629%" height="15" fill="rgb(209,138,14)" fg:x="79" fg:w="3"/><text x="7.1738%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (3 samples, 0.26%)</title><rect x="6.9238%" y="181" width="0.2629%" height="15" fill="rgb(222,18,33)" fg:x="79" fg:w="3"/><text x="7.1738%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.26%)</title><rect x="6.9238%" y="165" width="0.2629%" height="15" fill="rgb(213,199,7)" fg:x="79" fg:w="3"/><text x="7.1738%" y="175.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (3 samples, 0.26%)</title><rect x="6.9238%" y="149" width="0.2629%" height="15" fill="rgb(250,110,10)" fg:x="79" fg:w="3"/><text x="7.1738%" y="159.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (3 samples, 0.26%)</title><rect x="6.9238%" y="133" width="0.2629%" height="15" fill="rgb(248,123,6)" fg:x="79" fg:w="3"/><text x="7.1738%" y="143.50"></text></g><g><title>`0x7FFA14615376 (3 samples, 0.26%)</title><rect x="6.9238%" y="117" width="0.2629%" height="15" fill="rgb(206,91,31)" fg:x="79" fg:w="3"/><text x="7.1738%" y="127.50"></text></g><g><title>`0x7FFA146154B5 (3 samples, 0.26%)</title><rect x="6.9238%" y="101" width="0.2629%" height="15" fill="rgb(211,154,13)" fg:x="79" fg:w="3"/><text x="7.1738%" y="111.50"></text></g><g><title>`0x7FFA14616459 (3 samples, 0.26%)</title><rect x="6.9238%" y="85" width="0.2629%" height="15" fill="rgb(225,148,7)" fg:x="79" fg:w="3"/><text x="7.1738%" y="95.50"></text></g><g><title>`0x7FFA14745060 (1 samples, 0.09%)</title><rect x="7.0990%" y="69" width="0.0876%" height="15" fill="rgb(220,160,43)" fg:x="81" fg:w="1"/><text x="7.3490%" y="79.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (12 samples, 1.05%)</title><rect x="6.9238%" y="341" width="1.0517%" height="15" fill="rgb(213,52,39)" fg:x="79" fg:w="12"/><text x="7.1738%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_generic(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;, nalgebra::base::dimension::Const (12 samples, 1.05%)</title><rect x="6.9238%" y="325" width="1.0517%" height="15" fill="rgb(243,137,7)" fg:x="79" fg:w="12"/><text x="7.1738%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;::fill_with(nalgebra::base::edition::impl$8::resize_generic::closure_env$0&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;,nalgebra::base::dimension::Const (9 samples, 0.79%)</title><rect x="7.1867%" y="309" width="0.7888%" height="15" fill="rgb(230,79,13)" fg:x="82" fg:w="9"/><text x="7.4367%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::iter::impl$36::next(nalgebra::base::iter::MatrixIterMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (8 samples, 0.70%)</title><rect x="7.2743%" y="293" width="0.7011%" height="15" fill="rgb(247,105,23)" fg:x="83" fg:w="8"/><text x="7.5243%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::iter::impl$31::next(nalgebra::base::iter::RawIter&lt;ptr_mut$&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt; &gt;,core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (8 samples, 0.70%)</title><rect x="7.2743%" y="277" width="0.7011%" height="15" fill="rgb(223,179,41)" fg:x="83" fg:w="8"/><text x="7.5243%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::impl$42::clone(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (8 samples, 0.70%)</title><rect x="7.9755%" y="341" width="0.7011%" height="15" fill="rgb(218,9,34)" fg:x="91" fg:w="8"/><text x="8.2255%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::vec_storage::impl$23::clone(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (8 samples, 0.70%)</title><rect x="7.9755%" y="325" width="0.7011%" height="15" fill="rgb(222,106,8)" fg:x="91" fg:w="8"/><text x="8.2255%" y="335.50"></text></g><g><title>`0x7FF9F5FB007B (8 samples, 0.70%)</title><rect x="7.9755%" y="309" width="0.7011%" height="15" fill="rgb(211,220,0)" fg:x="91" fg:w="8"/><text x="8.2255%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::split_func::genbox&lt;1000&gt;(unsigned long long*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (44 samples, 3.86%)</title><rect x="4.9956%" y="373" width="3.8563%" height="15" fill="rgb(229,52,16)" fg:x="57" fg:w="44"/><text x="5.2456%" y="383.50">Rust..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally_mut&lt;f64,nalgebra::base::dimension::Const&lt;2&gt; &gt; (22 samples, 1.93%)</title><rect x="6.9238%" y="357" width="1.9281%" height="15" fill="rgb(212,155,18)" fg:x="79" fg:w="22"/><text x="7.1738%" y="367.50">R..</text></g><g><title>`0x7FFA14612871 (2 samples, 0.18%)</title><rect x="8.6766%" y="341" width="0.1753%" height="15" fill="rgb(242,21,14)" fg:x="99" fg:w="2"/><text x="8.9266%" y="351.50"></text></g><g><title>`0x7FFA1460B3ED (2 samples, 0.18%)</title><rect x="8.6766%" y="325" width="0.1753%" height="15" fill="rgb(222,19,48)" fg:x="99" fg:w="2"/><text x="8.9266%" y="335.50"></text></g><g><title>`0x7FFA1464E5EF (2 samples, 0.18%)</title><rect x="8.6766%" y="309" width="0.1753%" height="15" fill="rgb(232,45,27)" fg:x="99" fg:w="2"/><text x="8.9266%" y="319.50"></text></g><g><title>`0x7FFA1473FAE4 (2 samples, 0.18%)</title><rect x="8.6766%" y="293" width="0.1753%" height="15" fill="rgb(249,103,42)" fg:x="99" fg:w="2"/><text x="8.9266%" y="303.50"></text></g><g><title>`0x7FFA11CA823B (1 samples, 0.09%)</title><rect x="9.4654%" y="325" width="0.0876%" height="15" fill="rgb(246,81,33)" fg:x="108" fg:w="1"/><text x="9.7154%" y="335.50"></text></g><g><title>`0x7FFA11CA825F (1 samples, 0.09%)</title><rect x="9.5530%" y="325" width="0.0876%" height="15" fill="rgb(252,33,42)" fg:x="109" fg:w="1"/><text x="9.8030%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::f64::impl$0::exp (3 samples, 0.26%)</title><rect x="9.4654%" y="341" width="0.2629%" height="15" fill="rgb(209,212,41)" fg:x="108" fg:w="3"/><text x="9.7154%" y="351.50"></text></g><g><title>`0x7FFA11CA829A (1 samples, 0.09%)</title><rect x="9.6407%" y="325" width="0.0876%" height="15" fill="rgb(207,154,6)" fg:x="110" fg:w="1"/><text x="9.8907%" y="335.50"></text></g><g><title>`0x7FFA11CA81C2 (1 samples, 0.09%)</title><rect x="9.7283%" y="341" width="0.0876%" height="15" fill="rgb(223,64,47)" fg:x="111" fg:w="1"/><text x="9.9783%" y="351.50"></text></g><g><title>`0x7FFA11CA8212 (1 samples, 0.09%)</title><rect x="9.8160%" y="341" width="0.0876%" height="15" fill="rgb(211,161,38)" fg:x="112" fg:w="1"/><text x="10.0660%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::split_func::split&lt;6,1000&gt;(unsigned long long, unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, double, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, unsigned long long[1000]*, unsigned long long*, enum2$&lt;core::option::Option (59 samples, 5.17%)</title><rect x="4.8203%" y="389" width="5.1709%" height="15" fill="rgb(219,138,40)" fg:x="55" fg:w="59"/><text x="5.0703%" y="399.50">Rust_M..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (13 samples, 1.14%)</title><rect x="8.8519%" y="373" width="1.1394%" height="15" fill="rgb(241,228,46)" fg:x="101" fg:w="13"/><text x="9.1019%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::feval::hm6(ref$&lt;slice2$ (13 samples, 1.14%)</title><rect x="8.8519%" y="357" width="1.1394%" height="15" fill="rgb(223,209,38)" fg:x="101" fg:w="13"/><text x="9.1019%" y="367.50"></text></g><g><title>`0x7FFA11CA827F (1 samples, 0.09%)</title><rect x="9.9036%" y="341" width="0.0876%" height="15" fill="rgb(236,164,45)" fg:x="113" fg:w="1"/><text x="10.1536%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::slice::iter::Iter (10 samples, 0.88%)</title><rect x="14.2857%" y="373" width="0.8764%" height="15" fill="rgb(231,15,5)" fg:x="163" fg:w="10"/><text x="14.5357%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;core::slice::iter::Iter (10 samples, 0.88%)</title><rect x="14.2857%" y="357" width="0.8764%" height="15" fill="rgb(252,35,15)" fg:x="163" fg:w="10"/><text x="14.5357%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (1 samples, 0.09%)</title><rect x="15.0745%" y="341" width="0.0876%" height="15" fill="rgb(248,181,18)" fg:x="172" fg:w="1"/><text x="15.3245%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::non_null::impl$13::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (1 samples, 0.09%)</title><rect x="15.0745%" y="325" width="0.0876%" height="15" fill="rgb(233,39,42)" fg:x="172" fg:w="1"/><text x="15.3245%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::strtsw::strtsw(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (63 samples, 5.52%)</title><rect x="9.9912%" y="389" width="5.5215%" height="15" fill="rgb(238,110,33)" fg:x="114" fg:w="63"/><text x="10.2412%" y="399.50">Rust_MC..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::ops::impl$0::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (4 samples, 0.35%)</title><rect x="15.1621%" y="373" width="0.3506%" height="15" fill="rgb(233,195,10)" fg:x="173" fg:w="4"/><text x="15.4121%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;*, tuple$ (4 samples, 0.35%)</title><rect x="15.1621%" y="357" width="0.3506%" height="15" fill="rgb(254,105,3)" fg:x="173" fg:w="4"/><text x="15.4121%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;::get_unchecked(tuple$ (2 samples, 0.18%)</title><rect x="15.3374%" y="341" width="0.1753%" height="15" fill="rgb(221,225,9)" fg:x="175" fg:w="2"/><text x="15.5874%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.18%)</title><rect x="15.3374%" y="325" width="0.1753%" height="15" fill="rgb(224,227,45)" fg:x="175" fg:w="2"/><text x="15.5874%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.18%)</title><rect x="15.3374%" y="309" width="0.1753%" height="15" fill="rgb(229,198,43)" fg:x="175" fg:w="2"/><text x="15.5874%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.18%)</title><rect x="15.3374%" y="293" width="0.1753%" height="15" fill="rgb(206,209,35)" fg:x="175" fg:w="2"/><text x="15.5874%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.18%)</title><rect x="15.3374%" y="277" width="0.1753%" height="15" fill="rgb(245,195,53)" fg:x="175" fg:w="2"/><text x="15.5874%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::const_ptr::impl$0::wrapping_add (2 samples, 0.18%)</title><rect x="15.3374%" y="261" width="0.1753%" height="15" fill="rgb(240,92,26)" fg:x="175" fg:w="2"/><text x="15.5874%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::const_ptr::impl$0::wrapping_offset (2 samples, 0.18%)</title><rect x="15.3374%" y="245" width="0.1753%" height="15" fill="rgb(207,40,23)" fg:x="175" fg:w="2"/><text x="15.5874%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::from_elem (1 samples, 0.09%)</title><rect x="15.5127%" y="389" width="0.0876%" height="15" fill="rgb(223,111,35)" fg:x="177" fg:w="1"/><text x="15.7627%" y="399.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::spec_from_elem::impl$1::from_elem (1 samples, 0.09%)</title><rect x="15.5127%" y="373" width="0.0876%" height="15" fill="rgb(229,147,28)" fg:x="177" fg:w="1"/><text x="15.7627%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVec&lt;isize,alloc::alloc::Global&gt;::with_capacity_zeroed_in (1 samples, 0.09%)</title><rect x="15.5127%" y="357" width="0.0876%" height="15" fill="rgb(211,29,28)" fg:x="177" fg:w="1"/><text x="15.7627%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (1 samples, 0.09%)</title><rect x="15.5127%" y="341" width="0.0876%" height="15" fill="rgb(228,72,33)" fg:x="177" fg:w="1"/><text x="15.7627%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.09%)</title><rect x="15.5127%" y="325" width="0.0876%" height="15" fill="rgb(205,214,31)" fg:x="177" fg:w="1"/><text x="15.7627%" y="335.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="15.5127%" y="309" width="0.0876%" height="15" fill="rgb(224,111,15)" fg:x="177" fg:w="1"/><text x="15.7627%" y="319.50"></text></g><g><title>`0x7FFA14607AFE (1 samples, 0.09%)</title><rect x="15.5127%" y="293" width="0.0876%" height="15" fill="rgb(253,21,26)" fg:x="177" fg:w="1"/><text x="15.7627%" y="303.50"></text></g><g><title>`0x7FFA145F09B0 (1 samples, 0.09%)</title><rect x="15.5127%" y="277" width="0.0876%" height="15" fill="rgb(245,139,43)" fg:x="177" fg:w="1"/><text x="15.7627%" y="287.50"></text></g><g><title>`0x7FFA145F1EDF (1 samples, 0.09%)</title><rect x="15.5127%" y="261" width="0.0876%" height="15" fill="rgb(252,170,7)" fg:x="177" fg:w="1"/><text x="15.7627%" y="271.50"></text></g><g><title>`0x7FFA145F2854 (1 samples, 0.09%)</title><rect x="15.5127%" y="245" width="0.0876%" height="15" fill="rgb(231,118,14)" fg:x="177" fg:w="1"/><text x="15.7627%" y="255.50"></text></g><g><title>`0x7FFA145F238A (1 samples, 0.09%)</title><rect x="15.5127%" y="229" width="0.0876%" height="15" fill="rgb(238,83,0)" fg:x="177" fg:w="1"/><text x="15.7627%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$13::index(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="15.6004%" y="389" width="0.0876%" height="15" fill="rgb(221,39,39)" fg:x="178" fg:w="1"/><text x="15.8504%" y="399.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="15.6004%" y="373" width="0.0876%" height="15" fill="rgb(222,119,46)" fg:x="178" fg:w="1"/><text x="15.8504%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (1 samples, 0.09%)</title><rect x="15.6004%" y="357" width="0.0876%" height="15" fill="rgb(222,165,49)" fg:x="178" fg:w="1"/><text x="15.8504%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::init_func::subint (1 samples, 0.09%)</title><rect x="15.6880%" y="325" width="0.0876%" height="15" fill="rgb(219,113,52)" fg:x="179" fg:w="1"/><text x="15.9380%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::f64::impl$0::abs (1 samples, 0.09%)</title><rect x="15.6880%" y="309" width="0.0876%" height="15" fill="rgb(214,7,15)" fg:x="179" fg:w="1"/><text x="15.9380%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::exgain::exgain&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (3 samples, 0.26%)</title><rect x="15.6880%" y="341" width="0.2629%" height="15" fill="rgb(235,32,4)" fg:x="179" fg:w="3"/><text x="15.9380%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::quadratic_func::quadmin (2 samples, 0.18%)</title><rect x="15.7756%" y="325" width="0.1753%" height="15" fill="rgb(238,90,54)" fg:x="180" fg:w="2"/><text x="16.0256%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::quadratic_func::quadpol (1 samples, 0.09%)</title><rect x="15.8633%" y="309" width="0.0876%" height="15" fill="rgb(213,208,19)" fg:x="181" fg:w="1"/><text x="16.1133%" y="319.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (8 samples, 0.70%)</title><rect x="15.6880%" y="389" width="0.7011%" height="15" fill="rgb(233,156,4)" fg:x="179" fg:w="8"/><text x="15.9380%" y="399.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec (8 samples, 0.70%)</title><rect x="15.6880%" y="373" width="0.7011%" height="15" fill="rgb(207,194,5)" fg:x="179" fg:w="8"/><text x="15.9380%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::as_mut_slice (8 samples, 0.70%)</title><rect x="15.6880%" y="357" width="0.7011%" height="15" fill="rgb(206,111,30)" fg:x="179" fg:w="8"/><text x="15.9380%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::splrnk::splrnk&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (5 samples, 0.44%)</title><rect x="15.9509%" y="341" width="0.4382%" height="15" fill="rgb(243,70,54)" fg:x="182" fg:w="5"/><text x="16.2009%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::split_func::split2 (2 samples, 0.18%)</title><rect x="16.2138%" y="325" width="0.1753%" height="15" fill="rgb(242,28,8)" fg:x="185" fg:w="2"/><text x="16.4638%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(alloc::vec::Vec (3 samples, 0.26%)</title><rect x="16.3891%" y="389" width="0.2629%" height="15" fill="rgb(219,106,18)" fg:x="187" fg:w="3"/><text x="16.6391%" y="399.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 0.26%)</title><rect x="16.3891%" y="373" width="0.2629%" height="15" fill="rgb(244,222,10)" fg:x="187" fg:w="3"/><text x="16.6391%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (3 samples, 0.26%)</title><rect x="16.3891%" y="357" width="0.2629%" height="15" fill="rgb(236,179,52)" fg:x="187" fg:w="3"/><text x="16.6391%" y="367.50"></text></g><g><title>`0x7FFA14612871 (3 samples, 0.26%)</title><rect x="16.3891%" y="341" width="0.2629%" height="15" fill="rgb(213,23,39)" fg:x="187" fg:w="3"/><text x="16.6391%" y="351.50"></text></g><g><title>`0x7FFA1460B3ED (3 samples, 0.26%)</title><rect x="16.3891%" y="325" width="0.2629%" height="15" fill="rgb(238,48,10)" fg:x="187" fg:w="3"/><text x="16.6391%" y="335.50"></text></g><g><title>`0x7FFA1464E5EF (3 samples, 0.26%)</title><rect x="16.3891%" y="309" width="0.2629%" height="15" fill="rgb(251,196,23)" fg:x="187" fg:w="3"/><text x="16.6391%" y="319.50"></text></g><g><title>`0x7FFA1473FAE4 (3 samples, 0.26%)</title><rect x="16.3891%" y="293" width="0.2629%" height="15" fill="rgb(250,152,24)" fg:x="187" fg:w="3"/><text x="16.6391%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="16.6521%" y="389" width="0.0876%" height="15" fill="rgb(209,150,17)" fg:x="190" fg:w="1"/><text x="16.9021%" y="399.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="16.6521%" y="373" width="0.0876%" height="15" fill="rgb(234,202,34)" fg:x="190" fg:w="1"/><text x="16.9021%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.09%)</title><rect x="16.6521%" y="357" width="0.0876%" height="15" fill="rgb(253,148,53)" fg:x="190" fg:w="1"/><text x="16.9021%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.09%)</title><rect x="16.6521%" y="341" width="0.0876%" height="15" fill="rgb(218,129,16)" fg:x="190" fg:w="1"/><text x="16.9021%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.09%)</title><rect x="16.6521%" y="325" width="0.0876%" height="15" fill="rgb(216,85,19)" fg:x="190" fg:w="1"/><text x="16.9021%" y="335.50"></text></g><g><title>`0x7FFA14612871 (1 samples, 0.09%)</title><rect x="16.6521%" y="309" width="0.0876%" height="15" fill="rgb(235,228,7)" fg:x="190" fg:w="1"/><text x="16.9021%" y="319.50"></text></g><g><title>`0x7FFA1460B3ED (1 samples, 0.09%)</title><rect x="16.6521%" y="293" width="0.0876%" height="15" fill="rgb(245,175,0)" fg:x="190" fg:w="1"/><text x="16.9021%" y="303.50"></text></g><g><title>`0x7FFA1464E5EF (1 samples, 0.09%)</title><rect x="16.6521%" y="277" width="0.0876%" height="15" fill="rgb(208,168,36)" fg:x="190" fg:w="1"/><text x="16.9021%" y="287.50"></text></g><g><title>`0x7FFA1473FAE4 (1 samples, 0.09%)</title><rect x="16.6521%" y="261" width="0.0876%" height="15" fill="rgb(246,171,24)" fg:x="190" fg:w="1"/><text x="16.9021%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::zeros (1 samples, 0.09%)</title><rect x="16.7397%" y="389" width="0.0876%" height="15" fill="rgb(215,142,24)" fg:x="191" fg:w="1"/><text x="16.9897%" y="399.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::zeros_generic(nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="16.7397%" y="373" width="0.0876%" height="15" fill="rgb(250,187,7)" fg:x="191" fg:w="1"/><text x="16.9897%" y="383.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::from_element_generic(nalgebra::base::dimension::Const (1 samples, 0.09%)</title><rect x="16.7397%" y="357" width="0.0876%" height="15" fill="rgb(228,66,33)" fg:x="191" fg:w="1"/><text x="16.9897%" y="367.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::from_iterator_generic(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, core::iter::adapters::take::Take&lt;core::iter::sources::repeat::Repeat (1 samples, 0.09%)</title><rect x="16.7397%" y="341" width="0.0876%" height="15" fill="rgb(234,215,21)" fg:x="191" fg:w="1"/><text x="16.9897%" y="351.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::default_allocator::impl$2::allocate_from_iterator(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, core::iter::adapters::take::Take&lt;core::iter::sources::repeat::Repeat (1 samples, 0.09%)</title><rect x="16.7397%" y="325" width="0.0876%" height="15" fill="rgb(222,191,20)" fg:x="191" fg:w="1"/><text x="16.9897%" y="335.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;::new(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, alloc::vec::Vec (1 samples, 0.09%)</title><rect x="16.7397%" y="309" width="0.0876%" height="15" fill="rgb(245,79,54)" fg:x="191" fg:w="1"/><text x="16.9897%" y="319.50"></text></g><g><title>`0x7FF9F5FB1A89 (1 samples, 0.09%)</title><rect x="16.7397%" y="293" width="0.0876%" height="15" fill="rgb(240,10,37)" fg:x="191" fg:w="1"/><text x="16.9897%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::split_func::split1 (2 samples, 0.18%)</title><rect x="56.0911%" y="293" width="0.1753%" height="15" fill="rgb(214,192,32)" fg:x="640" fg:w="2"/><text x="56.3411%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::updtf::updtf&lt;6&gt;(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (220 samples, 19.28%)</title><rect x="56.2664%" y="293" width="19.2813%" height="15" fill="rgb(209,36,54)" fg:x="642" fg:w="220"/><text x="56.5164%" y="303.50">Rust_MCS-26858cd3588a32c7.exe`..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::vertex::vert1 (38 samples, 3.33%)</title><rect x="75.5478%" y="293" width="3.3304%" height="15" fill="rgb(220,10,11)" fg:x="862" fg:w="38"/><text x="75.7978%" y="303.50">Rus..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::vertex::vert2 (25 samples, 2.19%)</title><rect x="78.8782%" y="293" width="2.1911%" height="15" fill="rgb(221,106,17)" fg:x="900" fg:w="25"/><text x="79.1282%" y="303.50">R..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$13::index(alloc::vec::Vec (17 samples, 1.49%)</title><rect x="81.0692%" y="293" width="1.4899%" height="15" fill="rgb(251,142,44)" fg:x="925" fg:w="17"/><text x="81.3192%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (17 samples, 1.49%)</title><rect x="81.0692%" y="277" width="1.4899%" height="15" fill="rgb(238,13,15)" fg:x="925" fg:w="17"/><text x="81.3192%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (17 samples, 1.49%)</title><rect x="81.0692%" y="261" width="1.4899%" height="15" fill="rgb(208,107,27)" fg:x="925" fg:w="17"/><text x="81.3192%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (78 samples, 6.84%)</title><rect x="82.5592%" y="293" width="6.8361%" height="15" fill="rgb(205,136,37)" fg:x="942" fg:w="78"/><text x="82.8092%" y="303.50">Rust_MCS-..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (20 samples, 1.75%)</title><rect x="87.6424%" y="277" width="1.7528%" height="15" fill="rgb(250,205,27)" fg:x="1000" fg:w="20"/><text x="87.8924%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (20 samples, 1.75%)</title><rect x="87.6424%" y="261" width="1.7528%" height="15" fill="rgb(210,80,43)" fg:x="1000" fg:w="20"/><text x="87.8924%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::unwrap_or(enum2$&lt;core::option::Option (10 samples, 0.88%)</title><rect x="89.3953%" y="293" width="0.8764%" height="15" fill="rgb(247,160,36)" fg:x="1020" fg:w="10"/><text x="89.6453%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;::fill (1 samples, 0.09%)</title><rect x="90.2717%" y="293" width="0.0876%" height="15" fill="rgb(234,13,49)" fg:x="1030" fg:w="1"/><text x="90.5217%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (68 samples, 5.96%)</title><rect x="90.3593%" y="293" width="5.9597%" height="15" fill="rgb(234,122,0)" fg:x="1031" fg:w="68"/><text x="90.6093%" y="303.50">Rust_MCS..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::get_unchecked(tuple$ (3 samples, 0.26%)</title><rect x="96.0561%" y="277" width="0.2629%" height="15" fill="rgb(207,146,38)" fg:x="1096" fg:w="3"/><text x="96.3061%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (3 samples, 0.26%)</title><rect x="96.0561%" y="261" width="0.2629%" height="15" fill="rgb(207,177,25)" fg:x="1096" fg:w="3"/><text x="96.3061%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (3 samples, 0.26%)</title><rect x="96.0561%" y="245" width="0.2629%" height="15" fill="rgb(211,178,42)" fg:x="1096" fg:w="3"/><text x="96.3061%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (3 samples, 0.26%)</title><rect x="96.0561%" y="229" width="0.2629%" height="15" fill="rgb(230,69,54)" fg:x="1096" fg:w="3"/><text x="96.3061%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (3 samples, 0.26%)</title><rect x="96.0561%" y="213" width="0.2629%" height="15" fill="rgb(214,135,41)" fg:x="1096" fg:w="3"/><text x="96.3061%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::const_ptr::impl$0::wrapping_add (3 samples, 0.26%)</title><rect x="96.0561%" y="197" width="0.2629%" height="15" fill="rgb(237,67,25)" fg:x="1096" fg:w="3"/><text x="96.3061%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::const_ptr::impl$0::wrapping_offset (3 samples, 0.26%)</title><rect x="96.0561%" y="181" width="0.2629%" height="15" fill="rgb(222,189,50)" fg:x="1096" fg:w="3"/><text x="96.3061%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (9 samples, 0.79%)</title><rect x="96.3190%" y="293" width="0.7888%" height="15" fill="rgb(245,148,34)" fg:x="1099" fg:w="9"/><text x="96.5690%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::get_unchecked(tuple$ (9 samples, 0.79%)</title><rect x="96.3190%" y="277" width="0.7888%" height="15" fill="rgb(222,29,6)" fg:x="1099" fg:w="9"/><text x="96.5690%" y="287.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (9 samples, 0.79%)</title><rect x="96.3190%" y="261" width="0.7888%" height="15" fill="rgb(221,189,43)" fg:x="1099" fg:w="9"/><text x="96.5690%" y="271.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (9 samples, 0.79%)</title><rect x="96.3190%" y="245" width="0.7888%" height="15" fill="rgb(207,36,27)" fg:x="1099" fg:w="9"/><text x="96.5690%" y="255.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (9 samples, 0.79%)</title><rect x="96.3190%" y="229" width="0.7888%" height="15" fill="rgb(217,90,24)" fg:x="1099" fg:w="9"/><text x="96.5690%" y="239.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (9 samples, 0.79%)</title><rect x="96.3190%" y="213" width="0.7888%" height="15" fill="rgb(224,66,35)" fg:x="1099" fg:w="9"/><text x="96.5690%" y="223.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::const_ptr::impl$0::wrapping_add (9 samples, 0.79%)</title><rect x="96.3190%" y="197" width="0.7888%" height="15" fill="rgb(221,13,50)" fg:x="1099" fg:w="9"/><text x="96.5690%" y="207.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::const_ptr::impl$0::wrapping_offset (9 samples, 0.79%)</title><rect x="96.3190%" y="181" width="0.7888%" height="15" fill="rgb(236,68,49)" fg:x="1099" fg:w="9"/><text x="96.5690%" y="191.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (1,114 samples, 97.63%)</title><rect x="0.6135%" y="805" width="97.6337%" height="15" fill="rgb(229,146,28)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="815.50">Rust_MCS-26858cd3588a32c7.exe`std::sys::pal::windows::thread::impl$0::new::thread_start</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::boxed::impl$48::call_once (1,114 samples, 97.63%)</title><rect x="0.6135%" y="789" width="97.6337%" height="15" fill="rgb(225,31,38)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="799.50">Rust_MCS-26858cd3588a32c7.exe`alloc::boxed::impl$48::call_once</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::boxed::impl$48::call_once (1,114 samples, 97.63%)</title><rect x="0.6135%" y="773" width="97.6337%" height="15" fill="rgb(250,208,3)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="783.50">Rust_MCS-26858cd3588a32c7.exe`alloc::boxed::impl$48::call_once</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::boxed::impl$8::drop (1,114 samples, 97.63%)</title><rect x="0.6135%" y="757" width="97.6337%" height="15" fill="rgb(246,54,23)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="767.50">Rust_MCS-26858cd3588a32c7.exe`alloc::boxed::impl$8::drop</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::alloc::layout::Layout::for_value_raw (1,114 samples, 97.63%)</title><rect x="0.6135%" y="741" width="97.6337%" height="15" fill="rgb(243,76,11)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="751.50">Rust_MCS-26858cd3588a32c7.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::mem::size_of_val_raw (1,114 samples, 97.63%)</title><rect x="0.6135%" y="725" width="97.6337%" height="15" fill="rgb(245,21,50)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="735.50">Rust_MCS-26858cd3588a32c7.exe`core::mem::size_of_val_raw</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt; (1,114 samples, 97.63%)</title><rect x="0.6135%" y="709" width="97.6337%" height="15" fill="rgb(228,9,43)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="719.50">Rust_MCS-26858cd3588a32c7.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;,..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::thread::impl$0::spawn_unchecked_::closure$1 (1,114 samples, 97.63%)</title><rect x="0.6135%" y="693" width="97.6337%" height="15" fill="rgb(208,100,47)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="703.50">Rust_MCS-26858cd3588a32c7.exe`std::thread::impl$0::spawn_unchecked_::closure$1</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::sync::impl$29::deref (1,114 samples, 97.63%)</title><rect x="0.6135%" y="677" width="97.6337%" height="15" fill="rgb(232,26,8)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="687.50">Rust_MCS-26858cd3588a32c7.exe`alloc::sync::impl$29::deref</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`alloc::sync::Arc::inner (1,114 samples, 97.63%)</title><rect x="0.6135%" y="661" width="97.6337%" height="15" fill="rgb(216,166,38)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="671.50">Rust_MCS-26858cd3588a32c7.exe`alloc::sync::Arc::inner</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::non_null::NonNull::as_ref (1,114 samples, 97.63%)</title><rect x="0.6135%" y="645" width="97.6337%" height="15" fill="rgb(251,202,51)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="655.50">Rust_MCS-26858cd3588a32c7.exe`core::ptr::non_null::NonNull::as_ref</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt; (1,114 samples, 97.63%)</title><rect x="0.6135%" y="629" width="97.6337%" height="15" fill="rgb(254,216,34)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="639.50">Rust_MCS-26858cd3588a32c7.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::run_test::closure$1 (1,114 samples, 97.63%)</title><rect x="0.6135%" y="613" width="97.6337%" height="15" fill="rgb(251,32,27)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="623.50">Rust_MCS-26858cd3588a32c7.exe`test::run_test::closure$1</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place (1,114 samples, 97.63%)</title><rect x="0.6135%" y="597" width="97.6337%" height="15" fill="rgb(208,127,28)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="607.50">Rust_MCS-26858cd3588a32c7.exe`core::ptr::drop_in_place</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::sync::mutex::impl$14::drop (1,114 samples, 97.63%)</title><rect x="0.6135%" y="581" width="97.6337%" height="15" fill="rgb(224,137,22)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="591.50">Rust_MCS-26858cd3588a32c7.exe`std::sync::mutex::impl$14::drop</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::sync::poison::Flag::done (1,114 samples, 97.63%)</title><rect x="0.6135%" y="565" width="97.6337%" height="15" fill="rgb(254,70,32)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="575.50">Rust_MCS-26858cd3588a32c7.exe`std::sync::poison::Flag::done</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::run_test::closure$0 (1,114 samples, 97.63%)</title><rect x="0.6135%" y="549" width="97.6337%" height="15" fill="rgb(229,75,37)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="559.50">Rust_MCS-26858cd3588a32c7.exe`test::run_test::closure$0</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::run_test_in_process (1,114 samples, 97.63%)</title><rect x="0.6135%" y="533" width="97.6337%" height="15" fill="rgb(252,64,23)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="543.50">Rust_MCS-26858cd3588a32c7.exe`test::run_test_in_process</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::panic::catch_unwind (1,114 samples, 97.63%)</title><rect x="0.6135%" y="517" width="97.6337%" height="15" fill="rgb(232,162,48)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="527.50">Rust_MCS-26858cd3588a32c7.exe`std::panic::catch_unwind</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::panicking::try (1,114 samples, 97.63%)</title><rect x="0.6135%" y="501" width="97.6337%" height="15" fill="rgb(246,160,12)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="511.50">Rust_MCS-26858cd3588a32c7.exe`std::panicking::try</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`std::panicking::try::do_call (1,114 samples, 97.63%)</title><rect x="0.6135%" y="485" width="97.6337%" height="15" fill="rgb(247,166,0)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="495.50">Rust_MCS-26858cd3588a32c7.exe`std::panicking::try::do_call</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`test::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt; (*)()&gt; (1,114 samples, 97.63%)</title><rect x="0.6135%" y="469" width="97.6337%" height="15" fill="rgb(249,219,21)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="479.50">Rust_MCS-26858cd3588a32c7.exe`test::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::ops::function::FnOnce::call_once&lt;Rust_MCS::tests::test_for_flamegraph_0::closure_env$0,tuple$&lt;&gt; &gt; (1,114 samples, 97.63%)</title><rect x="0.6135%" y="453" width="97.6337%" height="15" fill="rgb(205,209,3)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="463.50">Rust_MCS-26858cd3588a32c7.exe`core::ops::function::FnOnce::call_once&lt;Rust_MCS::tests::test_for_flamegraph_0::closure_env$0,tuple$&lt;&gt; &gt;</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::tests::test_for_flamegraph_0::closure$0 (1,114 samples, 97.63%)</title><rect x="0.6135%" y="437" width="97.6337%" height="15" fill="rgb(243,44,1)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="447.50">Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::tests::test_for_flamegraph_0::closure$0</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::tests::test_for_flamegraph_0 (1,114 samples, 97.63%)</title><rect x="0.6135%" y="421" width="97.6337%" height="15" fill="rgb(206,159,16)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="431.50">Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::tests::test_for_flamegraph_0</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs&lt;1000,6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, Rust_MCS::StopStruct*, Rust_MCS::IinitEnum*, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (1,114 samples, 97.63%)</title><rect x="0.6135%" y="405" width="97.6337%" height="15" fill="rgb(244,77,30)" fg:x="7" fg:w="1114"/><text x="0.8635%" y="415.50">Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs&lt;1000,6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalg..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;::min (929 samples, 81.42%)</title><rect x="16.8273%" y="389" width="81.4198%" height="15" fill="rgb(218,69,12)" fg:x="192" fg:w="929"/><text x="17.0773%" y="399.50">Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;::fold_with(nalgebra::base::min_max::impl$0::min::closure_env$0&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;, nalgebra::base::min_max::impl$0::min::closure_env$1&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (929 samples, 81.42%)</title><rect x="16.8273%" y="373" width="81.4198%" height="15" fill="rgb(212,87,7)" fg:x="192" fg:w="929"/><text x="17.0773%" y="383.50">Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::min_max::impl$0::min::closure$0(nalgebra::base::min_max::impl$0::min::closure_env$0&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;, enum2$&lt;core::option::Option&lt;ref$ (929 samples, 81.42%)</title><rect x="16.8273%" y="357" width="81.4198%" height="15" fill="rgb(245,114,25)" fg:x="192" fg:w="929"/><text x="17.0773%" y="367.50">Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::min_max::impl$0::min::closure$0(nalgebra::base::min_max::impl$0::min::closure_env$0&lt;usize..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`enum2$&lt;core::option::Option&lt;ref$&lt;usize&gt; &gt; &gt;::cloned(enum2$&lt;core::option::Option&lt;ref$ (929 samples, 81.42%)</title><rect x="16.8273%" y="341" width="81.4198%" height="15" fill="rgb(210,61,42)" fg:x="192" fg:w="929"/><text x="17.0773%" y="351.50">Rust_MCS-26858cd3588a32c7.exe`enum2$&lt;core::option::Option&lt;ref$&lt;usize&gt; &gt; &gt;::cloned(enum2$&lt;core::option::Option&lt;ref$</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`core::clone::impls::impl$5::clone (929 samples, 81.42%)</title><rect x="16.8273%" y="325" width="81.4198%" height="15" fill="rgb(211,52,33)" fg:x="192" fg:w="929"/><text x="17.0773%" y="335.50">Rust_MCS-26858cd3588a32c7.exe`core::clone::impls::impl$5::clone</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::vertex::vertex&lt;6&gt;(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (929 samples, 81.42%)</title><rect x="16.8273%" y="309" width="81.4198%" height="15" fill="rgb(234,58,33)" fg:x="192" fg:w="929"/><text x="17.0773%" y="319.50">Rust_MCS-26858cd3588a32c7.exe`Rust_MCS::mcs_utils::vertex::vertex&lt;6&gt;(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::b..</text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::ops::impl$2::index_mut(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (13 samples, 1.14%)</title><rect x="97.1078%" y="293" width="1.1394%" height="15" fill="rgb(220,115,36)" fg:x="1108" fg:w="13"/><text x="97.3578%" y="303.50"></text></g><g><title>Rust_MCS-26858cd3588a32c7.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, tuple$ (13 samples, 1.14%)</title><rect x="97.1078%" y="277" width="1.1394%" height="15" fill="rgb(243,153,54)" fg:x="1108" fg:w="13"/><text x="97.3578%" y="287.50"></text></g><g><title>`0x7FFA14631AD8 (1 samples, 0.09%)</title><rect x="98.2472%" y="805" width="0.0876%" height="15" fill="rgb(251,47,18)" fg:x="1121" fg:w="1"/><text x="98.4972%" y="815.50"></text></g><g><title>`0x7FFA146D5321 (1 samples, 0.09%)</title><rect x="98.2472%" y="789" width="0.0876%" height="15" fill="rgb(242,102,42)" fg:x="1121" fg:w="1"/><text x="98.4972%" y="799.50"></text></g><g><title>`0x7FFA14607776 (1 samples, 0.09%)</title><rect x="98.2472%" y="773" width="0.0876%" height="15" fill="rgb(234,31,38)" fg:x="1121" fg:w="1"/><text x="98.4972%" y="783.50"></text></g><g><title>`0x7FFA14607AFE (1 samples, 0.09%)</title><rect x="98.2472%" y="757" width="0.0876%" height="15" fill="rgb(221,117,51)" fg:x="1121" fg:w="1"/><text x="98.4972%" y="767.50"></text></g><g><title>`0x7FFA145EF8DD (1 samples, 0.09%)</title><rect x="98.2472%" y="741" width="0.0876%" height="15" fill="rgb(212,20,18)" fg:x="1121" fg:w="1"/><text x="98.4972%" y="751.50"></text></g><g><title>`0x7FFA146BFBCC (1,123 samples, 98.42%)</title><rect x="0.0000%" y="837" width="98.4224%" height="15" fill="rgb(245,133,36)" fg:x="0" fg:w="1123"/><text x="0.2500%" y="847.50">`0x7FFA146BFBCC</text></g><g><title>`0x7FFA1351E8D7 (1,123 samples, 98.42%)</title><rect x="0.0000%" y="821" width="98.4224%" height="15" fill="rgb(212,6,19)" fg:x="0" fg:w="1123"/><text x="0.2500%" y="831.50">`0x7FFA1351E8D7</text></g><g><title>`0x7FFA14632201 (1 samples, 0.09%)</title><rect x="98.3348%" y="805" width="0.0876%" height="15" fill="rgb(218,1,36)" fg:x="1122" fg:w="1"/><text x="98.5848%" y="815.50"></text></g><g><title>`0x7FFA14630857 (1 samples, 0.09%)</title><rect x="98.3348%" y="789" width="0.0876%" height="15" fill="rgb(246,84,54)" fg:x="1122" fg:w="1"/><text x="98.5848%" y="799.50"></text></g><g><title>`0x7FFA145E428A (1 samples, 0.09%)</title><rect x="98.3348%" y="773" width="0.0876%" height="15" fill="rgb(242,110,6)" fg:x="1122" fg:w="1"/><text x="98.5848%" y="783.50"></text></g><g><title>`0x7FFA145E465C (1 samples, 0.09%)</title><rect x="98.3348%" y="757" width="0.0876%" height="15" fill="rgb(214,47,5)" fg:x="1122" fg:w="1"/><text x="98.5848%" y="767.50"></text></g><g><title>`0x7FFA145E5947 (1 samples, 0.09%)</title><rect x="98.3348%" y="741" width="0.0876%" height="15" fill="rgb(218,159,25)" fg:x="1122" fg:w="1"/><text x="98.5848%" y="751.50"></text></g><g><title>`0x7FFA1473FD84 (1 samples, 0.09%)</title><rect x="98.3348%" y="725" width="0.0876%" height="15" fill="rgb(215,211,28)" fg:x="1122" fg:w="1"/><text x="98.5848%" y="735.50"></text></g><g><title>`0x7FFA146D2330 (1 samples, 0.09%)</title><rect x="98.4224%" y="837" width="0.0876%" height="15" fill="rgb(238,59,32)" fg:x="1123" fg:w="1"/><text x="98.6724%" y="847.50"></text></g><g><title>`0x7FFA146D237F (1 samples, 0.09%)</title><rect x="98.5101%" y="821" width="0.0876%" height="15" fill="rgb(226,82,3)" fg:x="1124" fg:w="1"/><text x="98.7601%" y="831.50"></text></g><g><title>`0x7FFA146D240A (1 samples, 0.09%)</title><rect x="98.5101%" y="805" width="0.0876%" height="15" fill="rgb(240,164,32)" fg:x="1124" fg:w="1"/><text x="98.7601%" y="815.50"></text></g><g><title>`0x7FFA1468CA46 (1 samples, 0.09%)</title><rect x="98.5977%" y="789" width="0.0876%" height="15" fill="rgb(232,46,7)" fg:x="1125" fg:w="1"/><text x="98.8477%" y="799.50"></text></g><g><title>`0x7FFA146D28E5 (1 samples, 0.09%)</title><rect x="98.5977%" y="773" width="0.0876%" height="15" fill="rgb(229,129,53)" fg:x="1125" fg:w="1"/><text x="98.8477%" y="783.50"></text></g><g><title>`0x7FFA145F89B1 (1 samples, 0.09%)</title><rect x="98.5977%" y="757" width="0.0876%" height="15" fill="rgb(234,188,29)" fg:x="1125" fg:w="1"/><text x="98.8477%" y="767.50"></text></g><g><title>`0x7FFA145F8AA4 (1 samples, 0.09%)</title><rect x="98.5977%" y="741" width="0.0876%" height="15" fill="rgb(246,141,4)" fg:x="1125" fg:w="1"/><text x="98.8477%" y="751.50"></text></g><g><title>`0x7FFA1464B475 (1 samples, 0.09%)</title><rect x="98.5977%" y="725" width="0.0876%" height="15" fill="rgb(229,23,39)" fg:x="1125" fg:w="1"/><text x="98.8477%" y="735.50"></text></g><g><title>`0x7FFA1468CC66 (1 samples, 0.09%)</title><rect x="98.6854%" y="789" width="0.0876%" height="15" fill="rgb(206,12,3)" fg:x="1126" fg:w="1"/><text x="98.9354%" y="799.50"></text></g><g><title>`0x7FFA1467EB83 (1 samples, 0.09%)</title><rect x="98.6854%" y="773" width="0.0876%" height="15" fill="rgb(252,226,20)" fg:x="1126" fg:w="1"/><text x="98.9354%" y="783.50"></text></g><g><title>`0x7FFA1467EA1C (1 samples, 0.09%)</title><rect x="98.6854%" y="757" width="0.0876%" height="15" fill="rgb(216,123,35)" fg:x="1126" fg:w="1"/><text x="98.9354%" y="767.50"></text></g><g><title>`0x7FFA1468D8FA (1 samples, 0.09%)</title><rect x="98.7730%" y="789" width="0.0876%" height="15" fill="rgb(212,68,40)" fg:x="1127" fg:w="1"/><text x="99.0230%" y="799.50"></text></g><g><title>`0x7FFA14651DB5 (1 samples, 0.09%)</title><rect x="98.7730%" y="773" width="0.0876%" height="15" fill="rgb(254,125,32)" fg:x="1127" fg:w="1"/><text x="99.0230%" y="783.50"></text></g><g><title>`0x7FFA14652525 (1 samples, 0.09%)</title><rect x="98.7730%" y="757" width="0.0876%" height="15" fill="rgb(253,97,22)" fg:x="1127" fg:w="1"/><text x="99.0230%" y="767.50"></text></g><g><title>`0x7FFA1462C5FE (1 samples, 0.09%)</title><rect x="98.8606%" y="661" width="0.0876%" height="15" fill="rgb(241,101,14)" fg:x="1128" fg:w="1"/><text x="99.1106%" y="671.50"></text></g><g><title>`0x7FFA1462EC63 (1 samples, 0.09%)</title><rect x="98.8606%" y="645" width="0.0876%" height="15" fill="rgb(238,103,29)" fg:x="1128" fg:w="1"/><text x="99.1106%" y="655.50"></text></g><g><title>`0x7FFA1462B032 (2 samples, 0.18%)</title><rect x="98.8606%" y="725" width="0.1753%" height="15" fill="rgb(233,195,47)" fg:x="1128" fg:w="2"/><text x="99.1106%" y="735.50"></text></g><g><title>`0x7FFA146069A4 (2 samples, 0.18%)</title><rect x="98.8606%" y="709" width="0.1753%" height="15" fill="rgb(246,218,30)" fg:x="1128" fg:w="2"/><text x="99.1106%" y="719.50"></text></g><g><title>`0x7FFA145E70E1 (2 samples, 0.18%)</title><rect x="98.8606%" y="693" width="0.1753%" height="15" fill="rgb(219,145,47)" fg:x="1128" fg:w="2"/><text x="99.1106%" y="703.50"></text></g><g><title>`0x7FFA145E8999 (2 samples, 0.18%)</title><rect x="98.8606%" y="677" width="0.1753%" height="15" fill="rgb(243,12,26)" fg:x="1128" fg:w="2"/><text x="99.1106%" y="687.50"></text></g><g><title>`0x7FFA1462C772 (1 samples, 0.09%)</title><rect x="98.9483%" y="661" width="0.0876%" height="15" fill="rgb(214,87,16)" fg:x="1129" fg:w="1"/><text x="99.1983%" y="671.50"></text></g><g><title>`0x7FFA1463458F (1 samples, 0.09%)</title><rect x="98.9483%" y="645" width="0.0876%" height="15" fill="rgb(208,99,42)" fg:x="1129" fg:w="1"/><text x="99.1983%" y="655.50"></text></g><g><title>`0x7FFA121A6DAD (1 samples, 0.09%)</title><rect x="99.0359%" y="629" width="0.0876%" height="15" fill="rgb(253,99,2)" fg:x="1130" fg:w="1"/><text x="99.2859%" y="639.50"></text></g><g><title>`0x7FFA120C85BD (1 samples, 0.09%)</title><rect x="99.0359%" y="613" width="0.0876%" height="15" fill="rgb(220,168,23)" fg:x="1130" fg:w="1"/><text x="99.2859%" y="623.50"></text></g><g><title>`0x7FFA12186B4F (1 samples, 0.09%)</title><rect x="99.0359%" y="597" width="0.0876%" height="15" fill="rgb(242,38,24)" fg:x="1130" fg:w="1"/><text x="99.2859%" y="607.50"></text></g><g><title>`0x7FFA146CE3CC (1 samples, 0.09%)</title><rect x="99.0359%" y="581" width="0.0876%" height="15" fill="rgb(225,182,9)" fg:x="1130" fg:w="1"/><text x="99.2859%" y="591.50"></text></g><g><title>`0x7FFA146CE502 (1 samples, 0.09%)</title><rect x="99.0359%" y="565" width="0.0876%" height="15" fill="rgb(243,178,37)" fg:x="1130" fg:w="1"/><text x="99.2859%" y="575.50"></text></g><g><title>`0x7FFA147431D4 (1 samples, 0.09%)</title><rect x="99.0359%" y="549" width="0.0876%" height="15" fill="rgb(232,139,19)" fg:x="1130" fg:w="1"/><text x="99.2859%" y="559.50"></text></g><g><title>`0x7FFA146AF680 (4 samples, 0.35%)</title><rect x="98.8606%" y="773" width="0.3506%" height="15" fill="rgb(225,201,24)" fg:x="1128" fg:w="4"/><text x="99.1106%" y="783.50"></text></g><g><title>`0x7FFA146366A0 (4 samples, 0.35%)</title><rect x="98.8606%" y="757" width="0.3506%" height="15" fill="rgb(221,47,46)" fg:x="1128" fg:w="4"/><text x="99.1106%" y="767.50"></text></g><g><title>`0x7FFA1462ACD0 (4 samples, 0.35%)</title><rect x="98.8606%" y="741" width="0.3506%" height="15" fill="rgb(249,23,13)" fg:x="1128" fg:w="4"/><text x="99.1106%" y="751.50"></text></g><g><title>`0x7FFA1462B0C4 (2 samples, 0.18%)</title><rect x="99.0359%" y="725" width="0.1753%" height="15" fill="rgb(219,9,5)" fg:x="1130" fg:w="2"/><text x="99.2859%" y="735.50"></text></g><g><title>`0x7FFA1468AD83 (2 samples, 0.18%)</title><rect x="99.0359%" y="709" width="0.1753%" height="15" fill="rgb(254,171,16)" fg:x="1130" fg:w="2"/><text x="99.2859%" y="719.50"></text></g><g><title>`0x7FFA1468B0C6 (2 samples, 0.18%)</title><rect x="99.0359%" y="693" width="0.1753%" height="15" fill="rgb(230,171,20)" fg:x="1130" fg:w="2"/><text x="99.2859%" y="703.50"></text></g><g><title>`0x7FFA1468B09A (2 samples, 0.18%)</title><rect x="99.0359%" y="677" width="0.1753%" height="15" fill="rgb(210,71,41)" fg:x="1130" fg:w="2"/><text x="99.2859%" y="687.50"></text></g><g><title>`0x7FFA145FCC0C (2 samples, 0.18%)</title><rect x="99.0359%" y="661" width="0.1753%" height="15" fill="rgb(206,173,20)" fg:x="1130" fg:w="2"/><text x="99.2859%" y="671.50"></text></g><g><title>`0x7FFA145FD860 (2 samples, 0.18%)</title><rect x="99.0359%" y="645" width="0.1753%" height="15" fill="rgb(233,88,34)" fg:x="1130" fg:w="2"/><text x="99.2859%" y="655.50"></text></g><g><title>`0x7FFA121A6E11 (1 samples, 0.09%)</title><rect x="99.1236%" y="629" width="0.0876%" height="15" fill="rgb(223,209,46)" fg:x="1131" fg:w="1"/><text x="99.3736%" y="639.50"></text></g><g><title>`0x7FFA121618CA (1 samples, 0.09%)</title><rect x="99.1236%" y="613" width="0.0876%" height="15" fill="rgb(250,43,18)" fg:x="1131" fg:w="1"/><text x="99.3736%" y="623.50"></text></g><g><title>`0x7FFA1216209C (1 samples, 0.09%)</title><rect x="99.1236%" y="597" width="0.0876%" height="15" fill="rgb(208,13,10)" fg:x="1131" fg:w="1"/><text x="99.3736%" y="607.50"></text></g><g><title>`0x7FFA146CE3CC (1 samples, 0.09%)</title><rect x="99.1236%" y="581" width="0.0876%" height="15" fill="rgb(212,200,36)" fg:x="1131" fg:w="1"/><text x="99.3736%" y="591.50"></text></g><g><title>`0x7FFA146CE502 (1 samples, 0.09%)</title><rect x="99.1236%" y="565" width="0.0876%" height="15" fill="rgb(225,90,30)" fg:x="1131" fg:w="1"/><text x="99.3736%" y="575.50"></text></g><g><title>`0x7FFA147431D4 (1 samples, 0.09%)</title><rect x="99.1236%" y="549" width="0.0876%" height="15" fill="rgb(236,182,39)" fg:x="1131" fg:w="1"/><text x="99.3736%" y="559.50"></text></g><g><title>`0x7FFA1468D9C5 (5 samples, 0.44%)</title><rect x="98.8606%" y="789" width="0.4382%" height="15" fill="rgb(212,144,35)" fg:x="1128" fg:w="5"/><text x="99.1106%" y="799.50"></text></g><g><title>`0x7FFA146AF6F5 (1 samples, 0.09%)</title><rect x="99.2112%" y="773" width="0.0876%" height="15" fill="rgb(228,63,44)" fg:x="1132" fg:w="1"/><text x="99.4612%" y="783.50"></text></g><g><title>`0x7FFA145EA118 (1 samples, 0.09%)</title><rect x="99.2112%" y="757" width="0.0876%" height="15" fill="rgb(228,109,6)" fg:x="1132" fg:w="1"/><text x="99.4612%" y="767.50"></text></g><g><title>`0x7FFA145EAA7B (1 samples, 0.09%)</title><rect x="99.2112%" y="741" width="0.0876%" height="15" fill="rgb(238,117,24)" fg:x="1132" fg:w="1"/><text x="99.4612%" y="751.50"></text></g><g><title>`0x7FFA145EAB90 (1 samples, 0.09%)</title><rect x="99.2112%" y="725" width="0.0876%" height="15" fill="rgb(242,26,26)" fg:x="1132" fg:w="1"/><text x="99.4612%" y="735.50"></text></g><g><title>`0x7FFA145ECCB2 (1 samples, 0.09%)</title><rect x="99.2112%" y="709" width="0.0876%" height="15" fill="rgb(221,92,48)" fg:x="1132" fg:w="1"/><text x="99.4612%" y="719.50"></text></g><g><title>`0x7FFA146353E3 (1 samples, 0.09%)</title><rect x="99.2112%" y="693" width="0.0876%" height="15" fill="rgb(209,209,32)" fg:x="1132" fg:w="1"/><text x="99.4612%" y="703.50"></text></g><g><title>`0x7FFA1462C313 (1 samples, 0.09%)</title><rect x="99.2989%" y="773" width="0.0876%" height="15" fill="rgb(221,70,22)" fg:x="1133" fg:w="1"/><text x="99.5489%" y="783.50"></text></g><g><title>`0x7FFA146CFDD3 (1 samples, 0.09%)</title><rect x="99.2989%" y="757" width="0.0876%" height="15" fill="rgb(248,145,5)" fg:x="1133" fg:w="1"/><text x="99.5489%" y="767.50"></text></g><g><title>`0x7FFA13515B2F (1 samples, 0.09%)</title><rect x="99.2989%" y="741" width="0.0876%" height="15" fill="rgb(226,116,26)" fg:x="1133" fg:w="1"/><text x="99.5489%" y="751.50"></text></g><g><title>`0x7FFA13515C1B (1 samples, 0.09%)</title><rect x="99.2989%" y="725" width="0.0876%" height="15" fill="rgb(244,5,17)" fg:x="1133" fg:w="1"/><text x="99.5489%" y="735.50"></text></g><g><title>`0x7FFA12121C91 (1 samples, 0.09%)</title><rect x="99.2989%" y="709" width="0.0876%" height="15" fill="rgb(252,159,33)" fg:x="1133" fg:w="1"/><text x="99.5489%" y="719.50"></text></g><g><title>`0x7FFA1465CEB5 (1 samples, 0.09%)</title><rect x="99.2989%" y="693" width="0.0876%" height="15" fill="rgb(206,71,0)" fg:x="1133" fg:w="1"/><text x="99.5489%" y="703.50"></text></g><g><title>`0x7FFA13523709 (1 samples, 0.09%)</title><rect x="99.2989%" y="677" width="0.0876%" height="15" fill="rgb(233,118,54)" fg:x="1133" fg:w="1"/><text x="99.5489%" y="687.50"></text></g><g><title>`0x7FFA13523785 (1 samples, 0.09%)</title><rect x="99.2989%" y="661" width="0.0876%" height="15" fill="rgb(234,83,48)" fg:x="1133" fg:w="1"/><text x="99.5489%" y="671.50"></text></g><g><title>`0x7FFA1468DAB9 (2 samples, 0.18%)</title><rect x="99.2989%" y="789" width="0.1753%" height="15" fill="rgb(228,3,54)" fg:x="1133" fg:w="2"/><text x="99.5489%" y="799.50"></text></g><g><title>`0x7FFA1462C5FE (1 samples, 0.09%)</title><rect x="99.3865%" y="773" width="0.0876%" height="15" fill="rgb(226,155,13)" fg:x="1134" fg:w="1"/><text x="99.6365%" y="783.50"></text></g><g><title>`0x7FFA1462E3BC (1 samples, 0.09%)</title><rect x="99.3865%" y="757" width="0.0876%" height="15" fill="rgb(241,28,37)" fg:x="1134" fg:w="1"/><text x="99.6365%" y="767.50"></text></g><g><title>`0x7FFA145E70E1 (1 samples, 0.09%)</title><rect x="99.3865%" y="741" width="0.0876%" height="15" fill="rgb(233,93,10)" fg:x="1134" fg:w="1"/><text x="99.6365%" y="751.50"></text></g><g><title>`0x7FFA145E884E (1 samples, 0.09%)</title><rect x="99.3865%" y="725" width="0.0876%" height="15" fill="rgb(225,113,19)" fg:x="1134" fg:w="1"/><text x="99.6365%" y="735.50"></text></g><g><title>`0x7FFA145E8D1A (1 samples, 0.09%)</title><rect x="99.3865%" y="709" width="0.0876%" height="15" fill="rgb(241,2,18)" fg:x="1134" fg:w="1"/><text x="99.6365%" y="719.50"></text></g><g><title>`0x7FFA1473FC24 (1 samples, 0.09%)</title><rect x="99.3865%" y="693" width="0.0876%" height="15" fill="rgb(228,207,21)" fg:x="1134" fg:w="1"/><text x="99.6365%" y="703.50"></text></g><g><title>`0x7FFA145E5947 (1 samples, 0.09%)</title><rect x="99.4741%" y="725" width="0.0876%" height="15" fill="rgb(213,211,35)" fg:x="1135" fg:w="1"/><text x="99.7241%" y="735.50"></text></g><g><title>`0x7FFA1473FD84 (1 samples, 0.09%)</title><rect x="99.4741%" y="709" width="0.0876%" height="15" fill="rgb(209,83,10)" fg:x="1135" fg:w="1"/><text x="99.7241%" y="719.50"></text></g><g><title>`0x7FFA145E428A (2 samples, 0.18%)</title><rect x="99.4741%" y="757" width="0.1753%" height="15" fill="rgb(209,164,1)" fg:x="1135" fg:w="2"/><text x="99.7241%" y="767.50"></text></g><g><title>`0x7FFA145E465C (2 samples, 0.18%)</title><rect x="99.4741%" y="741" width="0.1753%" height="15" fill="rgb(213,184,43)" fg:x="1135" fg:w="2"/><text x="99.7241%" y="751.50"></text></g><g><title>`0x7FFA145E5A9C (1 samples, 0.09%)</title><rect x="99.5618%" y="725" width="0.0876%" height="15" fill="rgb(231,61,34)" fg:x="1136" fg:w="1"/><text x="99.8118%" y="735.50"></text></g><g><title>`0x7FFA145E8999 (1 samples, 0.09%)</title><rect x="99.5618%" y="709" width="0.0876%" height="15" fill="rgb(235,75,3)" fg:x="1136" fg:w="1"/><text x="99.8118%" y="719.50"></text></g><g><title>`0x7FFA1462C5FE (1 samples, 0.09%)</title><rect x="99.5618%" y="693" width="0.0876%" height="15" fill="rgb(220,106,47)" fg:x="1136" fg:w="1"/><text x="99.8118%" y="703.50"></text></g><g><title>`0x7FFA1462E3BC (1 samples, 0.09%)</title><rect x="99.5618%" y="677" width="0.0876%" height="15" fill="rgb(210,196,33)" fg:x="1136" fg:w="1"/><text x="99.8118%" y="687.50"></text></g><g><title>`0x7FFA145E70E1 (1 samples, 0.09%)</title><rect x="99.5618%" y="661" width="0.0876%" height="15" fill="rgb(229,154,42)" fg:x="1136" fg:w="1"/><text x="99.8118%" y="671.50"></text></g><g><title>`0x7FFA145E8999 (1 samples, 0.09%)</title><rect x="99.5618%" y="645" width="0.0876%" height="15" fill="rgb(228,114,26)" fg:x="1136" fg:w="1"/><text x="99.8118%" y="655.50"></text></g><g><title>`0x7FFA1462C3D8 (1 samples, 0.09%)</title><rect x="99.5618%" y="629" width="0.0876%" height="15" fill="rgb(208,144,1)" fg:x="1136" fg:w="1"/><text x="99.8118%" y="639.50"></text></g><g><title>`0x7FFA1468DAC0 (3 samples, 0.26%)</title><rect x="99.4741%" y="789" width="0.2629%" height="15" fill="rgb(239,112,37)" fg:x="1135" fg:w="3"/><text x="99.7241%" y="799.50"></text></g><g><title>`0x7FFA145E41D7 (3 samples, 0.26%)</title><rect x="99.4741%" y="773" width="0.2629%" height="15" fill="rgb(210,96,50)" fg:x="1135" fg:w="3"/><text x="99.7241%" y="783.50"></text></g><g><title>`0x7FFA145E4351 (1 samples, 0.09%)</title><rect x="99.6494%" y="757" width="0.0876%" height="15" fill="rgb(222,178,2)" fg:x="1137" fg:w="1"/><text x="99.8994%" y="767.50"></text></g><g><title>`0x7FFA146349B6 (1 samples, 0.09%)</title><rect x="99.6494%" y="741" width="0.0876%" height="15" fill="rgb(226,74,18)" fg:x="1137" fg:w="1"/><text x="99.8994%" y="751.50"></text></g><g><title>`0x7FFA1468B09A (1 samples, 0.09%)</title><rect x="99.7371%" y="757" width="0.0876%" height="15" fill="rgb(225,67,54)" fg:x="1138" fg:w="1"/><text x="99.9871%" y="767.50"></text></g><g><title>`0x7FFA145FCC0C (1 samples, 0.09%)</title><rect x="99.7371%" y="741" width="0.0876%" height="15" fill="rgb(251,92,32)" fg:x="1138" fg:w="1"/><text x="99.9871%" y="751.50"></text></g><g><title>`0x7FFA145FD860 (1 samples, 0.09%)</title><rect x="99.7371%" y="725" width="0.0876%" height="15" fill="rgb(228,149,22)" fg:x="1138" fg:w="1"/><text x="99.9871%" y="735.50"></text></g><g><title>`0x7FFA11B78562 (1 samples, 0.09%)</title><rect x="99.7371%" y="709" width="0.0876%" height="15" fill="rgb(243,54,13)" fg:x="1138" fg:w="1"/><text x="99.9871%" y="719.50"></text></g><g><title>`0x7FFA11B788E8 (1 samples, 0.09%)</title><rect x="99.7371%" y="693" width="0.0876%" height="15" fill="rgb(243,180,28)" fg:x="1138" fg:w="1"/><text x="99.9871%" y="703.50"></text></g><g><title>`0x7FFA11B7D5FF (1 samples, 0.09%)</title><rect x="99.7371%" y="677" width="0.0876%" height="15" fill="rgb(208,167,24)" fg:x="1138" fg:w="1"/><text x="99.9871%" y="687.50"></text></g><g><title>`0x7FFA120A8EDC (1 samples, 0.09%)</title><rect x="99.7371%" y="661" width="0.0876%" height="15" fill="rgb(245,73,45)" fg:x="1138" fg:w="1"/><text x="99.9871%" y="671.50"></text></g><g><title>`0x7FFA120A902C (1 samples, 0.09%)</title><rect x="99.7371%" y="645" width="0.0876%" height="15" fill="rgb(237,203,48)" fg:x="1138" fg:w="1"/><text x="99.9871%" y="655.50"></text></g><g><title>`0x7FFA120A9965 (1 samples, 0.09%)</title><rect x="99.7371%" y="629" width="0.0876%" height="15" fill="rgb(211,197,16)" fg:x="1138" fg:w="1"/><text x="99.9871%" y="639.50"></text></g><g><title>`0x7FFA14741C74 (1 samples, 0.09%)</title><rect x="99.7371%" y="613" width="0.0876%" height="15" fill="rgb(243,99,51)" fg:x="1138" fg:w="1"/><text x="99.9871%" y="623.50"></text></g><g><title>`0x7FFA1468DBC9 (2 samples, 0.18%)</title><rect x="99.7371%" y="789" width="0.1753%" height="15" fill="rgb(215,123,29)" fg:x="1138" fg:w="2"/><text x="99.9871%" y="799.50"></text></g><g><title>`0x7FFA1468B0C6 (2 samples, 0.18%)</title><rect x="99.7371%" y="773" width="0.1753%" height="15" fill="rgb(239,186,37)" fg:x="1138" fg:w="2"/><text x="99.9871%" y="783.50"></text></g><g><title>`0x7FFA1468B0C6 (1 samples, 0.09%)</title><rect x="99.8247%" y="757" width="0.0876%" height="15" fill="rgb(252,136,39)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="767.50"></text></g><g><title>`0x7FFA1468B09A (1 samples, 0.09%)</title><rect x="99.8247%" y="741" width="0.0876%" height="15" fill="rgb(223,213,32)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="751.50"></text></g><g><title>`0x7FFA145FCC0C (1 samples, 0.09%)</title><rect x="99.8247%" y="725" width="0.0876%" height="15" fill="rgb(233,115,5)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="735.50"></text></g><g><title>`0x7FFA145FD860 (1 samples, 0.09%)</title><rect x="99.8247%" y="709" width="0.0876%" height="15" fill="rgb(207,226,44)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="719.50"></text></g><g><title>`0x7FFA11C25056 (1 samples, 0.09%)</title><rect x="99.8247%" y="693" width="0.0876%" height="15" fill="rgb(208,126,0)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="703.50"></text></g><g><title>`0x7FFA11C7C576 (1 samples, 0.09%)</title><rect x="99.8247%" y="677" width="0.0876%" height="15" fill="rgb(244,66,21)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="687.50"></text></g><g><title>`0x7FFA11C44AD6 (1 samples, 0.09%)</title><rect x="99.8247%" y="661" width="0.0876%" height="15" fill="rgb(222,97,12)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="671.50"></text></g><g><title>`0x7FFA11C44C66 (1 samples, 0.09%)</title><rect x="99.8247%" y="645" width="0.0876%" height="15" fill="rgb(219,213,19)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="655.50"></text></g><g><title>`0x7FFA11C451AA (1 samples, 0.09%)</title><rect x="99.8247%" y="629" width="0.0876%" height="15" fill="rgb(252,169,30)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="639.50"></text></g><g><title>`0x7FFA11C45331 (1 samples, 0.09%)</title><rect x="99.8247%" y="613" width="0.0876%" height="15" fill="rgb(206,32,51)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="623.50"></text></g><g><title>`0x7FFA11C446A6 (1 samples, 0.09%)</title><rect x="99.8247%" y="597" width="0.0876%" height="15" fill="rgb(250,172,42)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="607.50"></text></g><g><title>`0x7FFA120CA880 (1 samples, 0.09%)</title><rect x="99.8247%" y="581" width="0.0876%" height="15" fill="rgb(209,34,43)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="591.50"></text></g><g><title>`0x7FFA120CBB6C (1 samples, 0.09%)</title><rect x="99.8247%" y="565" width="0.0876%" height="15" fill="rgb(223,11,35)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="575.50"></text></g><g><title>`0x7FFA146940D5 (1 samples, 0.09%)</title><rect x="99.8247%" y="549" width="0.0876%" height="15" fill="rgb(251,219,26)" fg:x="1139" fg:w="1"/><text x="100.0747%" y="559.50"></text></g><g><title>all (1,141 samples, 100%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(231,119,3)" fg:x="0" fg:w="1141"/><text x="0.2500%" y="863.50"></text></g><g><title>`0x7FFA146D233E (17 samples, 1.49%)</title><rect x="98.5101%" y="837" width="1.4899%" height="15" fill="rgb(216,97,11)" fg:x="1124" fg:w="17"/><text x="98.7601%" y="847.50"></text></g><g><title>`0x7FFA146FEB13 (16 samples, 1.40%)</title><rect x="98.5977%" y="821" width="1.4023%" height="15" fill="rgb(223,59,9)" fg:x="1125" fg:w="16"/><text x="98.8477%" y="831.50"></text></g><g><title>`0x7FFA1468BDC0 (16 samples, 1.40%)</title><rect x="98.5977%" y="805" width="1.4023%" height="15" fill="rgb(233,93,31)" fg:x="1125" fg:w="16"/><text x="98.8477%" y="815.50"></text></g><g><title>`0x7FFA1468DC38 (1 samples, 0.09%)</title><rect x="99.9124%" y="789" width="0.0876%" height="15" fill="rgb(239,81,33)" fg:x="1140" fg:w="1"/><text x="100.1624%" y="799.50"></text></g><g><title>`0x7FFA146DD53D (1 samples, 0.09%)</title><rect x="99.9124%" y="773" width="0.0876%" height="15" fill="rgb(213,120,34)" fg:x="1140" fg:w="1"/><text x="100.1624%" y="783.50"></text></g><g><title>`0x7FFA146DD5ED (1 samples, 0.09%)</title><rect x="99.9124%" y="757" width="0.0876%" height="15" fill="rgb(243,49,53)" fg:x="1140" fg:w="1"/><text x="100.1624%" y="767.50"></text></g><g><title>`0x7FFA1473FA04 (1 samples, 0.09%)</title><rect x="99.9124%" y="741" width="0.0876%" height="15" fill="rgb(247,216,33)" fg:x="1140" fg:w="1"/><text x="100.1624%" y="751.50"></text></g></svg></svg>