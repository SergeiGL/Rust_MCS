<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="27392"><g><title>Rust_MCS-a0646e080707cc03.exe`invoke_main() (5 samples, 0.02%)</title><rect x="0.0000%" y="821" width="0.0183%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="831.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`main (5 samples, 0.02%)</title><rect x="0.0000%" y="805" width="0.0183%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="815.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::rt::lang_start_internal (5 samples, 0.02%)</title><rect x="0.0000%" y="789" width="0.0183%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="799.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::panic::catch_unwind (5 samples, 0.02%)</title><rect x="0.0000%" y="773" width="0.0183%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="783.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::panicking::try (5 samples, 0.02%)</title><rect x="0.0000%" y="757" width="0.0183%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="767.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::panicking::try::do_call (5 samples, 0.02%)</title><rect x="0.0000%" y="741" width="0.0183%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="751.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::rt::lang_start_internal::closure$1 (4 samples, 0.01%)</title><rect x="0.0037%" y="725" width="0.0146%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="4"/><text x="0.2537%" y="735.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="0.0037%" y="709" width="0.0146%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="4"/><text x="0.2537%" y="719.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (4 samples, 0.01%)</title><rect x="0.0037%" y="693" width="0.0146%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="4"/><text x="0.2537%" y="703.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (4 samples, 0.01%)</title><rect x="0.0037%" y="677" width="0.0146%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="4"/><text x="0.2537%" y="687.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`test::test_main_static (4 samples, 0.01%)</title><rect x="0.0037%" y="661" width="0.0146%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="4"/><text x="0.2537%" y="671.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="0.0073%" y="645" width="0.0110%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="3"/><text x="0.2573%" y="655.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::impl$25::drop (3 samples, 0.01%)</title><rect x="0.0073%" y="629" width="0.0110%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="3"/><text x="0.2573%" y="639.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="0.0073%" y="613" width="0.0110%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="3"/><text x="0.2573%" y="623.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`test::test_main (3 samples, 0.01%)</title><rect x="0.0073%" y="597" width="0.0110%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="3"/><text x="0.2573%" y="607.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`test::console::run_tests_console (3 samples, 0.01%)</title><rect x="0.0073%" y="581" width="0.0110%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="3"/><text x="0.2573%" y="591.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`test::run_tests (3 samples, 0.01%)</title><rect x="0.0073%" y="565" width="0.0110%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="3"/><text x="0.2573%" y="575.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`__scrt_common_main_seh() (9 samples, 0.03%)</title><rect x="0.0000%" y="837" width="0.0329%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="9"/><text x="0.2500%" y="847.50"></text></g><g><title>`0x7FFCD75C0046 (4 samples, 0.01%)</title><rect x="0.0183%" y="821" width="0.0146%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="4"/><text x="0.2683%" y="831.50"></text></g><g><title>`0x7FFCD75A553D (4 samples, 0.01%)</title><rect x="0.0183%" y="805" width="0.0146%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="4"/><text x="0.2683%" y="815.50"></text></g><g><title>`0x7FFCD753423B (4 samples, 0.01%)</title><rect x="0.0183%" y="789" width="0.0146%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="4"/><text x="0.2683%" y="799.50"></text></g><g><title>`0x7FFCD7596225 (4 samples, 0.01%)</title><rect x="0.0183%" y="773" width="0.0146%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="4"/><text x="0.2683%" y="783.50"></text></g><g><title>`0x7FFCD70A2446 (4 samples, 0.01%)</title><rect x="0.0183%" y="757" width="0.0146%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="4"/><text x="0.2683%" y="767.50"></text></g><g><title>`0x7FFCD99F9B30 (4 samples, 0.01%)</title><rect x="0.0183%" y="741" width="0.0146%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="4"/><text x="0.2683%" y="751.50"></text></g><g><title>`0x7FFCD9A35CA0 (4 samples, 0.01%)</title><rect x="0.0183%" y="725" width="0.0146%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="4"/><text x="0.2683%" y="735.50"></text></g><g><title>`0x7FFCD9A11D19 (4 samples, 0.01%)</title><rect x="0.2775%" y="149" width="0.0146%" height="15" fill="rgb(249,31,29)" fg:x="76" fg:w="4"/><text x="0.5275%" y="159.50"></text></g><g><title>`0x7FFCD9B418D3 (3 samples, 0.01%)</title><rect x="0.2811%" y="133" width="0.0110%" height="15" fill="rgb(225,111,53)" fg:x="77" fg:w="3"/><text x="0.5311%" y="143.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (6 samples, 0.02%)</title><rect x="0.2738%" y="341" width="0.0219%" height="15" fill="rgb(238,160,17)" fg:x="75" fg:w="6"/><text x="0.5238%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (6 samples, 0.02%)</title><rect x="0.2738%" y="325" width="0.0219%" height="15" fill="rgb(214,148,48)" fg:x="75" fg:w="6"/><text x="0.5238%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (6 samples, 0.02%)</title><rect x="0.2738%" y="309" width="0.0219%" height="15" fill="rgb(232,36,49)" fg:x="75" fg:w="6"/><text x="0.5238%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (6 samples, 0.02%)</title><rect x="0.2738%" y="293" width="0.0219%" height="15" fill="rgb(209,103,24)" fg:x="75" fg:w="6"/><text x="0.5238%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="0.2738%" y="277" width="0.0219%" height="15" fill="rgb(229,88,8)" fg:x="75" fg:w="6"/><text x="0.5238%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (6 samples, 0.02%)</title><rect x="0.2738%" y="261" width="0.0219%" height="15" fill="rgb(213,181,19)" fg:x="75" fg:w="6"/><text x="0.5238%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (6 samples, 0.02%)</title><rect x="0.2738%" y="245" width="0.0219%" height="15" fill="rgb(254,191,54)" fg:x="75" fg:w="6"/><text x="0.5238%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (6 samples, 0.02%)</title><rect x="0.2738%" y="229" width="0.0219%" height="15" fill="rgb(241,83,37)" fg:x="75" fg:w="6"/><text x="0.5238%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (6 samples, 0.02%)</title><rect x="0.2738%" y="213" width="0.0219%" height="15" fill="rgb(233,36,39)" fg:x="75" fg:w="6"/><text x="0.5238%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (6 samples, 0.02%)</title><rect x="0.2738%" y="197" width="0.0219%" height="15" fill="rgb(226,3,54)" fg:x="75" fg:w="6"/><text x="0.5238%" y="207.50"></text></g><g><title>`0x7FFCD9A84B8C (6 samples, 0.02%)</title><rect x="0.2738%" y="181" width="0.0219%" height="15" fill="rgb(245,192,40)" fg:x="75" fg:w="6"/><text x="0.5238%" y="191.50"></text></g><g><title>`0x7FFCD9A10DC5 (6 samples, 0.02%)</title><rect x="0.2738%" y="165" width="0.0219%" height="15" fill="rgb(238,167,29)" fg:x="75" fg:w="6"/><text x="0.5238%" y="175.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::resize(unsigned long long, enum2$&lt;core::option::Option (8 samples, 0.03%)</title><rect x="0.2738%" y="373" width="0.0292%" height="15" fill="rgb(232,182,51)" fg:x="75" fg:w="8"/><text x="0.5238%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::extend_with(unsigned long long, enum2$&lt;core::option::Option (8 samples, 0.03%)</title><rect x="0.2738%" y="357" width="0.0292%" height="15" fill="rgb(231,60,39)" fg:x="75" fg:w="8"/><text x="0.5238%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::reserve (4 samples, 0.01%)</title><rect x="0.3030%" y="341" width="0.0146%" height="15" fill="rgb(208,69,12)" fg:x="83" fg:w="4"/><text x="0.5530%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;isize,alloc::alloc::Global&gt;::reserve (4 samples, 0.01%)</title><rect x="0.3030%" y="325" width="0.0146%" height="15" fill="rgb(235,93,37)" fg:x="83" fg:w="4"/><text x="0.5530%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (4 samples, 0.01%)</title><rect x="0.3030%" y="309" width="0.0146%" height="15" fill="rgb(213,116,39)" fg:x="83" fg:w="4"/><text x="0.5530%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (4 samples, 0.01%)</title><rect x="0.3030%" y="293" width="0.0146%" height="15" fill="rgb(222,207,29)" fg:x="83" fg:w="4"/><text x="0.5530%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="0.3030%" y="277" width="0.0146%" height="15" fill="rgb(206,96,30)" fg:x="83" fg:w="4"/><text x="0.5530%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (4 samples, 0.01%)</title><rect x="0.3030%" y="261" width="0.0146%" height="15" fill="rgb(218,138,4)" fg:x="83" fg:w="4"/><text x="0.5530%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (4 samples, 0.01%)</title><rect x="0.3030%" y="245" width="0.0146%" height="15" fill="rgb(250,191,14)" fg:x="83" fg:w="4"/><text x="0.5530%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.01%)</title><rect x="0.3030%" y="229" width="0.0146%" height="15" fill="rgb(239,60,40)" fg:x="83" fg:w="4"/><text x="0.5530%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (4 samples, 0.01%)</title><rect x="0.3030%" y="213" width="0.0146%" height="15" fill="rgb(206,27,48)" fg:x="83" fg:w="4"/><text x="0.5530%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (4 samples, 0.01%)</title><rect x="0.3030%" y="197" width="0.0146%" height="15" fill="rgb(225,35,8)" fg:x="83" fg:w="4"/><text x="0.5530%" y="207.50"></text></g><g><title>`0x7FFCD9A84B8C (4 samples, 0.01%)</title><rect x="0.3030%" y="181" width="0.0146%" height="15" fill="rgb(250,213,24)" fg:x="83" fg:w="4"/><text x="0.5530%" y="191.50"></text></g><g><title>`0x7FFCD9A10DC5 (4 samples, 0.01%)</title><rect x="0.3030%" y="165" width="0.0146%" height="15" fill="rgb(247,123,22)" fg:x="83" fg:w="4"/><text x="0.5530%" y="175.50"></text></g><g><title>`0x7FFCD9A11D19 (3 samples, 0.01%)</title><rect x="0.3067%" y="149" width="0.0110%" height="15" fill="rgb(231,138,38)" fg:x="84" fg:w="3"/><text x="0.5567%" y="159.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::resize (8 samples, 0.03%)</title><rect x="0.3030%" y="373" width="0.0292%" height="15" fill="rgb(231,145,46)" fg:x="83" fg:w="8"/><text x="0.5530%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::extend_with (8 samples, 0.03%)</title><rect x="0.3030%" y="357" width="0.0292%" height="15" fill="rgb(251,118,11)" fg:x="83" fg:w="8"/><text x="0.5530%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::write (4 samples, 0.01%)</title><rect x="0.3176%" y="341" width="0.0146%" height="15" fill="rgb(217,147,25)" fg:x="87" fg:w="4"/><text x="0.5676%" y="351.50"></text></g><g><title>`0x7FFCBA8C1A89 (4 samples, 0.01%)</title><rect x="0.3176%" y="325" width="0.0146%" height="15" fill="rgb(247,81,37)" fg:x="87" fg:w="4"/><text x="0.5676%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::resize (4 samples, 0.01%)</title><rect x="0.3322%" y="373" width="0.0146%" height="15" fill="rgb(209,12,38)" fg:x="91" fg:w="4"/><text x="0.5822%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::extend_with (4 samples, 0.01%)</title><rect x="0.3322%" y="357" width="0.0146%" height="15" fill="rgb(227,1,9)" fg:x="91" fg:w="4"/><text x="0.5822%" y="367.50"></text></g><g><title>`0x7FFCD9B418D3 (3 samples, 0.01%)</title><rect x="0.3505%" y="85" width="0.0110%" height="15" fill="rgb(248,47,43)" fg:x="96" fg:w="3"/><text x="0.6005%" y="95.50"></text></g><g><title>`0x7FFCD9A11D19 (7 samples, 0.03%)</title><rect x="0.3468%" y="101" width="0.0256%" height="15" fill="rgb(221,10,30)" fg:x="95" fg:w="7"/><text x="0.5968%" y="111.50"></text></g><g><title>`0x7FFCD9B418D7 (3 samples, 0.01%)</title><rect x="0.3614%" y="85" width="0.0110%" height="15" fill="rgb(210,229,1)" fg:x="99" fg:w="3"/><text x="0.6114%" y="95.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::default_allocator::impl$9::reallocate_copy(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (9 samples, 0.03%)</title><rect x="0.3468%" y="325" width="0.0329%" height="15" fill="rgb(222,148,37)" fg:x="95" fg:w="9"/><text x="0.5968%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;::resize(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (9 samples, 0.03%)</title><rect x="0.3468%" y="309" width="0.0329%" height="15" fill="rgb(234,67,33)" fg:x="95" fg:w="9"/><text x="0.5968%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (9 samples, 0.03%)</title><rect x="0.3468%" y="293" width="0.0329%" height="15" fill="rgb(247,98,35)" fg:x="95" fg:w="9"/><text x="0.5968%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (9 samples, 0.03%)</title><rect x="0.3468%" y="277" width="0.0329%" height="15" fill="rgb(247,138,52)" fg:x="95" fg:w="9"/><text x="0.5968%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (9 samples, 0.03%)</title><rect x="0.3468%" y="261" width="0.0329%" height="15" fill="rgb(213,79,30)" fg:x="95" fg:w="9"/><text x="0.5968%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (9 samples, 0.03%)</title><rect x="0.3468%" y="245" width="0.0329%" height="15" fill="rgb(246,177,23)" fg:x="95" fg:w="9"/><text x="0.5968%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (9 samples, 0.03%)</title><rect x="0.3468%" y="229" width="0.0329%" height="15" fill="rgb(230,62,27)" fg:x="95" fg:w="9"/><text x="0.5968%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (9 samples, 0.03%)</title><rect x="0.3468%" y="213" width="0.0329%" height="15" fill="rgb(216,154,8)" fg:x="95" fg:w="9"/><text x="0.5968%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (9 samples, 0.03%)</title><rect x="0.3468%" y="197" width="0.0329%" height="15" fill="rgb(244,35,45)" fg:x="95" fg:w="9"/><text x="0.5968%" y="207.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (9 samples, 0.03%)</title><rect x="0.3468%" y="181" width="0.0329%" height="15" fill="rgb(251,115,12)" fg:x="95" fg:w="9"/><text x="0.5968%" y="191.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (9 samples, 0.03%)</title><rect x="0.3468%" y="165" width="0.0329%" height="15" fill="rgb(240,54,50)" fg:x="95" fg:w="9"/><text x="0.5968%" y="175.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (9 samples, 0.03%)</title><rect x="0.3468%" y="149" width="0.0329%" height="15" fill="rgb(233,84,52)" fg:x="95" fg:w="9"/><text x="0.5968%" y="159.50"></text></g><g><title>`0x7FFCD9A84B8C (9 samples, 0.03%)</title><rect x="0.3468%" y="133" width="0.0329%" height="15" fill="rgb(207,117,47)" fg:x="95" fg:w="9"/><text x="0.5968%" y="143.50"></text></g><g><title>`0x7FFCD9A10DC5 (9 samples, 0.03%)</title><rect x="0.3468%" y="117" width="0.0329%" height="15" fill="rgb(249,43,39)" fg:x="95" fg:w="9"/><text x="0.5968%" y="127.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (19 samples, 0.07%)</title><rect x="0.3468%" y="357" width="0.0694%" height="15" fill="rgb(209,38,44)" fg:x="95" fg:w="19"/><text x="0.5968%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_generic(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;, nalgebra::base::dimension::Const (19 samples, 0.07%)</title><rect x="0.3468%" y="341" width="0.0694%" height="15" fill="rgb(236,212,23)" fg:x="95" fg:w="19"/><text x="0.5968%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;::fill_with(nalgebra::base::edition::impl$8::resize_generic::closure_env$0&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;,nalgebra::base::dimension::Const (10 samples, 0.04%)</title><rect x="0.3797%" y="325" width="0.0365%" height="15" fill="rgb(242,79,21)" fg:x="104" fg:w="10"/><text x="0.6297%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::iter::impl$36::next(nalgebra::base::iter::MatrixIterMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (7 samples, 0.03%)</title><rect x="0.3906%" y="309" width="0.0256%" height="15" fill="rgb(211,96,35)" fg:x="107" fg:w="7"/><text x="0.6406%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::iter::impl$31::next(nalgebra::base::iter::RawIter&lt;ptr_mut$&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt; &gt;,core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (7 samples, 0.03%)</title><rect x="0.3906%" y="293" width="0.0256%" height="15" fill="rgb(253,215,40)" fg:x="107" fg:w="7"/><text x="0.6406%" y="303.50"></text></g><g><title>`0x7FFCBA8C075E (3 samples, 0.01%)</title><rect x="0.4235%" y="325" width="0.0110%" height="15" fill="rgb(211,81,21)" fg:x="116" fg:w="3"/><text x="0.6735%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::impl$42::clone(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (8 samples, 0.03%)</title><rect x="0.4162%" y="357" width="0.0292%" height="15" fill="rgb(208,190,38)" fg:x="114" fg:w="8"/><text x="0.6662%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::vec_storage::impl$23::clone(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (8 samples, 0.03%)</title><rect x="0.4162%" y="341" width="0.0292%" height="15" fill="rgb(235,213,38)" fg:x="114" fg:w="8"/><text x="0.6662%" y="351.50"></text></g><g><title>`0x7FFCBA8C0766 (3 samples, 0.01%)</title><rect x="0.4344%" y="325" width="0.0110%" height="15" fill="rgb(237,122,38)" fg:x="119" fg:w="3"/><text x="0.6844%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::genbox::genbox&lt;1000&gt;(unsigned long long*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, unsigned long long, unsigned long long, long long, double, enum2$&lt;core::option::Option (48 samples, 0.18%)</title><rect x="0.2738%" y="389" width="0.1752%" height="15" fill="rgb(244,218,35)" fg:x="75" fg:w="48"/><text x="0.5238%" y="399.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally_mut&lt;f64,nalgebra::base::dimension::Const&lt;2&gt; &gt; (28 samples, 0.10%)</title><rect x="0.3468%" y="373" width="0.1022%" height="15" fill="rgb(240,68,47)" fg:x="95" fg:w="28"/><text x="0.5968%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::alloc::__default_lib_allocator::__rdl_realloc (3 samples, 0.01%)</title><rect x="0.4563%" y="149" width="0.0110%" height="15" fill="rgb(210,16,53)" fg:x="125" fg:w="3"/><text x="0.7063%" y="159.50"></text></g><g><title>`0x7FFCD9A11797 (3 samples, 0.01%)</title><rect x="0.4965%" y="117" width="0.0110%" height="15" fill="rgb(235,124,12)" fg:x="136" fg:w="3"/><text x="0.7465%" y="127.50"></text></g><g><title>`0x7FFCD99ECAB2 (3 samples, 0.01%)</title><rect x="0.4965%" y="101" width="0.0110%" height="15" fill="rgb(224,169,11)" fg:x="136" fg:w="3"/><text x="0.7465%" y="111.50"></text></g><g><title>`0x7FFCD99EDB05 (3 samples, 0.01%)</title><rect x="0.5147%" y="85" width="0.0110%" height="15" fill="rgb(250,166,2)" fg:x="141" fg:w="3"/><text x="0.7647%" y="95.50"></text></g><g><title>`0x7FFCD9A11965 (6 samples, 0.02%)</title><rect x="0.5074%" y="117" width="0.0219%" height="15" fill="rgb(242,216,29)" fg:x="139" fg:w="6"/><text x="0.7574%" y="127.50"></text></g><g><title>`0x7FFCD99EE934 (5 samples, 0.02%)</title><rect x="0.5111%" y="101" width="0.0183%" height="15" fill="rgb(230,116,27)" fg:x="140" fg:w="5"/><text x="0.7611%" y="111.50"></text></g><g><title>`0x7FFCD9A10DC5 (16 samples, 0.06%)</title><rect x="0.4855%" y="133" width="0.0584%" height="15" fill="rgb(228,99,48)" fg:x="133" fg:w="16"/><text x="0.7355%" y="143.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (25 samples, 0.09%)</title><rect x="0.4563%" y="373" width="0.0913%" height="15" fill="rgb(253,11,6)" fg:x="125" fg:w="25"/><text x="0.7063%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_generic(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;, nalgebra::base::dimension::Const (25 samples, 0.09%)</title><rect x="0.4563%" y="357" width="0.0913%" height="15" fill="rgb(247,143,39)" fg:x="125" fg:w="25"/><text x="0.7063%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::default_allocator::impl$9::reallocate_copy(nalgebra::base::dimension::Const&lt;3&gt;, nalgebra::base::dimension::Dyn, nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (25 samples, 0.09%)</title><rect x="0.4563%" y="341" width="0.0913%" height="15" fill="rgb(236,97,10)" fg:x="125" fg:w="25"/><text x="0.7063%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt;::resize(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (25 samples, 0.09%)</title><rect x="0.4563%" y="325" width="0.0913%" height="15" fill="rgb(233,208,19)" fg:x="125" fg:w="25"/><text x="0.7063%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (25 samples, 0.09%)</title><rect x="0.4563%" y="309" width="0.0913%" height="15" fill="rgb(216,164,2)" fg:x="125" fg:w="25"/><text x="0.7063%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (25 samples, 0.09%)</title><rect x="0.4563%" y="293" width="0.0913%" height="15" fill="rgb(220,129,5)" fg:x="125" fg:w="25"/><text x="0.7063%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (25 samples, 0.09%)</title><rect x="0.4563%" y="277" width="0.0913%" height="15" fill="rgb(242,17,10)" fg:x="125" fg:w="25"/><text x="0.7063%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (25 samples, 0.09%)</title><rect x="0.4563%" y="261" width="0.0913%" height="15" fill="rgb(242,107,0)" fg:x="125" fg:w="25"/><text x="0.7063%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (25 samples, 0.09%)</title><rect x="0.4563%" y="245" width="0.0913%" height="15" fill="rgb(251,28,31)" fg:x="125" fg:w="25"/><text x="0.7063%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (25 samples, 0.09%)</title><rect x="0.4563%" y="229" width="0.0913%" height="15" fill="rgb(233,223,10)" fg:x="125" fg:w="25"/><text x="0.7063%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (25 samples, 0.09%)</title><rect x="0.4563%" y="213" width="0.0913%" height="15" fill="rgb(215,21,27)" fg:x="125" fg:w="25"/><text x="0.7063%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (25 samples, 0.09%)</title><rect x="0.4563%" y="197" width="0.0913%" height="15" fill="rgb(232,23,21)" fg:x="125" fg:w="25"/><text x="0.7063%" y="207.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (25 samples, 0.09%)</title><rect x="0.4563%" y="181" width="0.0913%" height="15" fill="rgb(244,5,23)" fg:x="125" fg:w="25"/><text x="0.7063%" y="191.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (25 samples, 0.09%)</title><rect x="0.4563%" y="165" width="0.0913%" height="15" fill="rgb(226,81,46)" fg:x="125" fg:w="25"/><text x="0.7063%" y="175.50"></text></g><g><title>`0x7FFCD9A84B8C (19 samples, 0.07%)</title><rect x="0.4782%" y="149" width="0.0694%" height="15" fill="rgb(247,70,30)" fg:x="131" fg:w="19"/><text x="0.7282%" y="159.50"></text></g><g><title>`0x7FFCD9A5135B (5 samples, 0.02%)</title><rect x="0.5732%" y="181" width="0.0183%" height="15" fill="rgb(212,68,19)" fg:x="157" fg:w="5"/><text x="0.8232%" y="191.50"></text></g><g><title>`0x7FFCD99ECAB2 (4 samples, 0.01%)</title><rect x="0.5768%" y="165" width="0.0146%" height="15" fill="rgb(240,187,13)" fg:x="158" fg:w="4"/><text x="0.8268%" y="175.50"></text></g><g><title>`0x7FFCD9A51940 (12 samples, 0.04%)</title><rect x="0.6060%" y="181" width="0.0438%" height="15" fill="rgb(223,113,26)" fg:x="166" fg:w="12"/><text x="0.8560%" y="191.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (45 samples, 0.16%)</title><rect x="0.5476%" y="341" width="0.1643%" height="15" fill="rgb(206,192,2)" fg:x="150" fg:w="45"/><text x="0.7976%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (45 samples, 0.16%)</title><rect x="0.5476%" y="325" width="0.1643%" height="15" fill="rgb(241,108,4)" fg:x="150" fg:w="45"/><text x="0.7976%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (45 samples, 0.16%)</title><rect x="0.5476%" y="309" width="0.1643%" height="15" fill="rgb(247,173,49)" fg:x="150" fg:w="45"/><text x="0.7976%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (45 samples, 0.16%)</title><rect x="0.5476%" y="293" width="0.1643%" height="15" fill="rgb(224,114,35)" fg:x="150" fg:w="45"/><text x="0.7976%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (45 samples, 0.16%)</title><rect x="0.5476%" y="277" width="0.1643%" height="15" fill="rgb(245,159,27)" fg:x="150" fg:w="45"/><text x="0.7976%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (45 samples, 0.16%)</title><rect x="0.5476%" y="261" width="0.1643%" height="15" fill="rgb(245,172,44)" fg:x="150" fg:w="45"/><text x="0.7976%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (45 samples, 0.16%)</title><rect x="0.5476%" y="245" width="0.1643%" height="15" fill="rgb(236,23,11)" fg:x="150" fg:w="45"/><text x="0.7976%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (45 samples, 0.16%)</title><rect x="0.5476%" y="229" width="0.1643%" height="15" fill="rgb(205,117,38)" fg:x="150" fg:w="45"/><text x="0.7976%" y="239.50"></text></g><g><title>`0x7FFCD9A22B99 (39 samples, 0.14%)</title><rect x="0.5695%" y="213" width="0.1424%" height="15" fill="rgb(237,72,25)" fg:x="156" fg:w="39"/><text x="0.8195%" y="223.50"></text></g><g><title>`0x7FFCD99E7DBE (38 samples, 0.14%)</title><rect x="0.5732%" y="197" width="0.1387%" height="15" fill="rgb(244,70,9)" fg:x="157" fg:w="38"/><text x="0.8232%" y="207.50"></text></g><g><title>`0x7FFCD9A525C3 (9 samples, 0.03%)</title><rect x="0.6790%" y="181" width="0.0329%" height="15" fill="rgb(217,125,39)" fg:x="186" fg:w="9"/><text x="0.9290%" y="191.50"></text></g><g><title>`0x7FFCD9A8D71D (9 samples, 0.03%)</title><rect x="0.6790%" y="165" width="0.0329%" height="15" fill="rgb(235,36,10)" fg:x="186" fg:w="9"/><text x="0.9290%" y="175.50"></text></g><g><title>`0x7FFCD9B3C2C4 (9 samples, 0.03%)</title><rect x="0.6790%" y="149" width="0.0329%" height="15" fill="rgb(251,123,47)" fg:x="186" fg:w="9"/><text x="0.9290%" y="159.50"></text></g><g><title>`0x7FFCBA8C007B (969 samples, 3.54%)</title><rect x="0.7119%" y="341" width="3.5375%" height="15" fill="rgb(221,13,13)" fg:x="195" fg:w="969"/><text x="0.9619%" y="351.50">`0x..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::impl$42::clone(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1,015 samples, 3.71%)</title><rect x="0.5476%" y="373" width="3.7055%" height="15" fill="rgb(238,131,9)" fg:x="150" fg:w="1015"/><text x="0.7976%" y="383.50">Rust..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::vec_storage::impl$23::clone(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1,015 samples, 3.71%)</title><rect x="0.5476%" y="357" width="3.7055%" height="15" fill="rgb(211,50,8)" fg:x="150" fg:w="1015"/><text x="0.7976%" y="367.50">Rust..</text></g><g><title>`0x7FFCD9A8DCDF (4 samples, 0.01%)</title><rect x="4.2786%" y="341" width="0.0146%" height="15" fill="rgb(245,182,24)" fg:x="1172" fg:w="4"/><text x="4.5286%" y="351.50"></text></g><g><title>`0x7FFCD99EB73A (157 samples, 0.57%)</title><rect x="4.2713%" y="357" width="0.5732%" height="15" fill="rgb(242,14,37)" fg:x="1170" fg:w="157"/><text x="4.5213%" y="367.50"></text></g><g><title>`0x7FFCD9A8DFEA (151 samples, 0.55%)</title><rect x="4.2932%" y="341" width="0.5513%" height="15" fill="rgb(246,228,12)" fg:x="1176" fg:w="151"/><text x="4.5432%" y="351.50"></text></g><g><title>`0x7FFCD99EEDEE (149 samples, 0.54%)</title><rect x="4.3005%" y="325" width="0.5440%" height="15" fill="rgb(213,55,15)" fg:x="1178" fg:w="149"/><text x="4.5505%" y="335.50"></text></g><g><title>`0x7FFCD9A606D9 (149 samples, 0.54%)</title><rect x="4.3005%" y="309" width="0.5440%" height="15" fill="rgb(209,9,3)" fg:x="1178" fg:w="149"/><text x="4.5505%" y="319.50"></text></g><g><title>`0x7FFCD9B3C384 (149 samples, 0.54%)</title><rect x="4.3005%" y="293" width="0.5440%" height="15" fill="rgb(230,59,30)" fg:x="1178" fg:w="149"/><text x="4.5505%" y="303.50"></text></g><g><title>`0x7FFCD9A20625 (3 samples, 0.01%)</title><rect x="4.8627%" y="341" width="0.0110%" height="15" fill="rgb(209,121,21)" fg:x="1332" fg:w="3"/><text x="5.1127%" y="351.50"></text></g><g><title>`0x7FFCD99EC8E9 (6 samples, 0.02%)</title><rect x="4.8591%" y="357" width="0.0219%" height="15" fill="rgb(220,109,13)" fg:x="1331" fg:w="6"/><text x="5.1091%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally_mut&lt;f64,nalgebra::base::dimension::Const&lt;3&gt; &gt; (1,215 samples, 4.44%)</title><rect x="0.4490%" y="389" width="4.4356%" height="15" fill="rgb(232,18,1)" fg:x="123" fg:w="1215"/><text x="0.6990%" y="399.50">Rust_..</text></g><g><title>`0x7FFCD9A0FA02 (171 samples, 0.62%)</title><rect x="4.2604%" y="373" width="0.6243%" height="15" fill="rgb(215,41,42)" fg:x="1167" fg:w="171"/><text x="4.5104%" y="383.50"></text></g><g><title>`0x7FFCD9B418D3 (4 samples, 0.01%)</title><rect x="4.8956%" y="117" width="0.0146%" height="15" fill="rgb(224,123,36)" fg:x="1341" fg:w="4"/><text x="5.1456%" y="127.50"></text></g><g><title>`0x7FFCD9A11D19 (7 samples, 0.03%)</title><rect x="4.8956%" y="133" width="0.0256%" height="15" fill="rgb(240,125,3)" fg:x="1341" fg:w="7"/><text x="5.1456%" y="143.50"></text></g><g><title>`0x7FFCD9B418D7 (3 samples, 0.01%)</title><rect x="4.9102%" y="117" width="0.0110%" height="15" fill="rgb(205,98,50)" fg:x="1345" fg:w="3"/><text x="5.1602%" y="127.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (8 samples, 0.03%)</title><rect x="4.8956%" y="325" width="0.0292%" height="15" fill="rgb(205,185,37)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (8 samples, 0.03%)</title><rect x="4.8956%" y="309" width="0.0292%" height="15" fill="rgb(238,207,15)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (8 samples, 0.03%)</title><rect x="4.8956%" y="293" width="0.0292%" height="15" fill="rgb(213,199,42)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (8 samples, 0.03%)</title><rect x="4.8956%" y="277" width="0.0292%" height="15" fill="rgb(235,201,11)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (8 samples, 0.03%)</title><rect x="4.8956%" y="261" width="0.0292%" height="15" fill="rgb(207,46,11)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (8 samples, 0.03%)</title><rect x="4.8956%" y="245" width="0.0292%" height="15" fill="rgb(241,35,35)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (8 samples, 0.03%)</title><rect x="4.8956%" y="229" width="0.0292%" height="15" fill="rgb(243,32,47)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (8 samples, 0.03%)</title><rect x="4.8956%" y="213" width="0.0292%" height="15" fill="rgb(247,202,23)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (8 samples, 0.03%)</title><rect x="4.8956%" y="197" width="0.0292%" height="15" fill="rgb(219,102,11)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="207.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (8 samples, 0.03%)</title><rect x="4.8956%" y="181" width="0.0292%" height="15" fill="rgb(243,110,44)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="191.50"></text></g><g><title>`0x7FFCD9A84B8C (8 samples, 0.03%)</title><rect x="4.8956%" y="165" width="0.0292%" height="15" fill="rgb(222,74,54)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="175.50"></text></g><g><title>`0x7FFCD9A10DC5 (8 samples, 0.03%)</title><rect x="4.8956%" y="149" width="0.0292%" height="15" fill="rgb(216,99,12)" fg:x="1341" fg:w="8"/><text x="5.1456%" y="159.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::resize(unsigned long long, enum2$&lt;core::option::Option (14 samples, 0.05%)</title><rect x="4.8956%" y="357" width="0.0511%" height="15" fill="rgb(226,22,26)" fg:x="1341" fg:w="14"/><text x="5.1456%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::extend_with(unsigned long long, enum2$&lt;core::option::Option (14 samples, 0.05%)</title><rect x="4.8956%" y="341" width="0.0511%" height="15" fill="rgb(217,163,10)" fg:x="1341" fg:w="14"/><text x="5.1456%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;usize&gt; &gt;*, enum2$&lt;core::option::Option (6 samples, 0.02%)</title><rect x="4.9248%" y="325" width="0.0219%" height="15" fill="rgb(213,25,53)" fg:x="1349" fg:w="6"/><text x="5.1748%" y="335.50"></text></g><g><title>`0x7FFCD9B418D3 (5 samples, 0.02%)</title><rect x="4.9467%" y="117" width="0.0183%" height="15" fill="rgb(252,105,26)" fg:x="1355" fg:w="5"/><text x="5.1967%" y="127.50"></text></g><g><title>`0x7FFCD9A11D19 (6 samples, 0.02%)</title><rect x="4.9467%" y="133" width="0.0219%" height="15" fill="rgb(220,39,43)" fg:x="1355" fg:w="6"/><text x="5.1967%" y="143.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::reserve (8 samples, 0.03%)</title><rect x="4.9467%" y="325" width="0.0292%" height="15" fill="rgb(229,68,48)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;isize,alloc::alloc::Global&gt;::reserve (8 samples, 0.03%)</title><rect x="4.9467%" y="309" width="0.0292%" height="15" fill="rgb(252,8,32)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (8 samples, 0.03%)</title><rect x="4.9467%" y="293" width="0.0292%" height="15" fill="rgb(223,20,43)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (8 samples, 0.03%)</title><rect x="4.9467%" y="277" width="0.0292%" height="15" fill="rgb(229,81,49)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (8 samples, 0.03%)</title><rect x="4.9467%" y="261" width="0.0292%" height="15" fill="rgb(236,28,36)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (8 samples, 0.03%)</title><rect x="4.9467%" y="245" width="0.0292%" height="15" fill="rgb(249,185,26)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (8 samples, 0.03%)</title><rect x="4.9467%" y="229" width="0.0292%" height="15" fill="rgb(249,174,33)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (8 samples, 0.03%)</title><rect x="4.9467%" y="213" width="0.0292%" height="15" fill="rgb(233,201,37)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (8 samples, 0.03%)</title><rect x="4.9467%" y="197" width="0.0292%" height="15" fill="rgb(221,78,26)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="207.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (8 samples, 0.03%)</title><rect x="4.9467%" y="181" width="0.0292%" height="15" fill="rgb(250,127,30)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="191.50"></text></g><g><title>`0x7FFCD9A84B8C (8 samples, 0.03%)</title><rect x="4.9467%" y="165" width="0.0292%" height="15" fill="rgb(230,49,44)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="175.50"></text></g><g><title>`0x7FFCD9A10DC5 (8 samples, 0.03%)</title><rect x="4.9467%" y="149" width="0.0292%" height="15" fill="rgb(229,67,23)" fg:x="1355" fg:w="8"/><text x="5.1967%" y="159.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::resize (16 samples, 0.06%)</title><rect x="4.9467%" y="357" width="0.0584%" height="15" fill="rgb(249,83,47)" fg:x="1355" fg:w="16"/><text x="5.1967%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::extend_with (16 samples, 0.06%)</title><rect x="4.9467%" y="341" width="0.0584%" height="15" fill="rgb(215,43,3)" fg:x="1355" fg:w="16"/><text x="5.1967%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::write (8 samples, 0.03%)</title><rect x="4.9759%" y="325" width="0.0292%" height="15" fill="rgb(238,154,13)" fg:x="1363" fg:w="8"/><text x="5.2259%" y="335.50"></text></g><g><title>`0x7FFCBA8C1A89 (8 samples, 0.03%)</title><rect x="4.9759%" y="309" width="0.0292%" height="15" fill="rgb(219,56,2)" fg:x="1363" fg:w="8"/><text x="5.2259%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::reserve (3 samples, 0.01%)</title><rect x="5.0051%" y="325" width="0.0110%" height="15" fill="rgb(233,0,4)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::reserve (3 samples, 0.01%)</title><rect x="5.0051%" y="309" width="0.0110%" height="15" fill="rgb(235,30,7)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (3 samples, 0.01%)</title><rect x="5.0051%" y="293" width="0.0110%" height="15" fill="rgb(250,79,13)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (3 samples, 0.01%)</title><rect x="5.0051%" y="277" width="0.0110%" height="15" fill="rgb(211,146,34)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="5.0051%" y="261" width="0.0110%" height="15" fill="rgb(228,22,38)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (3 samples, 0.01%)</title><rect x="5.0051%" y="245" width="0.0110%" height="15" fill="rgb(235,168,5)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (3 samples, 0.01%)</title><rect x="5.0051%" y="229" width="0.0110%" height="15" fill="rgb(221,155,16)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.01%)</title><rect x="5.0051%" y="213" width="0.0110%" height="15" fill="rgb(215,215,53)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (3 samples, 0.01%)</title><rect x="5.0051%" y="197" width="0.0110%" height="15" fill="rgb(223,4,10)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="207.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (3 samples, 0.01%)</title><rect x="5.0051%" y="181" width="0.0110%" height="15" fill="rgb(234,103,6)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="191.50"></text></g><g><title>`0x7FFCD9A84B8C (3 samples, 0.01%)</title><rect x="5.0051%" y="165" width="0.0110%" height="15" fill="rgb(227,97,0)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="175.50"></text></g><g><title>`0x7FFCD9A10DC5 (3 samples, 0.01%)</title><rect x="5.0051%" y="149" width="0.0110%" height="15" fill="rgb(234,150,53)" fg:x="1371" fg:w="3"/><text x="5.2551%" y="159.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::resize (6 samples, 0.02%)</title><rect x="5.0051%" y="357" width="0.0219%" height="15" fill="rgb(228,201,54)" fg:x="1371" fg:w="6"/><text x="5.2551%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::extend_with (6 samples, 0.02%)</title><rect x="5.0051%" y="341" width="0.0219%" height="15" fill="rgb(222,22,37)" fg:x="1371" fg:w="6"/><text x="5.2551%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::write (3 samples, 0.01%)</title><rect x="5.0161%" y="325" width="0.0110%" height="15" fill="rgb(237,53,32)" fg:x="1374" fg:w="3"/><text x="5.2661%" y="335.50"></text></g><g><title>`0x7FFCBA8C1A89 (3 samples, 0.01%)</title><rect x="5.0161%" y="309" width="0.0110%" height="15" fill="rgb(233,25,53)" fg:x="1374" fg:w="3"/><text x="5.2661%" y="319.50"></text></g><g><title>`0x7FFCD9B418D3 (8 samples, 0.03%)</title><rect x="5.0270%" y="69" width="0.0292%" height="15" fill="rgb(210,40,34)" fg:x="1377" fg:w="8"/><text x="5.2770%" y="79.50"></text></g><g><title>`0x7FFCD9B418D7 (6 samples, 0.02%)</title><rect x="5.0562%" y="69" width="0.0219%" height="15" fill="rgb(241,220,44)" fg:x="1385" fg:w="6"/><text x="5.3062%" y="79.50"></text></g><g><title>`0x7FFCD9A11D19 (15 samples, 0.05%)</title><rect x="5.0270%" y="85" width="0.0548%" height="15" fill="rgb(235,28,35)" fg:x="1377" fg:w="15"/><text x="5.2770%" y="95.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::default_allocator::impl$9::reallocate_copy(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (17 samples, 0.06%)</title><rect x="5.0270%" y="309" width="0.0621%" height="15" fill="rgb(210,56,17)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;::resize(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (17 samples, 0.06%)</title><rect x="5.0270%" y="293" width="0.0621%" height="15" fill="rgb(224,130,29)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (17 samples, 0.06%)</title><rect x="5.0270%" y="277" width="0.0621%" height="15" fill="rgb(235,212,8)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (17 samples, 0.06%)</title><rect x="5.0270%" y="261" width="0.0621%" height="15" fill="rgb(223,33,50)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (17 samples, 0.06%)</title><rect x="5.0270%" y="245" width="0.0621%" height="15" fill="rgb(219,149,13)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (17 samples, 0.06%)</title><rect x="5.0270%" y="229" width="0.0621%" height="15" fill="rgb(250,156,29)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (17 samples, 0.06%)</title><rect x="5.0270%" y="213" width="0.0621%" height="15" fill="rgb(216,193,19)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (17 samples, 0.06%)</title><rect x="5.0270%" y="197" width="0.0621%" height="15" fill="rgb(216,135,14)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="207.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (17 samples, 0.06%)</title><rect x="5.0270%" y="181" width="0.0621%" height="15" fill="rgb(241,47,5)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="191.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (17 samples, 0.06%)</title><rect x="5.0270%" y="165" width="0.0621%" height="15" fill="rgb(233,42,35)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="175.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (17 samples, 0.06%)</title><rect x="5.0270%" y="149" width="0.0621%" height="15" fill="rgb(231,13,6)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="159.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (17 samples, 0.06%)</title><rect x="5.0270%" y="133" width="0.0621%" height="15" fill="rgb(207,181,40)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="143.50"></text></g><g><title>`0x7FFCD9A84B8C (17 samples, 0.06%)</title><rect x="5.0270%" y="117" width="0.0621%" height="15" fill="rgb(254,173,49)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="127.50"></text></g><g><title>`0x7FFCD9A10DC5 (17 samples, 0.06%)</title><rect x="5.0270%" y="101" width="0.0621%" height="15" fill="rgb(221,1,38)" fg:x="1377" fg:w="17"/><text x="5.2770%" y="111.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (34 samples, 0.12%)</title><rect x="5.0270%" y="341" width="0.1241%" height="15" fill="rgb(206,124,46)" fg:x="1377" fg:w="34"/><text x="5.2770%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_generic(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;, nalgebra::base::dimension::Const (34 samples, 0.12%)</title><rect x="5.0270%" y="325" width="0.1241%" height="15" fill="rgb(249,21,11)" fg:x="1377" fg:w="34"/><text x="5.2770%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;::fill_with(nalgebra::base::edition::impl$8::resize_generic::closure_env$0&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;,nalgebra::base::dimension::Const (17 samples, 0.06%)</title><rect x="5.0891%" y="309" width="0.0621%" height="15" fill="rgb(222,201,40)" fg:x="1394" fg:w="17"/><text x="5.3391%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::iter::impl$36::next(nalgebra::base::iter::MatrixIterMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (14 samples, 0.05%)</title><rect x="5.1000%" y="293" width="0.0511%" height="15" fill="rgb(235,61,29)" fg:x="1397" fg:w="14"/><text x="5.3500%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::iter::impl$31::next(nalgebra::base::iter::RawIter&lt;ptr_mut$&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt; &gt;,core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (14 samples, 0.05%)</title><rect x="5.1000%" y="277" width="0.0511%" height="15" fill="rgb(219,207,3)" fg:x="1397" fg:w="14"/><text x="5.3500%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::impl$42::clone(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (12 samples, 0.04%)</title><rect x="5.1511%" y="341" width="0.0438%" height="15" fill="rgb(222,56,46)" fg:x="1411" fg:w="12"/><text x="5.4011%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::vec_storage::impl$23::clone(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (12 samples, 0.04%)</title><rect x="5.1511%" y="325" width="0.0438%" height="15" fill="rgb(239,76,54)" fg:x="1411" fg:w="12"/><text x="5.4011%" y="335.50"></text></g><g><title>`0x7FFCBA8C0766 (7 samples, 0.03%)</title><rect x="5.1694%" y="309" width="0.0256%" height="15" fill="rgb(231,124,27)" fg:x="1416" fg:w="7"/><text x="5.4194%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (88 samples, 0.32%)</title><rect x="4.8846%" y="389" width="0.3213%" height="15" fill="rgb(249,195,6)" fg:x="1338" fg:w="88"/><text x="5.1346%" y="399.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::genbox::genbox&lt;1000&gt;(unsigned long long*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, unsigned long long, unsigned long long, long long, double, enum2$&lt;core::option::Option (88 samples, 0.32%)</title><rect x="4.8846%" y="373" width="0.3213%" height="15" fill="rgb(237,174,47)" fg:x="1338" fg:w="88"/><text x="5.1346%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally_mut&lt;f64,nalgebra::base::dimension::Const&lt;2&gt; &gt; (49 samples, 0.18%)</title><rect x="5.0270%" y="357" width="0.1789%" height="15" fill="rgb(206,201,31)" fg:x="1377" fg:w="49"/><text x="5.2770%" y="367.50"></text></g><g><title>`0x7FFCD9A0FA02 (3 samples, 0.01%)</title><rect x="5.1949%" y="341" width="0.0110%" height="15" fill="rgb(231,57,52)" fg:x="1423" fg:w="3"/><text x="5.4449%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::splinit::splinit(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, enum2$&lt;core::option::Option&lt;usize&gt; &gt;[1000]*, unsigned long long*, unsigned long long*, unsigned long long*, unsigned long long*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1,363 samples, 4.98%)</title><rect x="0.2665%" y="405" width="4.9759%" height="15" fill="rgb(248,177,22)" fg:x="73" fg:w="1363"/><text x="0.5165%" y="415.50">Rust_M..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (10 samples, 0.04%)</title><rect x="5.2059%" y="389" width="0.0365%" height="15" fill="rgb(215,211,37)" fg:x="1426" fg:w="10"/><text x="5.4559%" y="399.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (10 samples, 0.04%)</title><rect x="5.2059%" y="373" width="0.0365%" height="15" fill="rgb(241,128,51)" fg:x="1426" fg:w="10"/><text x="5.4559%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::is_some (4 samples, 0.01%)</title><rect x="5.5199%" y="341" width="0.0146%" height="15" fill="rgb(227,165,31)" fg:x="1512" fg:w="4"/><text x="5.7699%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::updtrec::updtrec&lt;1000&gt;(unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;, enum2$&lt;core::option::Option (40 samples, 0.15%)</title><rect x="5.4030%" y="373" width="0.1460%" height="15" fill="rgb(228,167,24)" fg:x="1480" fg:w="40"/><text x="5.6530%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::is_none (8 samples, 0.03%)</title><rect x="5.5199%" y="357" width="0.0292%" height="15" fill="rgb(228,143,12)" fg:x="1512" fg:w="8"/><text x="5.7699%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;*, tuple$ (4 samples, 0.01%)</title><rect x="5.5345%" y="341" width="0.0146%" height="15" fill="rgb(249,149,8)" fg:x="1516" fg:w="4"/><text x="5.7845%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;::get_unchecked(tuple$ (4 samples, 0.01%)</title><rect x="5.5345%" y="325" width="0.0146%" height="15" fill="rgb(243,35,44)" fg:x="1516" fg:w="4"/><text x="5.7845%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (4 samples, 0.01%)</title><rect x="5.5345%" y="309" width="0.0146%" height="15" fill="rgb(246,89,9)" fg:x="1516" fg:w="4"/><text x="5.7845%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (4 samples, 0.01%)</title><rect x="5.5345%" y="293" width="0.0146%" height="15" fill="rgb(233,213,13)" fg:x="1516" fg:w="4"/><text x="5.7845%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (4 samples, 0.01%)</title><rect x="5.5345%" y="277" width="0.0146%" height="15" fill="rgb(233,141,41)" fg:x="1516" fg:w="4"/><text x="5.7845%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (4 samples, 0.01%)</title><rect x="5.5345%" y="261" width="0.0146%" height="15" fill="rgb(239,167,4)" fg:x="1516" fg:w="4"/><text x="5.7845%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_add (4 samples, 0.01%)</title><rect x="5.5345%" y="245" width="0.0146%" height="15" fill="rgb(209,217,16)" fg:x="1516" fg:w="4"/><text x="5.7845%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_offset (4 samples, 0.01%)</title><rect x="5.5345%" y="229" width="0.0146%" height="15" fill="rgb(219,88,35)" fg:x="1516" fg:w="4"/><text x="5.7845%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::reserve (3 samples, 0.01%)</title><rect x="5.5491%" y="341" width="0.0110%" height="15" fill="rgb(220,193,23)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::reserve (3 samples, 0.01%)</title><rect x="5.5491%" y="325" width="0.0110%" height="15" fill="rgb(230,90,52)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (3 samples, 0.01%)</title><rect x="5.5491%" y="309" width="0.0110%" height="15" fill="rgb(252,106,19)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (3 samples, 0.01%)</title><rect x="5.5491%" y="293" width="0.0110%" height="15" fill="rgb(206,74,20)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="5.5491%" y="277" width="0.0110%" height="15" fill="rgb(230,138,44)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (3 samples, 0.01%)</title><rect x="5.5491%" y="261" width="0.0110%" height="15" fill="rgb(235,182,43)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (3 samples, 0.01%)</title><rect x="5.5491%" y="245" width="0.0110%" height="15" fill="rgb(242,16,51)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.01%)</title><rect x="5.5491%" y="229" width="0.0110%" height="15" fill="rgb(248,9,4)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (3 samples, 0.01%)</title><rect x="5.5491%" y="213" width="0.0110%" height="15" fill="rgb(210,31,22)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (3 samples, 0.01%)</title><rect x="5.5491%" y="197" width="0.0110%" height="15" fill="rgb(239,54,39)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="207.50"></text></g><g><title>`0x7FFCD9A84B8C (3 samples, 0.01%)</title><rect x="5.5491%" y="181" width="0.0110%" height="15" fill="rgb(230,99,41)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="191.50"></text></g><g><title>`0x7FFCD9A10DC5 (3 samples, 0.01%)</title><rect x="5.5491%" y="165" width="0.0110%" height="15" fill="rgb(253,106,12)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="175.50"></text></g><g><title>`0x7FFCD9A11D19 (3 samples, 0.01%)</title><rect x="5.5491%" y="149" width="0.0110%" height="15" fill="rgb(213,46,41)" fg:x="1520" fg:w="3"/><text x="5.7991%" y="159.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::resize (6 samples, 0.02%)</title><rect x="5.5491%" y="373" width="0.0219%" height="15" fill="rgb(215,133,35)" fg:x="1520" fg:w="6"/><text x="5.7991%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::extend_with (6 samples, 0.02%)</title><rect x="5.5491%" y="357" width="0.0219%" height="15" fill="rgb(213,28,5)" fg:x="1520" fg:w="6"/><text x="5.7991%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::write (3 samples, 0.01%)</title><rect x="5.5600%" y="341" width="0.0110%" height="15" fill="rgb(215,77,49)" fg:x="1523" fg:w="3"/><text x="5.8100%" y="351.50"></text></g><g><title>`0x7FFCBA8C1A89 (3 samples, 0.01%)</title><rect x="5.5600%" y="325" width="0.0110%" height="15" fill="rgb(248,100,22)" fg:x="1523" fg:w="3"/><text x="5.8100%" y="335.50"></text></g><g><title>`0x7FFCD9B418D3 (24 samples, 0.09%)</title><rect x="5.5710%" y="133" width="0.0876%" height="15" fill="rgb(208,67,9)" fg:x="1526" fg:w="24"/><text x="5.8210%" y="143.50"></text></g><g><title>`0x7FFCD9B418D7 (20 samples, 0.07%)</title><rect x="5.6586%" y="133" width="0.0730%" height="15" fill="rgb(219,133,21)" fg:x="1550" fg:w="20"/><text x="5.9086%" y="143.50"></text></g><g><title>`0x7FFCD9A11D19 (47 samples, 0.17%)</title><rect x="5.5710%" y="149" width="0.1716%" height="15" fill="rgb(246,46,29)" fg:x="1526" fg:w="47"/><text x="5.8210%" y="159.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (49 samples, 0.18%)</title><rect x="5.5710%" y="341" width="0.1789%" height="15" fill="rgb(246,185,52)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (49 samples, 0.18%)</title><rect x="5.5710%" y="325" width="0.1789%" height="15" fill="rgb(252,136,11)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (49 samples, 0.18%)</title><rect x="5.5710%" y="309" width="0.1789%" height="15" fill="rgb(219,138,53)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (49 samples, 0.18%)</title><rect x="5.5710%" y="293" width="0.1789%" height="15" fill="rgb(211,51,23)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (49 samples, 0.18%)</title><rect x="5.5710%" y="277" width="0.1789%" height="15" fill="rgb(247,221,28)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (49 samples, 0.18%)</title><rect x="5.5710%" y="261" width="0.1789%" height="15" fill="rgb(251,222,45)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (49 samples, 0.18%)</title><rect x="5.5710%" y="245" width="0.1789%" height="15" fill="rgb(217,162,53)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (49 samples, 0.18%)</title><rect x="5.5710%" y="229" width="0.1789%" height="15" fill="rgb(229,93,14)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (49 samples, 0.18%)</title><rect x="5.5710%" y="213" width="0.1789%" height="15" fill="rgb(209,67,49)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (49 samples, 0.18%)</title><rect x="5.5710%" y="197" width="0.1789%" height="15" fill="rgb(213,87,29)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="207.50"></text></g><g><title>`0x7FFCD9A84B8C (49 samples, 0.18%)</title><rect x="5.5710%" y="181" width="0.1789%" height="15" fill="rgb(205,151,52)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="191.50"></text></g><g><title>`0x7FFCD9A10DC5 (49 samples, 0.18%)</title><rect x="5.5710%" y="165" width="0.1789%" height="15" fill="rgb(253,215,39)" fg:x="1526" fg:w="49"/><text x="5.8210%" y="175.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::resize(unsigned long long, enum2$&lt;core::option::Option (89 samples, 0.32%)</title><rect x="5.5710%" y="373" width="0.3249%" height="15" fill="rgb(221,220,41)" fg:x="1526" fg:w="89"/><text x="5.8210%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::extend_with(unsigned long long, enum2$&lt;core::option::Option (89 samples, 0.32%)</title><rect x="5.5710%" y="357" width="0.3249%" height="15" fill="rgb(218,133,21)" fg:x="1526" fg:w="89"/><text x="5.8210%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;usize&gt; &gt;*, enum2$&lt;core::option::Option (40 samples, 0.15%)</title><rect x="5.7499%" y="341" width="0.1460%" height="15" fill="rgb(221,193,43)" fg:x="1575" fg:w="40"/><text x="5.9999%" y="351.50"></text></g><g><title>`0x7FFCD9B418D3 (37 samples, 0.14%)</title><rect x="5.8995%" y="133" width="0.1351%" height="15" fill="rgb(240,128,52)" fg:x="1616" fg:w="37"/><text x="6.1495%" y="143.50"></text></g><g><title>`0x7FFCD9B418D7 (8 samples, 0.03%)</title><rect x="6.0346%" y="133" width="0.0292%" height="15" fill="rgb(253,114,12)" fg:x="1653" fg:w="8"/><text x="6.2846%" y="143.50"></text></g><g><title>`0x7FFCD9A11D19 (48 samples, 0.18%)</title><rect x="5.8959%" y="149" width="0.1752%" height="15" fill="rgb(215,223,47)" fg:x="1615" fg:w="48"/><text x="6.1459%" y="159.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::reserve (52 samples, 0.19%)</title><rect x="5.8959%" y="341" width="0.1898%" height="15" fill="rgb(248,225,23)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;isize,alloc::alloc::Global&gt;::reserve (52 samples, 0.19%)</title><rect x="5.8959%" y="325" width="0.1898%" height="15" fill="rgb(250,108,0)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (52 samples, 0.19%)</title><rect x="5.8959%" y="309" width="0.1898%" height="15" fill="rgb(228,208,7)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (52 samples, 0.19%)</title><rect x="5.8959%" y="293" width="0.1898%" height="15" fill="rgb(244,45,10)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (52 samples, 0.19%)</title><rect x="5.8959%" y="277" width="0.1898%" height="15" fill="rgb(207,125,25)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (52 samples, 0.19%)</title><rect x="5.8959%" y="261" width="0.1898%" height="15" fill="rgb(210,195,18)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (52 samples, 0.19%)</title><rect x="5.8959%" y="245" width="0.1898%" height="15" fill="rgb(249,80,12)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (52 samples, 0.19%)</title><rect x="5.8959%" y="229" width="0.1898%" height="15" fill="rgb(221,65,9)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (52 samples, 0.19%)</title><rect x="5.8959%" y="213" width="0.1898%" height="15" fill="rgb(235,49,36)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (52 samples, 0.19%)</title><rect x="5.8959%" y="197" width="0.1898%" height="15" fill="rgb(225,32,20)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="207.50"></text></g><g><title>`0x7FFCD9A84B8C (52 samples, 0.19%)</title><rect x="5.8959%" y="181" width="0.1898%" height="15" fill="rgb(215,141,46)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="191.50"></text></g><g><title>`0x7FFCD9A10DC5 (52 samples, 0.19%)</title><rect x="5.8959%" y="165" width="0.1898%" height="15" fill="rgb(250,160,47)" fg:x="1615" fg:w="52"/><text x="6.1459%" y="175.50"></text></g><g><title>`0x7FFCD9A11D2C (4 samples, 0.01%)</title><rect x="6.0711%" y="149" width="0.0146%" height="15" fill="rgb(216,222,40)" fg:x="1663" fg:w="4"/><text x="6.3211%" y="159.50"></text></g><g><title>`0x7FFCD9A0FA02 (4 samples, 0.01%)</title><rect x="6.0711%" y="133" width="0.0146%" height="15" fill="rgb(234,217,39)" fg:x="1663" fg:w="4"/><text x="6.3211%" y="143.50"></text></g><g><title>`0x7FFCD99EC2ED (4 samples, 0.01%)</title><rect x="6.0711%" y="117" width="0.0146%" height="15" fill="rgb(207,178,40)" fg:x="1663" fg:w="4"/><text x="6.3211%" y="127.50"></text></g><g><title>`0x7FFCD9A4F5FF (4 samples, 0.01%)</title><rect x="6.0711%" y="101" width="0.0146%" height="15" fill="rgb(221,136,13)" fg:x="1663" fg:w="4"/><text x="6.3211%" y="111.50"></text></g><g><title>`0x7FFCD9B3C384 (4 samples, 0.01%)</title><rect x="6.0711%" y="85" width="0.0146%" height="15" fill="rgb(249,199,10)" fg:x="1663" fg:w="4"/><text x="6.3211%" y="95.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::resize (98 samples, 0.36%)</title><rect x="5.8959%" y="373" width="0.3578%" height="15" fill="rgb(249,222,13)" fg:x="1615" fg:w="98"/><text x="6.1459%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::extend_with (98 samples, 0.36%)</title><rect x="5.8959%" y="357" width="0.3578%" height="15" fill="rgb(244,185,38)" fg:x="1615" fg:w="98"/><text x="6.1459%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::write (46 samples, 0.17%)</title><rect x="6.0857%" y="341" width="0.1679%" height="15" fill="rgb(236,202,9)" fg:x="1667" fg:w="46"/><text x="6.3357%" y="351.50"></text></g><g><title>`0x7FFCBA8C1A89 (46 samples, 0.17%)</title><rect x="6.0857%" y="325" width="0.1679%" height="15" fill="rgb(250,229,37)" fg:x="1667" fg:w="46"/><text x="6.3357%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::capacity (4 samples, 0.01%)</title><rect x="6.2537%" y="373" width="0.0146%" height="15" fill="rgb(206,174,23)" fg:x="1713" fg:w="4"/><text x="6.5037%" y="383.50"></text></g><g><title>`0x7FFCD9B418D3 (5 samples, 0.02%)</title><rect x="6.2683%" y="133" width="0.0183%" height="15" fill="rgb(211,33,43)" fg:x="1717" fg:w="5"/><text x="6.5183%" y="143.50"></text></g><g><title>`0x7FFCD9B418D7 (10 samples, 0.04%)</title><rect x="6.2865%" y="133" width="0.0365%" height="15" fill="rgb(245,58,50)" fg:x="1722" fg:w="10"/><text x="6.5365%" y="143.50"></text></g><g><title>`0x7FFCD9A11D19 (17 samples, 0.06%)</title><rect x="6.2683%" y="149" width="0.0621%" height="15" fill="rgb(244,68,36)" fg:x="1717" fg:w="17"/><text x="6.5183%" y="159.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::reserve (19 samples, 0.07%)</title><rect x="6.2683%" y="341" width="0.0694%" height="15" fill="rgb(232,229,15)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::reserve (19 samples, 0.07%)</title><rect x="6.2683%" y="325" width="0.0694%" height="15" fill="rgb(254,30,23)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (19 samples, 0.07%)</title><rect x="6.2683%" y="309" width="0.0694%" height="15" fill="rgb(235,160,14)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (19 samples, 0.07%)</title><rect x="6.2683%" y="293" width="0.0694%" height="15" fill="rgb(212,155,44)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (19 samples, 0.07%)</title><rect x="6.2683%" y="277" width="0.0694%" height="15" fill="rgb(226,2,50)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (19 samples, 0.07%)</title><rect x="6.2683%" y="261" width="0.0694%" height="15" fill="rgb(234,177,6)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (19 samples, 0.07%)</title><rect x="6.2683%" y="245" width="0.0694%" height="15" fill="rgb(217,24,9)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (19 samples, 0.07%)</title><rect x="6.2683%" y="229" width="0.0694%" height="15" fill="rgb(220,13,46)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (19 samples, 0.07%)</title><rect x="6.2683%" y="213" width="0.0694%" height="15" fill="rgb(239,221,27)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (19 samples, 0.07%)</title><rect x="6.2683%" y="197" width="0.0694%" height="15" fill="rgb(222,198,25)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="207.50"></text></g><g><title>`0x7FFCD9A84B8C (19 samples, 0.07%)</title><rect x="6.2683%" y="181" width="0.0694%" height="15" fill="rgb(211,99,13)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="191.50"></text></g><g><title>`0x7FFCD9A10DC5 (19 samples, 0.07%)</title><rect x="6.2683%" y="165" width="0.0694%" height="15" fill="rgb(232,111,31)" fg:x="1717" fg:w="19"/><text x="6.5183%" y="175.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::resize (40 samples, 0.15%)</title><rect x="6.2683%" y="373" width="0.1460%" height="15" fill="rgb(245,82,37)" fg:x="1717" fg:w="40"/><text x="6.5183%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::extend_with (40 samples, 0.15%)</title><rect x="6.2683%" y="357" width="0.1460%" height="15" fill="rgb(227,149,46)" fg:x="1717" fg:w="40"/><text x="6.5183%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::write (21 samples, 0.08%)</title><rect x="6.3376%" y="341" width="0.0767%" height="15" fill="rgb(218,36,50)" fg:x="1736" fg:w="21"/><text x="6.5876%" y="351.50"></text></g><g><title>`0x7FFCBA8C1A89 (21 samples, 0.08%)</title><rect x="6.3376%" y="325" width="0.0767%" height="15" fill="rgb(226,80,48)" fg:x="1736" fg:w="21"/><text x="6.5876%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (3 samples, 0.01%)</title><rect x="6.4143%" y="373" width="0.0110%" height="15" fill="rgb(238,224,15)" fg:x="1757" fg:w="3"/><text x="6.6643%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec (3 samples, 0.01%)</title><rect x="6.4143%" y="357" width="0.0110%" height="15" fill="rgb(241,136,10)" fg:x="1757" fg:w="3"/><text x="6.6643%" y="367.50"></text></g><g><title>`0x7FFCD9B418D3 (68 samples, 0.25%)</title><rect x="6.4362%" y="85" width="0.2482%" height="15" fill="rgb(208,32,45)" fg:x="1763" fg:w="68"/><text x="6.6862%" y="95.50"></text></g><g><title>`0x7FFCD9B418D7 (24 samples, 0.09%)</title><rect x="6.6844%" y="85" width="0.0876%" height="15" fill="rgb(207,135,9)" fg:x="1831" fg:w="24"/><text x="6.9344%" y="95.50"></text></g><g><title>`0x7FFCD9B418EB (4 samples, 0.01%)</title><rect x="6.7830%" y="85" width="0.0146%" height="15" fill="rgb(206,86,44)" fg:x="1858" fg:w="4"/><text x="7.0330%" y="95.50"></text></g><g><title>`0x7FFCD9A11D19 (101 samples, 0.37%)</title><rect x="6.4325%" y="101" width="0.3687%" height="15" fill="rgb(245,177,15)" fg:x="1762" fg:w="101"/><text x="6.6825%" y="111.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::default_allocator::impl$9::reallocate_copy(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (105 samples, 0.38%)</title><rect x="6.4325%" y="325" width="0.3833%" height="15" fill="rgb(206,64,50)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;::resize(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (105 samples, 0.38%)</title><rect x="6.4325%" y="309" width="0.3833%" height="15" fill="rgb(234,36,40)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (105 samples, 0.38%)</title><rect x="6.4325%" y="293" width="0.3833%" height="15" fill="rgb(213,64,8)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (105 samples, 0.38%)</title><rect x="6.4325%" y="277" width="0.3833%" height="15" fill="rgb(210,75,36)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (105 samples, 0.38%)</title><rect x="6.4325%" y="261" width="0.3833%" height="15" fill="rgb(229,88,21)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (105 samples, 0.38%)</title><rect x="6.4325%" y="245" width="0.3833%" height="15" fill="rgb(252,204,47)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (105 samples, 0.38%)</title><rect x="6.4325%" y="229" width="0.3833%" height="15" fill="rgb(208,77,27)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (105 samples, 0.38%)</title><rect x="6.4325%" y="213" width="0.3833%" height="15" fill="rgb(221,76,26)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (105 samples, 0.38%)</title><rect x="6.4325%" y="197" width="0.3833%" height="15" fill="rgb(225,139,18)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="207.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (105 samples, 0.38%)</title><rect x="6.4325%" y="181" width="0.3833%" height="15" fill="rgb(230,137,11)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="191.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (105 samples, 0.38%)</title><rect x="6.4325%" y="165" width="0.3833%" height="15" fill="rgb(212,28,1)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="175.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (105 samples, 0.38%)</title><rect x="6.4325%" y="149" width="0.3833%" height="15" fill="rgb(248,164,17)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="159.50"></text></g><g><title>`0x7FFCD9A84B8C (105 samples, 0.38%)</title><rect x="6.4325%" y="133" width="0.3833%" height="15" fill="rgb(222,171,42)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="143.50"></text></g><g><title>`0x7FFCD9A10DC5 (105 samples, 0.38%)</title><rect x="6.4325%" y="117" width="0.3833%" height="15" fill="rgb(243,84,45)" fg:x="1762" fg:w="105"/><text x="6.6825%" y="127.50"></text></g><g><title>`0x7FFCD9A11D2C (4 samples, 0.01%)</title><rect x="6.8013%" y="101" width="0.0146%" height="15" fill="rgb(252,49,23)" fg:x="1863" fg:w="4"/><text x="7.0513%" y="111.50"></text></g><g><title>`0x7FFCD9A0FA02 (4 samples, 0.01%)</title><rect x="6.8013%" y="85" width="0.0146%" height="15" fill="rgb(215,19,7)" fg:x="1863" fg:w="4"/><text x="7.0513%" y="95.50"></text></g><g><title>`0x7FFCD99EC2ED (4 samples, 0.01%)</title><rect x="6.8013%" y="69" width="0.0146%" height="15" fill="rgb(238,81,41)" fg:x="1863" fg:w="4"/><text x="7.0513%" y="79.50"></text></g><g><title>`0x7FFCD9A4F5FF (4 samples, 0.01%)</title><rect x="6.8013%" y="53" width="0.0146%" height="15" fill="rgb(210,199,37)" fg:x="1863" fg:w="4"/><text x="7.0513%" y="63.50"></text></g><g><title>`0x7FFCD9B3C384 (4 samples, 0.01%)</title><rect x="6.8013%" y="37" width="0.0146%" height="15" fill="rgb(244,192,49)" fg:x="1863" fg:w="4"/><text x="7.0513%" y="47.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (224 samples, 0.82%)</title><rect x="6.4325%" y="357" width="0.8178%" height="15" fill="rgb(226,211,11)" fg:x="1762" fg:w="224"/><text x="6.6825%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_generic(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;, nalgebra::base::dimension::Const (224 samples, 0.82%)</title><rect x="6.4325%" y="341" width="0.8178%" height="15" fill="rgb(236,162,54)" fg:x="1762" fg:w="224"/><text x="6.6825%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;::fill_with(nalgebra::base::edition::impl$8::resize_generic::closure_env$0&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;,nalgebra::base::dimension::Const (119 samples, 0.43%)</title><rect x="6.8159%" y="325" width="0.4344%" height="15" fill="rgb(220,229,9)" fg:x="1867" fg:w="119"/><text x="7.0659%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::iter::impl$36::next(nalgebra::base::iter::MatrixIterMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (73 samples, 0.27%)</title><rect x="6.9838%" y="309" width="0.2665%" height="15" fill="rgb(250,87,22)" fg:x="1913" fg:w="73"/><text x="7.2338%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::iter::impl$31::next(nalgebra::base::iter::RawIter&lt;ptr_mut$&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt; &gt;,core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (73 samples, 0.27%)</title><rect x="6.9838%" y="293" width="0.2665%" height="15" fill="rgb(239,43,17)" fg:x="1913" fg:w="73"/><text x="7.2338%" y="303.50"></text></g><g><title>`0x7FFCBA8C007B (3 samples, 0.01%)</title><rect x="7.2503%" y="325" width="0.0110%" height="15" fill="rgb(231,177,25)" fg:x="1986" fg:w="3"/><text x="7.5003%" y="335.50"></text></g><g><title>`0x7FFCBA8C0746 (7 samples, 0.03%)</title><rect x="7.2722%" y="325" width="0.0256%" height="15" fill="rgb(219,179,1)" fg:x="1992" fg:w="7"/><text x="7.5222%" y="335.50"></text></g><g><title>`0x7FFCBA8C075E (35 samples, 0.13%)</title><rect x="7.3014%" y="325" width="0.1278%" height="15" fill="rgb(238,219,53)" fg:x="2000" fg:w="35"/><text x="7.5514%" y="335.50"></text></g><g><title>`0x7FFCBA8C0766 (40 samples, 0.15%)</title><rect x="7.4292%" y="325" width="0.1460%" height="15" fill="rgb(232,167,36)" fg:x="2035" fg:w="40"/><text x="7.6792%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::impl$42::clone(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (90 samples, 0.33%)</title><rect x="7.2503%" y="357" width="0.3286%" height="15" fill="rgb(244,19,51)" fg:x="1986" fg:w="90"/><text x="7.5003%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::vec_storage::impl$23::clone(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (90 samples, 0.33%)</title><rect x="7.2503%" y="341" width="0.3286%" height="15" fill="rgb(224,6,22)" fg:x="1986" fg:w="90"/><text x="7.5003%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally_mut&lt;f64,nalgebra::base::dimension::Const&lt;2&gt; &gt; (320 samples, 1.17%)</title><rect x="6.4325%" y="373" width="1.1682%" height="15" fill="rgb(224,145,5)" fg:x="1762" fg:w="320"/><text x="6.6825%" y="383.50"></text></g><g><title>`0x7FFCD9A0FA02 (6 samples, 0.02%)</title><rect x="7.5789%" y="357" width="0.0219%" height="15" fill="rgb(234,130,49)" fg:x="2076" fg:w="6"/><text x="7.8289%" y="367.50"></text></g><g><title>`0x7FFCD99EC2ED (6 samples, 0.02%)</title><rect x="7.5789%" y="341" width="0.0219%" height="15" fill="rgb(254,6,2)" fg:x="2076" fg:w="6"/><text x="7.8289%" y="351.50"></text></g><g><title>`0x7FFCD9A4F5FF (6 samples, 0.02%)</title><rect x="7.5789%" y="325" width="0.0219%" height="15" fill="rgb(208,96,46)" fg:x="2076" fg:w="6"/><text x="7.8289%" y="335.50"></text></g><g><title>`0x7FFCD9B3C384 (6 samples, 0.02%)</title><rect x="7.5789%" y="309" width="0.0219%" height="15" fill="rgb(239,3,39)" fg:x="2076" fg:w="6"/><text x="7.8289%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::row (3 samples, 0.01%)</title><rect x="7.6008%" y="373" width="0.0110%" height="15" fill="rgb(233,210,1)" fg:x="2082" fg:w="3"/><text x="7.8508%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::fixed_rows (3 samples, 0.01%)</title><rect x="7.6008%" y="357" width="0.0110%" height="15" fill="rgb(244,137,37)" fg:x="2082" fg:w="3"/><text x="7.8508%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::genbox::genbox&lt;1000&gt;(unsigned long long*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, unsigned long long, unsigned long long, long long, double, enum2$&lt;core::option::Option (625 samples, 2.28%)</title><rect x="5.3337%" y="389" width="2.2817%" height="15" fill="rgb(240,136,2)" fg:x="1461" fg:w="625"/><text x="5.5837%" y="399.50">R..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`exp (9 samples, 0.03%)</title><rect x="8.0754%" y="341" width="0.0329%" height="15" fill="rgb(239,18,37)" fg:x="2212" fg:w="9"/><text x="8.3254%" y="351.50"></text></g><g><title>`0x7FFCD75C7C62 (6 samples, 0.02%)</title><rect x="8.1301%" y="341" width="0.0219%" height="15" fill="rgb(218,185,22)" fg:x="2227" fg:w="6"/><text x="8.3801%" y="351.50"></text></g><g><title>`0x7FFCD75C7C97 (6 samples, 0.02%)</title><rect x="8.1630%" y="341" width="0.0219%" height="15" fill="rgb(225,218,4)" fg:x="2236" fg:w="6"/><text x="8.4130%" y="351.50"></text></g><g><title>`0x7FFCD75C7CBE (3 samples, 0.01%)</title><rect x="8.1922%" y="341" width="0.0110%" height="15" fill="rgb(230,182,32)" fg:x="2244" fg:w="3"/><text x="8.4422%" y="351.50"></text></g><g><title>`0x7FFCD75C7CF6 (4 samples, 0.01%)</title><rect x="8.2177%" y="341" width="0.0146%" height="15" fill="rgb(242,56,43)" fg:x="2251" fg:w="4"/><text x="8.4677%" y="351.50"></text></g><g><title>`0x7FFCD75C7D05 (4 samples, 0.01%)</title><rect x="8.2396%" y="341" width="0.0146%" height="15" fill="rgb(233,99,24)" fg:x="2257" fg:w="4"/><text x="8.4896%" y="351.50"></text></g><g><title>`0x7FFCD75C7D1F (8 samples, 0.03%)</title><rect x="8.2542%" y="341" width="0.0292%" height="15" fill="rgb(234,209,42)" fg:x="2261" fg:w="8"/><text x="8.5042%" y="351.50"></text></g><g><title>`0x7FFCD75C7D25 (13 samples, 0.05%)</title><rect x="8.2834%" y="341" width="0.0475%" height="15" fill="rgb(227,7,12)" fg:x="2269" fg:w="13"/><text x="8.5334%" y="351.50"></text></g><g><title>`0x7FFCD75C7D2B (7 samples, 0.03%)</title><rect x="8.3309%" y="341" width="0.0256%" height="15" fill="rgb(245,203,43)" fg:x="2282" fg:w="7"/><text x="8.5809%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::f64::impl$0::exp (90 samples, 0.33%)</title><rect x="8.0498%" y="357" width="0.3286%" height="15" fill="rgb(238,205,33)" fg:x="2205" fg:w="90"/><text x="8.2998%" y="367.50"></text></g><g><title>`0x7FFCD75C7D3A (6 samples, 0.02%)</title><rect x="8.3565%" y="341" width="0.0219%" height="15" fill="rgb(231,56,7)" fg:x="2289" fg:w="6"/><text x="8.6065%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::f64::impl$0::powi (21 samples, 0.08%)</title><rect x="8.3784%" y="357" width="0.0767%" height="15" fill="rgb(244,186,29)" fg:x="2295" fg:w="21"/><text x="8.6284%" y="367.50"></text></g><g><title>`0x7FFCD75C7A09 (4 samples, 0.01%)</title><rect x="8.4587%" y="357" width="0.0146%" height="15" fill="rgb(234,111,31)" fg:x="2317" fg:w="4"/><text x="8.7087%" y="367.50"></text></g><g><title>`0x7FFCD75C7C66 (5 samples, 0.02%)</title><rect x="8.4769%" y="357" width="0.0183%" height="15" fill="rgb(241,149,10)" fg:x="2322" fg:w="5"/><text x="8.7269%" y="367.50"></text></g><g><title>`0x7FFCD75C7CA5 (12 samples, 0.04%)</title><rect x="8.5025%" y="357" width="0.0438%" height="15" fill="rgb(249,206,44)" fg:x="2329" fg:w="12"/><text x="8.7525%" y="367.50"></text></g><g><title>`0x7FFCD75C7CB2 (9 samples, 0.03%)</title><rect x="8.5463%" y="357" width="0.0329%" height="15" fill="rgb(251,153,30)" fg:x="2341" fg:w="9"/><text x="8.7963%" y="367.50"></text></g><g><title>`0x7FFCD75C7CBE (5 samples, 0.02%)</title><rect x="8.5791%" y="357" width="0.0183%" height="15" fill="rgb(239,152,38)" fg:x="2350" fg:w="5"/><text x="8.8291%" y="367.50"></text></g><g><title>`0x7FFCD75C7CDB (7 samples, 0.03%)</title><rect x="8.5974%" y="357" width="0.0256%" height="15" fill="rgb(249,139,47)" fg:x="2355" fg:w="7"/><text x="8.8474%" y="367.50"></text></g><g><title>`0x7FFCD75C7CE4 (9 samples, 0.03%)</title><rect x="8.6230%" y="357" width="0.0329%" height="15" fill="rgb(244,64,35)" fg:x="2362" fg:w="9"/><text x="8.8730%" y="367.50"></text></g><g><title>`0x7FFCD75C7CED (9 samples, 0.03%)</title><rect x="8.6558%" y="357" width="0.0329%" height="15" fill="rgb(216,46,15)" fg:x="2371" fg:w="9"/><text x="8.9058%" y="367.50"></text></g><g><title>`0x7FFCD75C7CF6 (13 samples, 0.05%)</title><rect x="8.6887%" y="357" width="0.0475%" height="15" fill="rgb(250,74,19)" fg:x="2380" fg:w="13"/><text x="8.9387%" y="367.50"></text></g><g><title>`0x7FFCD75C7CFF (6 samples, 0.02%)</title><rect x="8.7361%" y="357" width="0.0219%" height="15" fill="rgb(249,42,33)" fg:x="2393" fg:w="6"/><text x="8.9861%" y="367.50"></text></g><g><title>`0x7FFCD75C7D1F (7 samples, 0.03%)</title><rect x="8.7580%" y="357" width="0.0256%" height="15" fill="rgb(242,149,17)" fg:x="2399" fg:w="7"/><text x="9.0080%" y="367.50"></text></g><g><title>`0x7FFCD75C7D25 (4 samples, 0.01%)</title><rect x="8.7836%" y="357" width="0.0146%" height="15" fill="rgb(244,29,21)" fg:x="2406" fg:w="4"/><text x="9.0336%" y="367.50"></text></g><g><title>`0x7FFCD75C7D2B (6 samples, 0.02%)</title><rect x="8.7982%" y="357" width="0.0219%" height="15" fill="rgb(220,130,37)" fg:x="2410" fg:w="6"/><text x="9.0482%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::split::split(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, double, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, enum2$&lt;core::option::Option (984 samples, 3.59%)</title><rect x="5.2424%" y="405" width="3.5923%" height="15" fill="rgb(211,67,2)" fg:x="1436" fg:w="984"/><text x="5.4924%" y="415.50">Rust..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (333 samples, 1.22%)</title><rect x="7.6190%" y="389" width="1.2157%" height="15" fill="rgb(235,68,52)" fg:x="2087" fg:w="333"/><text x="7.8690%" y="399.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (332 samples, 1.21%)</title><rect x="7.6227%" y="373" width="1.2120%" height="15" fill="rgb(246,142,3)" fg:x="2088" fg:w="332"/><text x="7.8727%" y="383.50"></text></g><g><title>`0x7FFCD75C7D3A (4 samples, 0.01%)</title><rect x="8.8201%" y="357" width="0.0146%" height="15" fill="rgb(241,25,7)" fg:x="2416" fg:w="4"/><text x="9.0701%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::impl$13::index(alloc::vec::Vec (1,103 samples, 4.03%)</title><rect x="33.1338%" y="389" width="4.0267%" height="15" fill="rgb(242,119,39)" fg:x="9076" fg:w="1103"/><text x="33.3838%" y="399.50">Rust..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (1,103 samples, 4.03%)</title><rect x="33.1338%" y="373" width="4.0267%" height="15" fill="rgb(241,98,45)" fg:x="9076" fg:w="1103"/><text x="33.3838%" y="383.50">Rust..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (1,103 samples, 4.03%)</title><rect x="33.1338%" y="357" width="4.0267%" height="15" fill="rgb(254,28,30)" fg:x="9076" fg:w="1103"/><text x="33.3838%" y="367.50">Rust..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::iter::range::impl$6::next(core::ops::range::Range (655 samples, 2.39%)</title><rect x="37.1605%" y="389" width="2.3912%" height="15" fill="rgb(241,142,54)" fg:x="10179" fg:w="655"/><text x="37.4105%" y="399.50">Ru..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (655 samples, 2.39%)</title><rect x="37.1605%" y="373" width="2.3912%" height="15" fill="rgb(222,85,15)" fg:x="10179" fg:w="655"/><text x="37.4105%" y="383.50">Ru..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::cmp::impls::impl$58::lt (655 samples, 2.39%)</title><rect x="37.1605%" y="357" width="2.3912%" height="15" fill="rgb(210,85,47)" fg:x="10179" fg:w="655"/><text x="37.4105%" y="367.50">Ru..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::strtsw::strtsw(enum2$&lt;core::option::Option&lt;usize&gt; &gt;[1000]*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (9,400 samples, 34.32%)</title><rect x="8.8347%" y="405" width="34.3166%" height="15" fill="rgb(224,206,25)" fg:x="2420" fg:w="9400"/><text x="9.0847%" y="415.50">Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::strts..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$0::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (986 samples, 3.60%)</title><rect x="39.5517%" y="389" width="3.5996%" height="15" fill="rgb(243,201,19)" fg:x="10834" fg:w="986"/><text x="39.8017%" y="399.50">Rust..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;*, tuple$ (986 samples, 3.60%)</title><rect x="39.5517%" y="373" width="3.5996%" height="15" fill="rgb(236,59,4)" fg:x="10834" fg:w="986"/><text x="39.8017%" y="383.50">Rust..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;::get_unchecked(tuple$ (68 samples, 0.25%)</title><rect x="42.9030%" y="357" width="0.2482%" height="15" fill="rgb(254,179,45)" fg:x="11752" fg:w="68"/><text x="43.1530%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (68 samples, 0.25%)</title><rect x="42.9030%" y="341" width="0.2482%" height="15" fill="rgb(226,14,10)" fg:x="11752" fg:w="68"/><text x="43.1530%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (68 samples, 0.25%)</title><rect x="42.9030%" y="325" width="0.2482%" height="15" fill="rgb(244,27,41)" fg:x="11752" fg:w="68"/><text x="43.1530%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (68 samples, 0.25%)</title><rect x="42.9030%" y="309" width="0.2482%" height="15" fill="rgb(235,35,32)" fg:x="11752" fg:w="68"/><text x="43.1530%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (68 samples, 0.25%)</title><rect x="42.9030%" y="293" width="0.2482%" height="15" fill="rgb(218,68,31)" fg:x="11752" fg:w="68"/><text x="43.1530%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_add (68 samples, 0.25%)</title><rect x="42.9030%" y="277" width="0.2482%" height="15" fill="rgb(207,120,37)" fg:x="11752" fg:w="68"/><text x="43.1530%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_offset (68 samples, 0.25%)</title><rect x="42.9030%" y="261" width="0.2482%" height="15" fill="rgb(227,98,0)" fg:x="11752" fg:w="68"/><text x="43.1530%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::impl$13::index(alloc::vec::Vec (4 samples, 0.01%)</title><rect x="43.1622%" y="405" width="0.0146%" height="15" fill="rgb(207,7,3)" fg:x="11823" fg:w="4"/><text x="43.4122%" y="415.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (4 samples, 0.01%)</title><rect x="43.1622%" y="389" width="0.0146%" height="15" fill="rgb(206,98,19)" fg:x="11823" fg:w="4"/><text x="43.4122%" y="399.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (4 samples, 0.01%)</title><rect x="43.1622%" y="373" width="0.0146%" height="15" fill="rgb(217,5,26)" fg:x="11823" fg:w="4"/><text x="43.4122%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec (4 samples, 0.01%)</title><rect x="43.1768%" y="389" width="0.0146%" height="15" fill="rgb(235,190,38)" fg:x="11827" fg:w="4"/><text x="43.4268%" y="399.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_mut_slice (4 samples, 0.01%)</title><rect x="43.1768%" y="373" width="0.0146%" height="15" fill="rgb(247,86,24)" fg:x="11827" fg:w="4"/><text x="43.4268%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_mut_ptr (4 samples, 0.01%)</title><rect x="43.1768%" y="357" width="0.0146%" height="15" fill="rgb(205,101,16)" fg:x="11827" fg:w="4"/><text x="43.4268%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::ptr (4 samples, 0.01%)</title><rect x="43.1768%" y="341" width="0.0146%" height="15" fill="rgb(246,168,33)" fg:x="11827" fg:w="4"/><text x="43.4268%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.01%)</title><rect x="43.1768%" y="325" width="0.0146%" height="15" fill="rgb(231,114,1)" fg:x="11827" fg:w="4"/><text x="43.4268%" y="335.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.01%)</title><rect x="43.1768%" y="309" width="0.0146%" height="15" fill="rgb(207,184,53)" fg:x="11827" fg:w="4"/><text x="43.4268%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (51 samples, 0.19%)</title><rect x="43.1768%" y="405" width="0.1862%" height="15" fill="rgb(224,95,51)" fg:x="11827" fg:w="51"/><text x="43.4268%" y="415.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (47 samples, 0.17%)</title><rect x="43.1914%" y="389" width="0.1716%" height="15" fill="rgb(212,188,45)" fg:x="11831" fg:w="47"/><text x="43.4414%" y="399.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (47 samples, 0.17%)</title><rect x="43.1914%" y="373" width="0.1716%" height="15" fill="rgb(223,154,38)" fg:x="11831" fg:w="47"/><text x="43.4414%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::splrnk::splrnk&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (46 samples, 0.17%)</title><rect x="43.1951%" y="357" width="0.1679%" height="15" fill="rgb(251,22,52)" fg:x="11832" fg:w="46"/><text x="43.4451%" y="367.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::split::split2 (34 samples, 0.12%)</title><rect x="43.2389%" y="341" width="0.1241%" height="15" fill="rgb(229,209,22)" fg:x="11844" fg:w="34"/><text x="43.4889%" y="351.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::drop_in_place(alloc::vec::Vec (4 samples, 0.01%)</title><rect x="43.3667%" y="405" width="0.0146%" height="15" fill="rgb(234,138,34)" fg:x="11879" fg:w="4"/><text x="43.6167%" y="415.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (4 samples, 0.01%)</title><rect x="43.3667%" y="389" width="0.0146%" height="15" fill="rgb(212,95,11)" fg:x="11879" fg:w="4"/><text x="43.6167%" y="399.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (4 samples, 0.01%)</title><rect x="43.3667%" y="373" width="0.0146%" height="15" fill="rgb(240,179,47)" fg:x="11879" fg:w="4"/><text x="43.6167%" y="383.50"></text></g><g><title>`0x7FFCD9A0FA02 (3 samples, 0.01%)</title><rect x="43.3703%" y="357" width="0.0110%" height="15" fill="rgb(240,163,11)" fg:x="11880" fg:w="3"/><text x="43.6203%" y="367.50"></text></g><g><title>`0x7FFCD99EC2ED (3 samples, 0.01%)</title><rect x="43.3703%" y="341" width="0.0110%" height="15" fill="rgb(236,37,12)" fg:x="11880" fg:w="3"/><text x="43.6203%" y="351.50"></text></g><g><title>`0x7FFCD9A4F5FF (3 samples, 0.01%)</title><rect x="43.3703%" y="325" width="0.0110%" height="15" fill="rgb(232,164,16)" fg:x="11880" fg:w="3"/><text x="43.6203%" y="335.50"></text></g><g><title>`0x7FFCD9B3C384 (3 samples, 0.01%)</title><rect x="43.3703%" y="309" width="0.0110%" height="15" fill="rgb(244,205,15)" fg:x="11880" fg:w="3"/><text x="43.6203%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::iter::traits::iterator::Iterator::fold(nalgebra::base::iter::MatrixIter&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;, unsigned long long, nalgebra::base::min_max::impl$0::min::closure_env$1&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (6 samples, 0.02%)</title><rect x="43.4032%" y="373" width="0.0219%" height="15" fill="rgb(223,117,47)" fg:x="11889" fg:w="6"/><text x="43.6532%" y="383.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::split::split1 (30 samples, 0.11%)</title><rect x="60.2913%" y="309" width="0.1095%" height="15" fill="rgb(244,107,35)" fg:x="16515" fg:w="30"/><text x="60.5413%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::updtf::updtf&lt;6&gt;(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (5,673 samples, 20.71%)</title><rect x="60.4008%" y="309" width="20.7104%" height="15" fill="rgb(205,140,8)" fg:x="16545" fg:w="5673"/><text x="60.6508%" y="319.50">Rust_MCS-a0646e080707cc03.exe`Rus..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::vertex::vert1 (535 samples, 1.95%)</title><rect x="81.1113%" y="309" width="1.9531%" height="15" fill="rgb(228,84,46)" fg:x="22218" fg:w="535"/><text x="81.3613%" y="319.50">R..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::vertex::vert2 (5 samples, 0.02%)</title><rect x="83.0644%" y="309" width="0.0183%" height="15" fill="rgb(254,188,9)" fg:x="22753" fg:w="5"/><text x="83.3144%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (14 samples, 0.05%)</title><rect x="83.1666%" y="293" width="0.0511%" height="15" fill="rgb(206,112,54)" fg:x="22781" fg:w="14"/><text x="83.4166%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::get_unchecked(tuple$ (12 samples, 0.04%)</title><rect x="83.1739%" y="277" width="0.0438%" height="15" fill="rgb(216,84,49)" fg:x="22783" fg:w="12"/><text x="83.4239%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (12 samples, 0.04%)</title><rect x="83.1739%" y="261" width="0.0438%" height="15" fill="rgb(214,194,35)" fg:x="22783" fg:w="12"/><text x="83.4239%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (12 samples, 0.04%)</title><rect x="83.1739%" y="245" width="0.0438%" height="15" fill="rgb(249,28,3)" fg:x="22783" fg:w="12"/><text x="83.4239%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (12 samples, 0.04%)</title><rect x="83.1739%" y="229" width="0.0438%" height="15" fill="rgb(222,56,52)" fg:x="22783" fg:w="12"/><text x="83.4239%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (12 samples, 0.04%)</title><rect x="83.1739%" y="213" width="0.0438%" height="15" fill="rgb(245,217,50)" fg:x="22783" fg:w="12"/><text x="83.4239%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_add (12 samples, 0.04%)</title><rect x="83.1739%" y="197" width="0.0438%" height="15" fill="rgb(213,201,24)" fg:x="22783" fg:w="12"/><text x="83.4239%" y="207.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_offset (12 samples, 0.04%)</title><rect x="83.1739%" y="181" width="0.0438%" height="15" fill="rgb(248,116,28)" fg:x="22783" fg:w="12"/><text x="83.4239%" y="191.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::vertex::vert3(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (44 samples, 0.16%)</title><rect x="83.0827%" y="309" width="0.1606%" height="15" fill="rgb(219,72,43)" fg:x="22758" fg:w="44"/><text x="83.3327%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, tuple$ (7 samples, 0.03%)</title><rect x="83.2177%" y="293" width="0.0256%" height="15" fill="rgb(209,138,14)" fg:x="22795" fg:w="7"/><text x="83.4677%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;::get_unchecked(tuple$ (7 samples, 0.03%)</title><rect x="83.2177%" y="277" width="0.0256%" height="15" fill="rgb(222,18,33)" fg:x="22795" fg:w="7"/><text x="83.4677%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage (7 samples, 0.03%)</title><rect x="83.2177%" y="261" width="0.0256%" height="15" fill="rgb(213,199,7)" fg:x="22795" fg:w="7"/><text x="83.4677%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::array_storage::ArrayStorage (7 samples, 0.03%)</title><rect x="83.2177%" y="245" width="0.0256%" height="15" fill="rgb(250,110,10)" fg:x="22795" fg:w="7"/><text x="83.4677%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::array_storage::ArrayStorage (7 samples, 0.03%)</title><rect x="83.2177%" y="229" width="0.0256%" height="15" fill="rgb(248,123,6)" fg:x="22795" fg:w="7"/><text x="83.4677%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::array_storage::ArrayStorage (7 samples, 0.03%)</title><rect x="83.2177%" y="213" width="0.0256%" height="15" fill="rgb(206,91,31)" fg:x="22795" fg:w="7"/><text x="83.4677%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_add (7 samples, 0.03%)</title><rect x="83.2177%" y="197" width="0.0256%" height="15" fill="rgb(211,154,13)" fg:x="22795" fg:w="7"/><text x="83.4677%" y="207.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_offset (7 samples, 0.03%)</title><rect x="83.2177%" y="181" width="0.0256%" height="15" fill="rgb(225,148,7)" fg:x="22795" fg:w="7"/><text x="83.4677%" y="191.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::num::impl$5::is_negative (15 samples, 0.05%)</title><rect x="87.2262%" y="293" width="0.0548%" height="15" fill="rgb(220,160,43)" fg:x="23893" fg:w="15"/><text x="87.4762%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::impl$13::index(alloc::vec::Vec (3,351 samples, 12.23%)</title><rect x="83.2433%" y="309" width="12.2335%" height="15" fill="rgb(213,52,39)" fg:x="22802" fg:w="3351"/><text x="83.4933%" y="319.50">Rust_MCS-a0646e080..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (2,245 samples, 8.20%)</title><rect x="87.2810%" y="293" width="8.1958%" height="15" fill="rgb(243,137,7)" fg:x="23908" fg:w="2245"/><text x="87.5310%" y="303.50">Rust_MCS-a0..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (2,245 samples, 8.20%)</title><rect x="87.2810%" y="277" width="8.1958%" height="15" fill="rgb(230,79,13)" fg:x="23908" fg:w="2245"/><text x="87.5310%" y="287.50">Rust_MCS-a0..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (657 samples, 2.40%)</title><rect x="95.4768%" y="309" width="2.3985%" height="15" fill="rgb(247,105,23)" fg:x="26153" fg:w="657"/><text x="95.7268%" y="319.50">Ru..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (335 samples, 1.22%)</title><rect x="96.6523%" y="293" width="1.2230%" height="15" fill="rgb(223,179,41)" fg:x="26475" fg:w="335"/><text x="96.9023%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (335 samples, 1.22%)</title><rect x="96.6523%" y="277" width="1.2230%" height="15" fill="rgb(218,9,34)" fg:x="26475" fg:w="335"/><text x="96.9023%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`ceil (9 samples, 0.03%)</title><rect x="97.8753%" y="309" width="0.0329%" height="15" fill="rgb(222,106,8)" fg:x="26810" fg:w="9"/><text x="98.1253%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`floor (10 samples, 0.04%)</title><rect x="97.9118%" y="309" width="0.0365%" height="15" fill="rgb(211,220,0)" fg:x="26820" fg:w="10"/><text x="98.1618%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;::fill (10 samples, 0.04%)</title><rect x="97.9483%" y="309" width="0.0365%" height="15" fill="rgb(229,52,16)" fg:x="26830" fg:w="10"/><text x="98.1983%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;::fill (3 samples, 0.01%)</title><rect x="97.9848%" y="309" width="0.0110%" height="15" fill="rgb(212,155,18)" fg:x="26840" fg:w="3"/><text x="98.2348%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (358 samples, 1.31%)</title><rect x="97.9958%" y="309" width="1.3070%" height="15" fill="rgb(242,21,14)" fg:x="26843" fg:w="358"/><text x="98.2458%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::get_unchecked(tuple$ (5 samples, 0.02%)</title><rect x="99.2845%" y="293" width="0.0183%" height="15" fill="rgb(222,19,48)" fg:x="27196" fg:w="5"/><text x="99.5345%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (5 samples, 0.02%)</title><rect x="99.2845%" y="277" width="0.0183%" height="15" fill="rgb(232,45,27)" fg:x="27196" fg:w="5"/><text x="99.5345%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (5 samples, 0.02%)</title><rect x="99.2845%" y="261" width="0.0183%" height="15" fill="rgb(249,103,42)" fg:x="27196" fg:w="5"/><text x="99.5345%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (5 samples, 0.02%)</title><rect x="99.2845%" y="245" width="0.0183%" height="15" fill="rgb(246,81,33)" fg:x="27196" fg:w="5"/><text x="99.5345%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (5 samples, 0.02%)</title><rect x="99.2845%" y="229" width="0.0183%" height="15" fill="rgb(252,33,42)" fg:x="27196" fg:w="5"/><text x="99.5345%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_add (5 samples, 0.02%)</title><rect x="99.2845%" y="213" width="0.0183%" height="15" fill="rgb(209,212,41)" fg:x="27196" fg:w="5"/><text x="99.5345%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_offset (5 samples, 0.02%)</title><rect x="99.2845%" y="197" width="0.0183%" height="15" fill="rgb(207,154,6)" fg:x="27196" fg:w="5"/><text x="99.5345%" y="207.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (9 samples, 0.03%)</title><rect x="99.3027%" y="309" width="0.0329%" height="15" fill="rgb(223,64,47)" fg:x="27201" fg:w="9"/><text x="99.5527%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, tuple$ (13 samples, 0.05%)</title><rect x="99.3356%" y="309" width="0.0475%" height="15" fill="rgb(211,161,38)" fg:x="27210" fg:w="13"/><text x="99.5856%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;::get_unchecked(tuple$ (6 samples, 0.02%)</title><rect x="99.3611%" y="293" width="0.0219%" height="15" fill="rgb(219,138,40)" fg:x="27217" fg:w="6"/><text x="99.6111%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage (6 samples, 0.02%)</title><rect x="99.3611%" y="277" width="0.0219%" height="15" fill="rgb(241,228,46)" fg:x="27217" fg:w="6"/><text x="99.6111%" y="287.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::array_storage::ArrayStorage (6 samples, 0.02%)</title><rect x="99.3611%" y="261" width="0.0219%" height="15" fill="rgb(223,209,38)" fg:x="27217" fg:w="6"/><text x="99.6111%" y="271.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::array_storage::ArrayStorage (6 samples, 0.02%)</title><rect x="99.3611%" y="245" width="0.0219%" height="15" fill="rgb(236,164,45)" fg:x="27217" fg:w="6"/><text x="99.6111%" y="255.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::array_storage::ArrayStorage (6 samples, 0.02%)</title><rect x="99.3611%" y="229" width="0.0219%" height="15" fill="rgb(231,15,5)" fg:x="27217" fg:w="6"/><text x="99.6111%" y="239.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_add (6 samples, 0.02%)</title><rect x="99.3611%" y="213" width="0.0219%" height="15" fill="rgb(252,35,15)" fg:x="27217" fg:w="6"/><text x="99.6111%" y="223.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::const_ptr::impl$0::wrapping_offset (6 samples, 0.02%)</title><rect x="99.3611%" y="197" width="0.0219%" height="15" fill="rgb(248,181,18)" fg:x="27217" fg:w="6"/><text x="99.6111%" y="207.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$2::index_mut(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (42 samples, 0.15%)</title><rect x="99.3830%" y="309" width="0.1533%" height="15" fill="rgb(233,39,42)" fg:x="27223" fg:w="42"/><text x="99.6330%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, tuple$ (42 samples, 0.15%)</title><rect x="99.3830%" y="293" width="0.1533%" height="15" fill="rgb(238,110,33)" fg:x="27223" fg:w="42"/><text x="99.6330%" y="303.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::f64::impl$0::ceil (22 samples, 0.08%)</title><rect x="99.5364%" y="309" width="0.0803%" height="15" fill="rgb(233,195,10)" fg:x="27265" fg:w="22"/><text x="99.7864%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::f64::impl$0::floor (17 samples, 0.06%)</title><rect x="99.6167%" y="309" width="0.0621%" height="15" fill="rgb(254,105,3)" fg:x="27287" fg:w="17"/><text x="99.8667%" y="319.50"></text></g><g><title>`0x7FFCD75C8106 (41 samples, 0.15%)</title><rect x="99.6824%" y="309" width="0.1497%" height="15" fill="rgb(221,225,9)" fg:x="27305" fg:w="41"/><text x="99.9324%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;::min (15,471 samples, 56.48%)</title><rect x="43.4032%" y="405" width="56.4800%" height="15" fill="rgb(224,227,45)" fg:x="11889" fg:w="15471"/><text x="43.6532%" y="415.50">Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension:..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;::fold_with(nalgebra::base::min_max::impl$0::min::closure_env$0&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;, nalgebra::base::min_max::impl$0::min::closure_env$1&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (15,471 samples, 56.48%)</title><rect x="43.4032%" y="389" width="56.4800%" height="15" fill="rgb(229,198,43)" fg:x="11889" fg:w="15471"/><text x="43.6532%" y="399.50">Rust_MCS-a0646e080707cc03.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension:..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::min_max::impl$0::min::closure$0(nalgebra::base::min_max::impl$0::min::closure_env$0&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;, enum2$&lt;core::option::Option&lt;ref$ (15,465 samples, 56.46%)</title><rect x="43.4251%" y="373" width="56.4581%" height="15" fill="rgb(206,209,35)" fg:x="11895" fg:w="15465"/><text x="43.6751%" y="383.50">Rust_MCS-a0646e080707cc03.exe`nalgebra::base::min_max::impl$0::min::closure$0(nalgebra::base:..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`enum2$&lt;core::option::Option&lt;ref$&lt;usize&gt; &gt; &gt;::cloned(enum2$&lt;core::option::Option&lt;ref$ (15,465 samples, 56.46%)</title><rect x="43.4251%" y="357" width="56.4581%" height="15" fill="rgb(245,195,53)" fg:x="11895" fg:w="15465"/><text x="43.6751%" y="367.50">Rust_MCS-a0646e080707cc03.exe`enum2$&lt;core::option::Option&lt;ref$&lt;usize&gt; &gt; &gt;::cloned(enum2$&lt;core..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::clone::impls::impl$5::clone (15,465 samples, 56.46%)</title><rect x="43.4251%" y="341" width="56.4581%" height="15" fill="rgb(240,92,26)" fg:x="11895" fg:w="15465"/><text x="43.6751%" y="351.50">Rust_MCS-a0646e080707cc03.exe`core::clone::impls::impl$5::clone</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::vertex::vertex&lt;6&gt;(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (15,465 samples, 56.46%)</title><rect x="43.4251%" y="325" width="56.4581%" height="15" fill="rgb(207,40,23)" fg:x="11895" fg:w="15465"/><text x="43.6751%" y="335.50">Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs_utils::vertex::vertex&lt;6&gt;(unsigned long long, nalg..</text></g><g><title>`0x7FFCD7617040 (10 samples, 0.04%)</title><rect x="99.8467%" y="309" width="0.0365%" height="15" fill="rgb(223,111,35)" fg:x="27350" fg:w="10"/><text x="100.0967%" y="319.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$0::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (7 samples, 0.03%)</title><rect x="99.8832%" y="405" width="0.0256%" height="15" fill="rgb(229,147,28)" fg:x="27360" fg:w="7"/><text x="100.1332%" y="415.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, tuple$ (7 samples, 0.03%)</title><rect x="99.8832%" y="389" width="0.0256%" height="15" fill="rgb(211,29,28)" fg:x="27360" fg:w="7"/><text x="100.1332%" y="399.50"></text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (27,361 samples, 99.89%)</title><rect x="0.0329%" y="837" width="99.8868%" height="15" fill="rgb(228,72,33)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="847.50">Rust_MCS-a0646e080707cc03.exe`std::sys::pal::windows::thread::impl$0::new::thread_start</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::boxed::impl$28::call_once (27,361 samples, 99.89%)</title><rect x="0.0329%" y="821" width="99.8868%" height="15" fill="rgb(205,214,31)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="831.50">Rust_MCS-a0646e080707cc03.exe`alloc::boxed::impl$28::call_once</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::boxed::impl$28::call_once (27,361 samples, 99.89%)</title><rect x="0.0329%" y="805" width="99.8868%" height="15" fill="rgb(224,111,15)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="815.50">Rust_MCS-a0646e080707cc03.exe`alloc::boxed::impl$28::call_once</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::boxed::impl$8::drop (27,361 samples, 99.89%)</title><rect x="0.0329%" y="789" width="99.8868%" height="15" fill="rgb(253,21,26)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="799.50">Rust_MCS-a0646e080707cc03.exe`alloc::boxed::impl$8::drop</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::alloc::layout::Layout::for_value_raw (27,361 samples, 99.89%)</title><rect x="0.0329%" y="773" width="99.8868%" height="15" fill="rgb(245,139,43)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="783.50">Rust_MCS-a0646e080707cc03.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::mem::size_of_val_raw (27,361 samples, 99.89%)</title><rect x="0.0329%" y="757" width="99.8868%" height="15" fill="rgb(252,170,7)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="767.50">Rust_MCS-a0646e080707cc03.exe`core::mem::size_of_val_raw</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt; (27,361 samples, 99.89%)</title><rect x="0.0329%" y="741" width="99.8868%" height="15" fill="rgb(231,118,14)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="751.50">Rust_MCS-a0646e080707cc03.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;,tupl..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::thread::impl$0::spawn_unchecked_::closure$1 (27,361 samples, 99.89%)</title><rect x="0.0329%" y="725" width="99.8868%" height="15" fill="rgb(238,83,0)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="735.50">Rust_MCS-a0646e080707cc03.exe`std::thread::impl$0::spawn_unchecked_::closure$1</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::sync::impl$29::deref (27,361 samples, 99.89%)</title><rect x="0.0329%" y="709" width="99.8868%" height="15" fill="rgb(221,39,39)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="719.50">Rust_MCS-a0646e080707cc03.exe`alloc::sync::impl$29::deref</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`alloc::sync::Arc::inner (27,361 samples, 99.89%)</title><rect x="0.0329%" y="693" width="99.8868%" height="15" fill="rgb(222,119,46)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="703.50">Rust_MCS-a0646e080707cc03.exe`alloc::sync::Arc::inner</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::non_null::NonNull::as_ref (27,361 samples, 99.89%)</title><rect x="0.0329%" y="677" width="99.8868%" height="15" fill="rgb(222,165,49)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="687.50">Rust_MCS-a0646e080707cc03.exe`core::ptr::non_null::NonNull::as_ref</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt; (27,361 samples, 99.89%)</title><rect x="0.0329%" y="661" width="99.8868%" height="15" fill="rgb(219,113,52)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="671.50">Rust_MCS-a0646e080707cc03.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`test::run_test::closure$1 (27,361 samples, 99.89%)</title><rect x="0.0329%" y="645" width="99.8868%" height="15" fill="rgb(214,7,15)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="655.50">Rust_MCS-a0646e080707cc03.exe`test::run_test::closure$1</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ptr::drop_in_place (27,361 samples, 99.89%)</title><rect x="0.0329%" y="629" width="99.8868%" height="15" fill="rgb(235,32,4)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="639.50">Rust_MCS-a0646e080707cc03.exe`core::ptr::drop_in_place</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::sync::poison::mutex::impl$14::drop (27,361 samples, 99.89%)</title><rect x="0.0329%" y="613" width="99.8868%" height="15" fill="rgb(238,90,54)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="623.50">Rust_MCS-a0646e080707cc03.exe`std::sync::poison::mutex::impl$14::drop</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::sync::poison::Flag::done (27,361 samples, 99.89%)</title><rect x="0.0329%" y="597" width="99.8868%" height="15" fill="rgb(213,208,19)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="607.50">Rust_MCS-a0646e080707cc03.exe`std::sync::poison::Flag::done</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`test::run_test::closure$0 (27,361 samples, 99.89%)</title><rect x="0.0329%" y="581" width="99.8868%" height="15" fill="rgb(233,156,4)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="591.50">Rust_MCS-a0646e080707cc03.exe`test::run_test::closure$0</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`test::run_test_in_process (27,361 samples, 99.89%)</title><rect x="0.0329%" y="565" width="99.8868%" height="15" fill="rgb(207,194,5)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="575.50">Rust_MCS-a0646e080707cc03.exe`test::run_test_in_process</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::panic::catch_unwind (27,361 samples, 99.89%)</title><rect x="0.0329%" y="549" width="99.8868%" height="15" fill="rgb(206,111,30)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="559.50">Rust_MCS-a0646e080707cc03.exe`std::panic::catch_unwind</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::panicking::try (27,361 samples, 99.89%)</title><rect x="0.0329%" y="533" width="99.8868%" height="15" fill="rgb(243,70,54)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="543.50">Rust_MCS-a0646e080707cc03.exe`std::panicking::try</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`std::panicking::try::do_call (27,361 samples, 99.89%)</title><rect x="0.0329%" y="517" width="99.8868%" height="15" fill="rgb(242,28,8)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="527.50">Rust_MCS-a0646e080707cc03.exe`std::panicking::try::do_call</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`test::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt; (*)()&gt; (27,361 samples, 99.89%)</title><rect x="0.0329%" y="501" width="99.8868%" height="15" fill="rgb(219,106,18)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="511.50">Rust_MCS-a0646e080707cc03.exe`test::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,all..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`core::ops::function::FnOnce::call_once&lt;Rust_MCS::tests::test_for_flamegraph_0::closure_env$0,tuple$&lt;&gt; &gt; (27,361 samples, 99.89%)</title><rect x="0.0329%" y="485" width="99.8868%" height="15" fill="rgb(244,222,10)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="495.50">Rust_MCS-a0646e080707cc03.exe`core::ops::function::FnOnce::call_once&lt;Rust_MCS::tests::test_for_flamegraph_0::closure_env$0,tuple$&lt;&gt; &gt;</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::tests::test_for_flamegraph_0::closure$0 (27,361 samples, 99.89%)</title><rect x="0.0329%" y="469" width="99.8868%" height="15" fill="rgb(236,179,52)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="479.50">Rust_MCS-a0646e080707cc03.exe`Rust_MCS::tests::test_for_flamegraph_0::closure$0</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::tests::test_for_flamegraph_0 (27,361 samples, 99.89%)</title><rect x="0.0329%" y="453" width="99.8868%" height="15" fill="rgb(213,23,39)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="463.50">Rust_MCS-a0646e080707cc03.exe`Rust_MCS::tests::test_for_flamegraph_0</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,f64,alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;,alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;,usize,usize,Rust_MCS::ExitFlagEnum&gt;,alloc::string::String&gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;tuple$&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,f64,alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;,alloc::vec::Vec (27,361 samples, 99.89%)</title><rect x="0.0329%" y="437" width="99.8868%" height="15" fill="rgb(238,48,10)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="447.50">Rust_MCS-a0646e080707cc03.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Cons..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs&lt;1000,6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, unsigned long long, unsigned long long, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (27,361 samples, 99.89%)</title><rect x="0.0329%" y="421" width="99.8868%" height="15" fill="rgb(251,196,23)" fg:x="9" fg:w="27361"/><text x="0.2829%" y="431.50">Rust_MCS-a0646e080707cc03.exe`Rust_MCS::mcs&lt;1000,6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;..</text></g><g><title>Rust_MCS-a0646e080707cc03.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (3 samples, 0.01%)</title><rect x="99.9087%" y="405" width="0.0110%" height="15" fill="rgb(250,152,24)" fg:x="27367" fg:w="3"/><text x="100.1587%" y="415.50"></text></g><g><title>`0x7FFCD865E8D7 (27,373 samples, 99.93%)</title><rect x="0.0000%" y="853" width="99.9306%" height="15" fill="rgb(209,150,17)" fg:x="0" fg:w="27373"/><text x="0.2500%" y="863.50">`0x7FFCD865E8D7</text></g><g><title>`0x7FFCD9A914FC (27,374 samples, 99.93%)</title><rect x="0.0000%" y="869" width="99.9343%" height="15" fill="rgb(234,202,34)" fg:x="0" fg:w="27374"/><text x="0.2500%" y="879.50">`0x7FFCD9A914FC</text></g><g><title>`0x7FFCD9A36002 (3 samples, 0.01%)</title><rect x="99.9525%" y="757" width="0.0110%" height="15" fill="rgb(253,148,53)" fg:x="27379" fg:w="3"/><text x="100.2025%" y="767.50"></text></g><g><title>`0x7FFCD9A216E7 (3 samples, 0.01%)</title><rect x="99.9525%" y="741" width="0.0110%" height="15" fill="rgb(218,129,16)" fg:x="27379" fg:w="3"/><text x="100.2025%" y="751.50"></text></g><g><title>`0x7FFCD9A2EBD1 (3 samples, 0.01%)</title><rect x="99.9525%" y="725" width="0.0110%" height="15" fill="rgb(216,85,19)" fg:x="27379" fg:w="3"/><text x="100.2025%" y="735.50"></text></g><g><title>`0x7FFCD9A5F33C (5 samples, 0.02%)</title><rect x="99.9525%" y="805" width="0.0183%" height="15" fill="rgb(235,228,7)" fg:x="27379" fg:w="5"/><text x="100.2025%" y="815.50"></text></g><g><title>`0x7FFCD99F9B30 (5 samples, 0.02%)</title><rect x="99.9525%" y="789" width="0.0183%" height="15" fill="rgb(245,175,0)" fg:x="27379" fg:w="5"/><text x="100.2025%" y="799.50"></text></g><g><title>`0x7FFCD9A35CA0 (5 samples, 0.02%)</title><rect x="99.9525%" y="773" width="0.0183%" height="15" fill="rgb(208,168,36)" fg:x="27379" fg:w="5"/><text x="100.2025%" y="783.50"></text></g><g><title>`0x7FFCD9A8A145 (6 samples, 0.02%)</title><rect x="99.9525%" y="821" width="0.0219%" height="15" fill="rgb(246,171,24)" fg:x="27379" fg:w="6"/><text x="100.2025%" y="831.50"></text></g><g><title>all (27,392 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(215,142,24)" fg:x="0" fg:w="27392"/><text x="0.2500%" y="895.50"></text></g><g><title>`0x7FFCD9ACB1EE (17 samples, 0.06%)</title><rect x="99.9379%" y="869" width="0.0621%" height="15" fill="rgb(250,187,7)" fg:x="27375" fg:w="17"/><text x="100.1879%" y="879.50"></text></g><g><title>`0x7FFCD9AF98FB (16 samples, 0.06%)</title><rect x="99.9416%" y="853" width="0.0584%" height="15" fill="rgb(228,66,33)" fg:x="27376" fg:w="16"/><text x="100.1916%" y="863.50"></text></g><g><title>`0x7FFCD9A88540 (16 samples, 0.06%)</title><rect x="99.9416%" y="837" width="0.0584%" height="15" fill="rgb(234,215,21)" fg:x="27376" fg:w="16"/><text x="100.1916%" y="847.50"></text></g></svg></svg>