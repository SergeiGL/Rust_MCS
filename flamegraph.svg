<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="3501"><g><title>`0x7FFAC8D114D0 (2 samples, 0.06%)</title><rect x="0.0000%" y="917" width="0.0571%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="927.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::thread::spawnhook::add_spawn_hook (1 samples, 0.03%)</title><rect x="0.0571%" y="629" width="0.0286%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="0.3071%" y="639.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::thread::local::LocalKey::with (1 samples, 0.03%)</title><rect x="0.0571%" y="613" width="0.0286%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.3071%" y="623.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::thread::local::LocalKey::try_with (1 samples, 0.03%)</title><rect x="0.0571%" y="597" width="0.0286%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.3071%" y="607.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="0.0571%" y="581" width="0.0286%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.3071%" y="591.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::thread::spawnhook::SPAWN_HOOKS::constant$0::closure$0 (1 samples, 0.03%)</title><rect x="0.0571%" y="565" width="0.0286%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.3071%" y="575.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::thread_local::native::eager::Storage::get (1 samples, 0.03%)</title><rect x="0.0571%" y="549" width="0.0286%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.3071%" y="559.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::thread_local::native::eager::Storage::initialize (1 samples, 0.03%)</title><rect x="0.0571%" y="533" width="0.0286%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.3071%" y="543.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::cell::Cell::set (1 samples, 0.03%)</title><rect x="0.0571%" y="517" width="0.0286%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.3071%" y="527.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::cell::Cell::replace (1 samples, 0.03%)</title><rect x="0.0571%" y="501" width="0.0286%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.3071%" y="511.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::mem::replace (1 samples, 0.03%)</title><rect x="0.0571%" y="485" width="0.0286%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.3071%" y="495.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="0.0571%" y="469" width="0.0286%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="0.3071%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::thread_local::destructors::list::register (1 samples, 0.03%)</title><rect x="0.0571%" y="453" width="0.0286%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="0.3071%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::formatters::pretty::impl$1::write_run_finish&lt;std::io::stdio::Stdout&gt; (1 samples, 0.03%)</title><rect x="0.0857%" y="613" width="0.0286%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="0.3357%" y="623.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::formatters::pretty::PrettyFormatter::write_pretty (1 samples, 0.03%)</title><rect x="0.0857%" y="597" width="0.0286%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="0.3357%" y="607.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="0.0857%" y="581" width="0.0286%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="0.3357%" y="591.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::term::win::impl$2::fg&lt;std::io::stdio::Stdout&gt; (1 samples, 0.03%)</title><rect x="0.0857%" y="565" width="0.0286%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.3357%" y="575.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::term::win::WinConsole::apply&lt;std::io::stdio::Stdout&gt; (1 samples, 0.03%)</title><rect x="0.0857%" y="549" width="0.0286%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.3357%" y="559.50"></text></g><g><title>`0x7FFAC6756541 (1 samples, 0.03%)</title><rect x="0.0857%" y="533" width="0.0286%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="0.3357%" y="543.50"></text></g><g><title>`0x7FFAC675681E (1 samples, 0.03%)</title><rect x="0.0857%" y="517" width="0.0286%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="0.3357%" y="527.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place (3 samples, 0.09%)</title><rect x="0.0571%" y="693" width="0.0857%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="3"/><text x="0.3071%" y="703.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$25::drop (3 samples, 0.09%)</title><rect x="0.0571%" y="677" width="0.0857%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="3"/><text x="0.3071%" y="687.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place (3 samples, 0.09%)</title><rect x="0.0571%" y="661" width="0.0857%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="3"/><text x="0.3071%" y="671.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::test_main (3 samples, 0.09%)</title><rect x="0.0571%" y="645" width="0.0857%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="3"/><text x="0.3071%" y="655.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::console::run_tests_console (2 samples, 0.06%)</title><rect x="0.0857%" y="629" width="0.0571%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="2"/><text x="0.3357%" y="639.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::run_tests (1 samples, 0.03%)</title><rect x="0.1143%" y="613" width="0.0286%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="1"/><text x="0.3643%" y="623.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="0.1143%" y="597" width="0.0286%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="1"/><text x="0.3643%" y="607.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::console::run_tests_console::closure$2 (1 samples, 0.03%)</title><rect x="0.1143%" y="581" width="0.0286%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="1"/><text x="0.3643%" y="591.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::console::on_test_event (1 samples, 0.03%)</title><rect x="0.1143%" y="565" width="0.0286%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="1"/><text x="0.3643%" y="575.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::formatters::pretty::impl$1::write_result&lt;std::io::stdio::Stdout&gt; (1 samples, 0.03%)</title><rect x="0.1143%" y="549" width="0.0286%" height="15" fill="rgb(232,36,49)" fg:x="4" fg:w="1"/><text x="0.3643%" y="559.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="0.1143%" y="533" width="0.0286%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="1"/><text x="0.3643%" y="543.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::formatters::pretty::PrettyFormatter::write_test_name&lt;std::io::stdio::Stdout&gt; (1 samples, 0.03%)</title><rect x="0.1143%" y="517" width="0.0286%" height="15" fill="rgb(229,88,8)" fg:x="4" fg:w="1"/><text x="0.3643%" y="527.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::formatters::pretty::PrettyFormatter::write_plain (1 samples, 0.03%)</title><rect x="0.1143%" y="501" width="0.0286%" height="15" fill="rgb(213,181,19)" fg:x="4" fg:w="1"/><text x="0.3643%" y="511.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::console::impl$0::flush (1 samples, 0.03%)</title><rect x="0.1143%" y="485" width="0.0286%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="1"/><text x="0.3643%" y="495.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::io::impls::impl$5::flush (1 samples, 0.03%)</title><rect x="0.1143%" y="469" width="0.0286%" height="15" fill="rgb(241,83,37)" fg:x="4" fg:w="1"/><text x="0.3643%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::io::stdio::impl$15::flush (1 samples, 0.03%)</title><rect x="0.1143%" y="453" width="0.0286%" height="15" fill="rgb(233,36,39)" fg:x="4" fg:w="1"/><text x="0.3643%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::io::stdio::impl$16::flush (1 samples, 0.03%)</title><rect x="0.1143%" y="437" width="0.0286%" height="15" fill="rgb(226,3,54)" fg:x="4" fg:w="1"/><text x="0.3643%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::io::stdio::impl$19::flush (1 samples, 0.03%)</title><rect x="0.1143%" y="421" width="0.0286%" height="15" fill="rgb(245,192,40)" fg:x="4" fg:w="1"/><text x="0.3643%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.1143%" y="405" width="0.0286%" height="15" fill="rgb(238,167,29)" fg:x="4" fg:w="1"/><text x="0.3643%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.1143%" y="389" width="0.0286%" height="15" fill="rgb(232,182,51)" fg:x="4" fg:w="1"/><text x="0.3643%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::cell::impl$44::drop (1 samples, 0.03%)</title><rect x="0.1143%" y="373" width="0.0286%" height="15" fill="rgb(231,60,39)" fg:x="4" fg:w="1"/><text x="0.3643%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::cell::Cell::set (1 samples, 0.03%)</title><rect x="0.1143%" y="357" width="0.0286%" height="15" fill="rgb(208,69,12)" fg:x="4" fg:w="1"/><text x="0.3643%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::cell::Cell::replace (1 samples, 0.03%)</title><rect x="0.1143%" y="341" width="0.0286%" height="15" fill="rgb(235,93,37)" fg:x="4" fg:w="1"/><text x="0.3643%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::mem::replace (1 samples, 0.03%)</title><rect x="0.1143%" y="325" width="0.0286%" height="15" fill="rgb(213,116,39)" fg:x="4" fg:w="1"/><text x="0.3643%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="0.1143%" y="309" width="0.0286%" height="15" fill="rgb(222,207,29)" fg:x="4" fg:w="1"/><text x="0.3643%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (1 samples, 0.03%)</title><rect x="0.1143%" y="293" width="0.0286%" height="15" fill="rgb(206,96,30)" fg:x="4" fg:w="1"/><text x="0.3643%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::io::stdio::impl$1::write (1 samples, 0.03%)</title><rect x="0.1143%" y="277" width="0.0286%" height="15" fill="rgb(218,138,4)" fg:x="4" fg:w="1"/><text x="0.3643%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::io::stdio::handle_ebadf (1 samples, 0.03%)</title><rect x="0.1143%" y="261" width="0.0286%" height="15" fill="rgb(250,191,14)" fg:x="4" fg:w="1"/><text x="0.3643%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::pal::windows::stdio::write (1 samples, 0.03%)</title><rect x="0.1143%" y="245" width="0.0286%" height="15" fill="rgb(239,60,40)" fg:x="4" fg:w="1"/><text x="0.3643%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::pal::windows::stdio::is_console (1 samples, 0.03%)</title><rect x="0.1143%" y="229" width="0.0286%" height="15" fill="rgb(206,27,48)" fg:x="4" fg:w="1"/><text x="0.3643%" y="239.50"></text></g><g><title>`0x7FFAC67878C2 (1 samples, 0.03%)</title><rect x="0.1143%" y="213" width="0.0286%" height="15" fill="rgb(225,35,8)" fg:x="4" fg:w="1"/><text x="0.3643%" y="223.50"></text></g><g><title>`0x7FFAC8DBC0A4 (1 samples, 0.03%)</title><rect x="0.1143%" y="197" width="0.0286%" height="15" fill="rgb(250,213,24)" fg:x="4" fg:w="1"/><text x="0.3643%" y="207.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`invoke_main() (4 samples, 0.11%)</title><rect x="0.0571%" y="869" width="0.1143%" height="15" fill="rgb(247,123,22)" fg:x="2" fg:w="4"/><text x="0.3071%" y="879.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`main (4 samples, 0.11%)</title><rect x="0.0571%" y="853" width="0.1143%" height="15" fill="rgb(231,138,38)" fg:x="2" fg:w="4"/><text x="0.3071%" y="863.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::rt::lang_start_internal (4 samples, 0.11%)</title><rect x="0.0571%" y="837" width="0.1143%" height="15" fill="rgb(231,145,46)" fg:x="2" fg:w="4"/><text x="0.3071%" y="847.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::panic::catch_unwind (4 samples, 0.11%)</title><rect x="0.0571%" y="821" width="0.1143%" height="15" fill="rgb(251,118,11)" fg:x="2" fg:w="4"/><text x="0.3071%" y="831.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::panicking::try (4 samples, 0.11%)</title><rect x="0.0571%" y="805" width="0.1143%" height="15" fill="rgb(217,147,25)" fg:x="2" fg:w="4"/><text x="0.3071%" y="815.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::panicking::try::do_call (4 samples, 0.11%)</title><rect x="0.0571%" y="789" width="0.1143%" height="15" fill="rgb(247,81,37)" fg:x="2" fg:w="4"/><text x="0.3071%" y="799.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::rt::lang_start_internal::closure$1 (4 samples, 0.11%)</title><rect x="0.0571%" y="773" width="0.1143%" height="15" fill="rgb(209,12,38)" fg:x="2" fg:w="4"/><text x="0.3071%" y="783.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::panic::catch_unwind (4 samples, 0.11%)</title><rect x="0.0571%" y="757" width="0.1143%" height="15" fill="rgb(227,1,9)" fg:x="2" fg:w="4"/><text x="0.3071%" y="767.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (4 samples, 0.11%)</title><rect x="0.0571%" y="741" width="0.1143%" height="15" fill="rgb(248,47,43)" fg:x="2" fg:w="4"/><text x="0.3071%" y="751.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (4 samples, 0.11%)</title><rect x="0.0571%" y="725" width="0.1143%" height="15" fill="rgb(221,10,30)" fg:x="2" fg:w="4"/><text x="0.3071%" y="735.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::test_main_static (4 samples, 0.11%)</title><rect x="0.0571%" y="709" width="0.1143%" height="15" fill="rgb(210,229,1)" fg:x="2" fg:w="4"/><text x="0.3071%" y="719.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::env::args (1 samples, 0.03%)</title><rect x="0.1428%" y="693" width="0.0286%" height="15" fill="rgb(222,148,37)" fg:x="5" fg:w="1"/><text x="0.3928%" y="703.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::env::args_os (1 samples, 0.03%)</title><rect x="0.1428%" y="677" width="0.0286%" height="15" fill="rgb(234,67,33)" fg:x="5" fg:w="1"/><text x="0.3928%" y="687.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::pal::windows::args::args (1 samples, 0.03%)</title><rect x="0.1428%" y="661" width="0.0286%" height="15" fill="rgb(247,98,35)" fg:x="5" fg:w="1"/><text x="0.3928%" y="671.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::pal::windows::args::parse_lp_cmd_line (1 samples, 0.03%)</title><rect x="0.1428%" y="645" width="0.0286%" height="15" fill="rgb(247,138,52)" fg:x="5" fg:w="1"/><text x="0.3928%" y="655.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec::push (1 samples, 0.03%)</title><rect x="0.1428%" y="629" width="0.0286%" height="15" fill="rgb(213,79,30)" fg:x="5" fg:w="1"/><text x="0.3928%" y="639.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="0.1428%" y="613" width="0.0286%" height="15" fill="rgb(246,177,23)" fg:x="5" fg:w="1"/><text x="0.3928%" y="623.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.03%)</title><rect x="0.1428%" y="597" width="0.0286%" height="15" fill="rgb(230,62,27)" fg:x="5" fg:w="1"/><text x="0.3928%" y="607.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.03%)</title><rect x="0.1428%" y="581" width="0.0286%" height="15" fill="rgb(216,154,8)" fg:x="5" fg:w="1"/><text x="0.3928%" y="591.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="0.1428%" y="565" width="0.0286%" height="15" fill="rgb(244,35,45)" fg:x="5" fg:w="1"/><text x="0.3928%" y="575.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="0.1428%" y="549" width="0.0286%" height="15" fill="rgb(251,115,12)" fg:x="5" fg:w="1"/><text x="0.3928%" y="559.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::grow (1 samples, 0.03%)</title><rect x="0.1428%" y="533" width="0.0286%" height="15" fill="rgb(240,54,50)" fg:x="5" fg:w="1"/><text x="0.3928%" y="543.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="0.1428%" y="517" width="0.0286%" height="15" fill="rgb(233,84,52)" fg:x="5" fg:w="1"/><text x="0.3928%" y="527.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="0.1428%" y="501" width="0.0286%" height="15" fill="rgb(207,117,47)" fg:x="5" fg:w="1"/><text x="0.3928%" y="511.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="0.1428%" y="485" width="0.0286%" height="15" fill="rgb(249,43,39)" fg:x="5" fg:w="1"/><text x="0.3928%" y="495.50"></text></g><g><title>`0x7FFAC8CB6002 (1 samples, 0.03%)</title><rect x="0.1714%" y="757" width="0.0286%" height="15" fill="rgb(209,38,44)" fg:x="6" fg:w="1"/><text x="0.4214%" y="767.50"></text></g><g><title>`0x7FFAC8CA14FA (1 samples, 0.03%)</title><rect x="0.1714%" y="741" width="0.0286%" height="15" fill="rgb(236,212,23)" fg:x="6" fg:w="1"/><text x="0.4214%" y="751.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="0.1714%" y="725" width="0.0286%" height="15" fill="rgb(242,79,21)" fg:x="6" fg:w="1"/><text x="0.4214%" y="735.50"></text></g><g><title>`0x7FFAC8C67DBE (1 samples, 0.03%)</title><rect x="0.1714%" y="709" width="0.0286%" height="15" fill="rgb(211,96,35)" fg:x="6" fg:w="1"/><text x="0.4214%" y="719.50"></text></g><g><title>`0x7FFAC8CD1EB3 (1 samples, 0.03%)</title><rect x="0.1714%" y="693" width="0.0286%" height="15" fill="rgb(253,215,40)" fg:x="6" fg:w="1"/><text x="0.4214%" y="703.50"></text></g><g><title>`0x7FFAC8CB05EE (1 samples, 0.03%)</title><rect x="0.1999%" y="693" width="0.0286%" height="15" fill="rgb(211,81,21)" fg:x="7" fg:w="1"/><text x="0.4499%" y="703.50"></text></g><g><title>`0x7FFAC8CB0ABA (1 samples, 0.03%)</title><rect x="0.1999%" y="677" width="0.0286%" height="15" fill="rgb(208,190,38)" fg:x="7" fg:w="1"/><text x="0.4499%" y="687.50"></text></g><g><title>`0x7FFAC8DBC4C4 (1 samples, 0.03%)</title><rect x="0.1999%" y="661" width="0.0286%" height="15" fill="rgb(235,213,38)" fg:x="7" fg:w="1"/><text x="0.4499%" y="671.50"></text></g><g><title>`0x7FFAC8CB6020 (2 samples, 0.06%)</title><rect x="0.1999%" y="757" width="0.0571%" height="15" fill="rgb(237,122,38)" fg:x="7" fg:w="2"/><text x="0.4499%" y="767.50"></text></g><g><title>`0x7FFAC8CABCF4 (2 samples, 0.06%)</title><rect x="0.1999%" y="741" width="0.0571%" height="15" fill="rgb(244,218,35)" fg:x="7" fg:w="2"/><text x="0.4499%" y="751.50"></text></g><g><title>`0x7FFAC8CAC2DD (2 samples, 0.06%)</title><rect x="0.1999%" y="725" width="0.0571%" height="15" fill="rgb(240,68,47)" fg:x="7" fg:w="2"/><text x="0.4499%" y="735.50"></text></g><g><title>`0x7FFAC8CAD42C (2 samples, 0.06%)</title><rect x="0.1999%" y="709" width="0.0571%" height="15" fill="rgb(210,16,53)" fg:x="7" fg:w="2"/><text x="0.4499%" y="719.50"></text></g><g><title>`0x7FFAC8CB0739 (1 samples, 0.03%)</title><rect x="0.2285%" y="693" width="0.0286%" height="15" fill="rgb(235,124,12)" fg:x="8" fg:w="1"/><text x="0.4785%" y="703.50"></text></g><g><title>`0x7FFAC8CB75CE (1 samples, 0.03%)</title><rect x="0.2285%" y="677" width="0.0286%" height="15" fill="rgb(224,169,11)" fg:x="8" fg:w="1"/><text x="0.4785%" y="687.50"></text></g><g><title>`0x7FFAC8CB93EB (1 samples, 0.03%)</title><rect x="0.2285%" y="661" width="0.0286%" height="15" fill="rgb(250,166,2)" fg:x="8" fg:w="1"/><text x="0.4785%" y="671.50"></text></g><g><title>`0x7FFAC8CAEBD1 (1 samples, 0.03%)</title><rect x="0.2285%" y="645" width="0.0286%" height="15" fill="rgb(242,216,29)" fg:x="8" fg:w="1"/><text x="0.4785%" y="655.50"></text></g><g><title>`0x7FFAC8CB0739 (1 samples, 0.03%)</title><rect x="0.2285%" y="629" width="0.0286%" height="15" fill="rgb(230,116,27)" fg:x="8" fg:w="1"/><text x="0.4785%" y="639.50"></text></g><g><title>`0x7FFAC8CB7534 (1 samples, 0.03%)</title><rect x="0.2285%" y="613" width="0.0286%" height="15" fill="rgb(228,99,48)" fg:x="8" fg:w="1"/><text x="0.4785%" y="623.50"></text></g><g><title>`0x7FFAC649423B (4 samples, 0.11%)</title><rect x="0.1714%" y="837" width="0.1143%" height="15" fill="rgb(253,11,6)" fg:x="6" fg:w="4"/><text x="0.4214%" y="847.50"></text></g><g><title>`0x7FFAC64F6225 (4 samples, 0.11%)</title><rect x="0.1714%" y="821" width="0.1143%" height="15" fill="rgb(247,143,39)" fg:x="6" fg:w="4"/><text x="0.4214%" y="831.50"></text></g><g><title>`0x7FFAC66A2446 (4 samples, 0.11%)</title><rect x="0.1714%" y="805" width="0.1143%" height="15" fill="rgb(236,97,10)" fg:x="6" fg:w="4"/><text x="0.4214%" y="815.50"></text></g><g><title>`0x7FFAC8C79B30 (4 samples, 0.11%)</title><rect x="0.1714%" y="789" width="0.1143%" height="15" fill="rgb(233,208,19)" fg:x="6" fg:w="4"/><text x="0.4214%" y="799.50"></text></g><g><title>`0x7FFAC8CB5CA0 (4 samples, 0.11%)</title><rect x="0.1714%" y="773" width="0.1143%" height="15" fill="rgb(216,164,2)" fg:x="6" fg:w="4"/><text x="0.4214%" y="783.50"></text></g><g><title>`0x7FFAC8CB6094 (1 samples, 0.03%)</title><rect x="0.2571%" y="757" width="0.0286%" height="15" fill="rgb(220,129,5)" fg:x="9" fg:w="1"/><text x="0.5071%" y="767.50"></text></g><g><title>`0x7FFAC8C96E7B (1 samples, 0.03%)</title><rect x="0.2571%" y="741" width="0.0286%" height="15" fill="rgb(242,17,10)" fg:x="9" fg:w="1"/><text x="0.5071%" y="751.50"></text></g><g><title>`0x7FFAC8C96D46 (1 samples, 0.03%)</title><rect x="0.2571%" y="725" width="0.0286%" height="15" fill="rgb(242,107,0)" fg:x="9" fg:w="1"/><text x="0.5071%" y="735.50"></text></g><g><title>`0x7FFAC8C96D1A (1 samples, 0.03%)</title><rect x="0.2571%" y="709" width="0.0286%" height="15" fill="rgb(251,28,31)" fg:x="9" fg:w="1"/><text x="0.5071%" y="719.50"></text></g><g><title>`0x7FFAC8C97BDC (1 samples, 0.03%)</title><rect x="0.2571%" y="693" width="0.0286%" height="15" fill="rgb(233,223,10)" fg:x="9" fg:w="1"/><text x="0.5071%" y="703.50"></text></g><g><title>`0x7FFAC8C98830 (1 samples, 0.03%)</title><rect x="0.2571%" y="677" width="0.0286%" height="15" fill="rgb(215,21,27)" fg:x="9" fg:w="1"/><text x="0.5071%" y="687.50"></text></g><g><title>`0x7FFAC8AA7A41 (1 samples, 0.03%)</title><rect x="0.2571%" y="661" width="0.0286%" height="15" fill="rgb(232,23,21)" fg:x="9" fg:w="1"/><text x="0.5071%" y="671.50"></text></g><g><title>`0x7FFAC8AD4608 (1 samples, 0.03%)</title><rect x="0.2571%" y="645" width="0.0286%" height="15" fill="rgb(244,5,23)" fg:x="9" fg:w="1"/><text x="0.5071%" y="655.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`__scrt_common_main_seh() (9 samples, 0.26%)</title><rect x="0.0571%" y="885" width="0.2571%" height="15" fill="rgb(226,81,46)" fg:x="2" fg:w="9"/><text x="0.3071%" y="895.50"></text></g><g><title>`0x7FFAC6520046 (5 samples, 0.14%)</title><rect x="0.1714%" y="869" width="0.1428%" height="15" fill="rgb(247,70,30)" fg:x="6" fg:w="5"/><text x="0.4214%" y="879.50"></text></g><g><title>`0x7FFAC650553D (5 samples, 0.14%)</title><rect x="0.1714%" y="853" width="0.1428%" height="15" fill="rgb(212,68,19)" fg:x="6" fg:w="5"/><text x="0.4214%" y="863.50"></text></g><g><title>`0x7FFAC6494252 (1 samples, 0.03%)</title><rect x="0.2856%" y="837" width="0.0286%" height="15" fill="rgb(240,187,13)" fg:x="10" fg:w="1"/><text x="0.5356%" y="847.50"></text></g><g><title>`0x7FFAC66C5A22 (1 samples, 0.03%)</title><rect x="0.2856%" y="821" width="0.0286%" height="15" fill="rgb(223,113,26)" fg:x="10" fg:w="1"/><text x="0.5356%" y="831.50"></text></g><g><title>`0x7FFAC8C9EFA0 (1 samples, 0.03%)</title><rect x="0.2856%" y="805" width="0.0286%" height="15" fill="rgb(206,192,2)" fg:x="10" fg:w="1"/><text x="0.5356%" y="815.50"></text></g><g><title>`0x7FFAC8C78873 (1 samples, 0.03%)</title><rect x="0.2856%" y="789" width="0.0286%" height="15" fill="rgb(241,108,4)" fg:x="10" fg:w="1"/><text x="0.5356%" y="799.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="0.6855%" y="453" width="0.0286%" height="15" fill="rgb(247,173,49)" fg:x="24" fg:w="1"/><text x="0.9355%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::f64::impl$0::exp (1 samples, 0.03%)</title><rect x="0.6855%" y="437" width="0.0286%" height="15" fill="rgb(224,114,35)" fg:x="24" fg:w="1"/><text x="0.9355%" y="447.50"></text></g><g><title>`0x7FFAC6527D1F (1 samples, 0.03%)</title><rect x="0.6855%" y="421" width="0.0286%" height="15" fill="rgb(245,159,27)" fg:x="24" fg:w="1"/><text x="0.9355%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::basket_func::basket&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, Rust_MCS::StopStruct*, enum2$&lt;core::option::Option (2 samples, 0.06%)</title><rect x="0.6855%" y="469" width="0.0571%" height="15" fill="rgb(245,172,44)" fg:x="24" fg:w="2"/><text x="0.9355%" y="479.50"></text></g><g><title>`0x7FFAC8C8F3C0 (1 samples, 0.03%)</title><rect x="0.7141%" y="453" width="0.0286%" height="15" fill="rgb(236,23,11)" fg:x="25" fg:w="1"/><text x="0.9641%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::chk_locks::chkloc(ref$&lt;slice2$&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt; &gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="0.7426%" y="469" width="0.0286%" height="15" fill="rgb(205,117,38)" fg:x="26" fg:w="1"/><text x="0.9926%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::iter::impl$182::any(core::slice::iter::Iter&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;*, Rust_MCS::mcs_utils::chk_locks::chkloc::closure_env$0 (1 samples, 0.03%)</title><rect x="0.7426%" y="453" width="0.0286%" height="15" fill="rgb(237,72,25)" fg:x="26" fg:w="1"/><text x="0.9926%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::chk_locks::chkloc::closure$0(Rust_MCS::mcs_utils::chk_locks::chkloc::closure_env$0&lt;6&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="0.7426%" y="437" width="0.0286%" height="15" fill="rgb(244,70,9)" fg:x="26" fg:w="1"/><text x="0.9926%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::cmp::impls::impl$9::eq(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;**, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="0.7426%" y="421" width="0.0286%" height="15" fill="rgb(217,125,39)" fg:x="26" fg:w="1"/><text x="0.9926%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::impl$31::eq(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="0.7426%" y="405" width="0.0286%" height="15" fill="rgb(235,36,10)" fg:x="26" fg:w="1"/><text x="0.9926%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::all(core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;*, nalgebra::base::matrix::impl$31::eq::closure_env$0&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="0.7426%" y="389" width="0.0286%" height="15" fill="rgb(251,123,47)" fg:x="26" fg:w="1"/><text x="0.9926%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::try_fold(core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::all::check::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,nalgebra::base::matrix::impl$31::eq::closure_env$0&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="0.7426%" y="373" width="0.0286%" height="15" fill="rgb(221,13,13)" fg:x="26" fg:w="1"/><text x="0.9926%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="0.7998%" y="389" width="0.0286%" height="15" fill="rgb(238,131,9)" fg:x="28" fg:w="1"/><text x="1.0498%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.7998%" y="373" width="0.0286%" height="15" fill="rgb(211,50,8)" fg:x="28" fg:w="1"/><text x="1.0498%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.7998%" y="357" width="0.0286%" height="15" fill="rgb(245,182,24)" fg:x="28" fg:w="1"/><text x="1.0498%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.7998%" y="341" width="0.0286%" height="15" fill="rgb(242,14,37)" fg:x="28" fg:w="1"/><text x="1.0498%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="0.7998%" y="325" width="0.0286%" height="15" fill="rgb(246,228,12)" fg:x="28" fg:w="1"/><text x="1.0498%" y="335.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="0.7998%" y="309" width="0.0286%" height="15" fill="rgb(213,55,15)" fg:x="28" fg:w="1"/><text x="1.0498%" y="319.50"></text></g><g><title>`0x7FFAC8C67B74 (1 samples, 0.03%)</title><rect x="0.7998%" y="293" width="0.0286%" height="15" fill="rgb(209,9,3)" fg:x="28" fg:w="1"/><text x="1.0498%" y="303.50"></text></g><g><title>`0x7FFAC8C68307 (1 samples, 0.03%)</title><rect x="0.7998%" y="277" width="0.0286%" height="15" fill="rgb(230,59,30)" fg:x="28" fg:w="1"/><text x="1.0498%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.8283%" y="325" width="0.0286%" height="15" fill="rgb(209,121,21)" fg:x="29" fg:w="1"/><text x="1.0783%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.8283%" y="309" width="0.0286%" height="15" fill="rgb(220,109,13)" fg:x="29" fg:w="1"/><text x="1.0783%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="0.8283%" y="293" width="0.0286%" height="15" fill="rgb(232,18,1)" fg:x="29" fg:w="1"/><text x="1.0783%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="0.8283%" y="277" width="0.0286%" height="15" fill="rgb(215,41,42)" fg:x="29" fg:w="1"/><text x="1.0783%" y="287.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="0.8283%" y="261" width="0.0286%" height="15" fill="rgb(224,123,36)" fg:x="29" fg:w="1"/><text x="1.0783%" y="271.50"></text></g><g><title>`0x7FFAC8C67B74 (1 samples, 0.03%)</title><rect x="0.8283%" y="245" width="0.0286%" height="15" fill="rgb(240,125,3)" fg:x="29" fg:w="1"/><text x="1.0783%" y="255.50"></text></g><g><title>`0x7FFAC8C681A2 (1 samples, 0.03%)</title><rect x="0.8283%" y="229" width="0.0286%" height="15" fill="rgb(205,98,50)" fg:x="29" fg:w="1"/><text x="1.0783%" y="239.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (2 samples, 0.06%)</title><rect x="0.8283%" y="389" width="0.0571%" height="15" fill="rgb(205,185,37)" fg:x="29" fg:w="2"/><text x="1.0783%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (2 samples, 0.06%)</title><rect x="0.8283%" y="373" width="0.0571%" height="15" fill="rgb(238,207,15)" fg:x="29" fg:w="2"/><text x="1.0783%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (2 samples, 0.06%)</title><rect x="0.8283%" y="357" width="0.0571%" height="15" fill="rgb(213,199,42)" fg:x="29" fg:w="2"/><text x="1.0783%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (2 samples, 0.06%)</title><rect x="0.8283%" y="341" width="0.0571%" height="15" fill="rgb(235,201,11)" fg:x="29" fg:w="2"/><text x="1.0783%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::const_ptr::impl$0::copy_to_nonoverlapping (1 samples, 0.03%)</title><rect x="0.8569%" y="325" width="0.0286%" height="15" fill="rgb(207,46,11)" fg:x="30" fg:w="1"/><text x="1.1069%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="0.8569%" y="309" width="0.0286%" height="15" fill="rgb(241,35,35)" fg:x="30" fg:w="1"/><text x="1.1069%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$13::index(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="0.8855%" y="389" width="0.0286%" height="15" fill="rgb(243,32,47)" fg:x="31" fg:w="1"/><text x="1.1355%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="0.8855%" y="373" width="0.0286%" height="15" fill="rgb(247,202,23)" fg:x="31" fg:w="1"/><text x="1.1355%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="0.8855%" y="357" width="0.0286%" height="15" fill="rgb(219,102,11)" fg:x="31" fg:w="1"/><text x="1.1355%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (5 samples, 0.14%)</title><rect x="0.7998%" y="405" width="0.1428%" height="15" fill="rgb(243,110,44)" fg:x="28" fg:w="5"/><text x="1.0498%" y="415.50"></text></g><g><title>`0x7FFAC8C8FA02 (1 samples, 0.03%)</title><rect x="0.9140%" y="389" width="0.0286%" height="15" fill="rgb(222,74,54)" fg:x="32" fg:w="1"/><text x="1.1640%" y="399.50"></text></g><g><title>`0x7FFAC8C6BB3D (1 samples, 0.03%)</title><rect x="0.9140%" y="373" width="0.0286%" height="15" fill="rgb(216,99,12)" fg:x="32" fg:w="1"/><text x="1.1640%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lsdescent::lsdescent&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double*, double*, double*, double*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool*, alloc::vec::Vec (6 samples, 0.17%)</title><rect x="0.7998%" y="421" width="0.1714%" height="15" fill="rgb(226,22,26)" fg:x="28" fg:w="6"/><text x="1.0498%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="0.9426%" y="405" width="0.0286%" height="15" fill="rgb(217,163,10)" fg:x="33" fg:w="1"/><text x="1.1926%" y="415.50"></text></g><g><title>`0x7FFAC6527CE4 (1 samples, 0.03%)</title><rect x="0.9426%" y="389" width="0.0286%" height="15" fill="rgb(213,25,53)" fg:x="33" fg:w="1"/><text x="1.1926%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lsguard::lsguard(double*, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="0.9712%" y="405" width="0.0286%" height="15" fill="rgb(252,105,26)" fg:x="34" fg:w="1"/><text x="1.2212%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::f64::impl$0::max (1 samples, 0.03%)</title><rect x="0.9712%" y="389" width="0.0286%" height="15" fill="rgb(220,39,43)" fg:x="34" fg:w="1"/><text x="1.2212%" y="399.50"></text></g><g><title>`0x7FFAC8C8F4B3 (1 samples, 0.03%)</title><rect x="0.9997%" y="389" width="0.0286%" height="15" fill="rgb(229,68,48)" fg:x="35" fg:w="1"/><text x="1.2497%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (2 samples, 0.06%)</title><rect x="0.9997%" y="405" width="0.0571%" height="15" fill="rgb(252,8,32)" fg:x="35" fg:w="2"/><text x="1.2497%" y="415.50"></text></g><g><title>`0x7FFAC8C8F5A6 (1 samples, 0.03%)</title><rect x="1.0283%" y="389" width="0.0286%" height="15" fill="rgb(223,20,43)" fg:x="36" fg:w="1"/><text x="1.2783%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="1.0568%" y="405" width="0.0286%" height="15" fill="rgb(229,81,49)" fg:x="37" fg:w="1"/><text x="1.3068%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec::grow_one&lt;f64,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="1.0568%" y="389" width="0.0286%" height="15" fill="rgb(236,28,36)" fg:x="37" fg:w="1"/><text x="1.3068%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.03%)</title><rect x="1.0568%" y="373" width="0.0286%" height="15" fill="rgb(249,185,26)" fg:x="37" fg:w="1"/><text x="1.3068%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.03%)</title><rect x="1.0568%" y="357" width="0.0286%" height="15" fill="rgb(249,174,33)" fg:x="37" fg:w="1"/><text x="1.3068%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="1.0568%" y="341" width="0.0286%" height="15" fill="rgb(233,201,37)" fg:x="37" fg:w="1"/><text x="1.3068%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="1.0568%" y="325" width="0.0286%" height="15" fill="rgb(221,78,26)" fg:x="37" fg:w="1"/><text x="1.3068%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::grow (1 samples, 0.03%)</title><rect x="1.0568%" y="309" width="0.0286%" height="15" fill="rgb(250,127,30)" fg:x="37" fg:w="1"/><text x="1.3068%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="1.0568%" y="293" width="0.0286%" height="15" fill="rgb(230,49,44)" fg:x="37" fg:w="1"/><text x="1.3068%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="1.0568%" y="277" width="0.0286%" height="15" fill="rgb(229,67,23)" fg:x="37" fg:w="1"/><text x="1.3068%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::alloc::__default_lib_allocator::__rdl_realloc (1 samples, 0.03%)</title><rect x="1.0568%" y="261" width="0.0286%" height="15" fill="rgb(249,83,47)" fg:x="37" fg:w="1"/><text x="1.3068%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::alloc::windows::impl$0::realloc (1 samples, 0.03%)</title><rect x="1.0568%" y="245" width="0.0286%" height="15" fill="rgb(215,43,3)" fg:x="37" fg:w="1"/><text x="1.3068%" y="255.50"></text></g><g><title>`0x7FFAC7B03F90 (1 samples, 0.03%)</title><rect x="1.0568%" y="229" width="0.0286%" height="15" fill="rgb(238,154,13)" fg:x="37" fg:w="1"/><text x="1.3068%" y="239.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lspar::lspar&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (5 samples, 0.14%)</title><rect x="0.9712%" y="421" width="0.1428%" height="15" fill="rgb(219,56,2)" fg:x="34" fg:w="5"/><text x="1.2212%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::iter::impl$182::any(core::slice::iter::Iter&lt;f64&gt;*, Rust_MCS::gls::lspar::lspar::closure_env$1 (1 samples, 0.03%)</title><rect x="1.0854%" y="405" width="0.0286%" height="15" fill="rgb(233,0,4)" fg:x="38" fg:w="1"/><text x="1.3354%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="1.0854%" y="389" width="0.0286%" height="15" fill="rgb(235,30,7)" fg:x="38" fg:w="1"/><text x="1.3354%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::len (1 samples, 0.03%)</title><rect x="1.1425%" y="389" width="0.0286%" height="15" fill="rgb(250,79,13)" fg:x="40" fg:w="1"/><text x="1.3925%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;tuple$&lt;usize,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.1425%" y="373" width="0.0286%" height="15" fill="rgb(211,146,34)" fg:x="40" fg:w="1"/><text x="1.3925%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;usize,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.1425%" y="357" width="0.0286%" height="15" fill="rgb(228,22,38)" fg:x="40" fg:w="1"/><text x="1.3925%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.1425%" y="341" width="0.0286%" height="15" fill="rgb(235,168,5)" fg:x="40" fg:w="1"/><text x="1.3925%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="1.1425%" y="325" width="0.0286%" height="15" fill="rgb(221,155,16)" fg:x="40" fg:w="1"/><text x="1.3925%" y="335.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="1.1425%" y="309" width="0.0286%" height="15" fill="rgb(215,215,53)" fg:x="40" fg:w="1"/><text x="1.3925%" y="319.50"></text></g><g><title>`0x7FFAC8C67B74 (1 samples, 0.03%)</title><rect x="1.1425%" y="293" width="0.0286%" height="15" fill="rgb(223,4,10)" fg:x="40" fg:w="1"/><text x="1.3925%" y="303.50"></text></g><g><title>`0x7FFAC8C6821D (1 samples, 0.03%)</title><rect x="1.1425%" y="277" width="0.0286%" height="15" fill="rgb(234,103,6)" fg:x="40" fg:w="1"/><text x="1.3925%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lslocal::lslocal&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double*, double*, double*, double*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool*, alloc::vec::Vec (3 samples, 0.09%)</title><rect x="1.1140%" y="405" width="0.0857%" height="15" fill="rgb(227,97,0)" fg:x="39" fg:w="3"/><text x="1.3640%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="1.1711%" y="389" width="0.0286%" height="15" fill="rgb(234,150,53)" fg:x="41" fg:w="1"/><text x="1.4211%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="1.1711%" y="373" width="0.0286%" height="15" fill="rgb(228,201,54)" fg:x="41" fg:w="1"/><text x="1.4211%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="1.1997%" y="405" width="0.0286%" height="15" fill="rgb(222,22,37)" fg:x="42" fg:w="1"/><text x="1.4497%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::min_by(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="1.1997%" y="389" width="0.0286%" height="15" fill="rgb(237,53,32)" fg:x="42" fg:w="1"/><text x="1.4497%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::reduce(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;f64&gt; &gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="1.1997%" y="373" width="0.0286%" height="15" fill="rgb(233,25,53)" fg:x="42" fg:w="1"/><text x="1.4497%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::enumerate::impl$1::fold(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;f64&gt; &gt;, tuple$&lt;usize,ref$&lt;f64&gt; &gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="1.1997%" y="357" width="0.0286%" height="15" fill="rgb(210,40,34)" fg:x="42" fg:w="1"/><text x="1.4497%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;f64&gt;, tuple$&lt;usize,ref$&lt;f64&gt; &gt;, core::iter::adapters::enumerate::impl$1::fold::enumerate::closure_env$0&lt;ref$&lt;f64&gt;,tuple$&lt;usize,ref$&lt;f64&gt; &gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="1.1997%" y="341" width="0.0286%" height="15" fill="rgb(241,220,44)" fg:x="42" fg:w="1"/><text x="1.4497%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::geometry::reflection::Reflection&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,1&gt; &gt;::reflect(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="1.2282%" y="357" width="0.0286%" height="15" fill="rgb(235,28,35)" fg:x="43" fg:w="1"/><text x="1.4782%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,1&gt; &gt;::dotc(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="1.2282%" y="341" width="0.0286%" height="15" fill="rgb(210,56,17)" fg:x="43" fg:w="1"/><text x="1.4782%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,1&gt; &gt;::dotx(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;3&gt; &gt; &gt;*, double (*) (1 samples, 0.03%)</title><rect x="1.2282%" y="325" width="0.0286%" height="15" fill="rgb(224,130,29)" fg:x="43" fg:w="1"/><text x="1.4782%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ops::arith::impl$142::mul (1 samples, 0.03%)</title><rect x="1.2282%" y="309" width="0.0286%" height="15" fill="rgb(235,212,8)" fg:x="43" fg:w="1"/><text x="1.4782%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lsquart::lsquart&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double*, double*, double*, double*, double*, double*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool*, alloc::vec::Vec (6 samples, 0.17%)</title><rect x="1.1140%" y="421" width="0.1714%" height="15" fill="rgb(223,33,50)" fg:x="39" fg:w="6"/><text x="1.3640%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt;::complex_eigenvalues&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt; (2 samples, 0.06%)</title><rect x="1.2282%" y="405" width="0.0571%" height="15" fill="rgb(219,149,13)" fg:x="43" fg:w="2"/><text x="1.4782%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;enum2$&lt;core::option::Option&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt; &gt; &gt;,nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt; &gt; &gt; &gt;::unwrap(enum2$&lt;core::option::Option&lt;tuple$&lt;enum2$&lt;core::option::Option&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt; &gt; &gt;,nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage (2 samples, 0.06%)</title><rect x="1.2282%" y="389" width="0.0571%" height="15" fill="rgb(250,156,29)" fg:x="43" fg:w="2"/><text x="1.4782%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::linalg::schur::Schur&lt;f64,nalgebra::base::dimension::Const&lt;3&gt; &gt;::do_decompose&lt;f64,nalgebra::base::dimension::Const&lt;3&gt; &gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (2 samples, 0.06%)</title><rect x="1.2282%" y="373" width="0.0571%" height="15" fill="rgb(216,193,19)" fg:x="43" fg:w="2"/><text x="1.4782%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::linalg::householder::reflection_axis_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="1.2568%" y="357" width="0.0286%" height="15" fill="rgb(216,135,14)" fg:x="44" fg:w="1"/><text x="1.5068%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,1&gt; &gt;::normalize_mut (1 samples, 0.03%)</title><rect x="1.2568%" y="341" width="0.0286%" height="15" fill="rgb(241,47,5)" fg:x="44" fg:w="1"/><text x="1.5068%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,1&gt; &gt;::unscale_mut (1 samples, 0.03%)</title><rect x="1.2568%" y="325" width="0.0286%" height="15" fill="rgb(233,42,35)" fg:x="44" fg:w="1"/><text x="1.5068%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,1&gt; &gt;::apply(nalgebra::base::matrix::impl$19::unscale_mut::closure_env$0&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="1.2568%" y="309" width="0.0286%" height="15" fill="rgb(231,13,6)" fg:x="44" fg:w="1"/><text x="1.5068%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::impl$19::unscale_mut::closure$0(nalgebra::base::matrix::impl$19::unscale_mut::closure_env$0&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="1.2568%" y="293" width="0.0286%" height="15" fill="rgb(207,181,40)" fg:x="44" fg:w="1"/><text x="1.5068%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`simba::simd::simd_complex::impl$0::simd_unscale (1 samples, 0.03%)</title><rect x="1.2568%" y="277" width="0.0286%" height="15" fill="rgb(254,173,49)" fg:x="44" fg:w="1"/><text x="1.5068%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`simba::scalar::complex::impl$2::unscale (1 samples, 0.03%)</title><rect x="1.2568%" y="261" width="0.0286%" height="15" fill="rgb(221,1,38)" fg:x="44" fg:w="1"/><text x="1.5068%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::gls&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (18 samples, 0.51%)</title><rect x="0.7998%" y="437" width="0.5141%" height="15" fill="rgb(206,124,46)" fg:x="28" fg:w="18"/><text x="1.0498%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="1.2853%" y="421" width="0.0286%" height="15" fill="rgb(249,21,11)" fg:x="45" fg:w="1"/><text x="1.5353%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="1.2853%" y="405" width="0.0286%" height="15" fill="rgb(222,201,40)" fg:x="45" fg:w="1"/><text x="1.5353%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="1.2853%" y="389" width="0.0286%" height="15" fill="rgb(235,61,29)" fg:x="45" fg:w="1"/><text x="1.5353%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="1.2853%" y="373" width="0.0286%" height="15" fill="rgb(219,207,3)" fg:x="45" fg:w="1"/><text x="1.5353%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="1.2853%" y="357" width="0.0286%" height="15" fill="rgb(222,56,46)" fg:x="45" fg:w="1"/><text x="1.5353%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="1.2853%" y="341" width="0.0286%" height="15" fill="rgb(239,76,54)" fg:x="45" fg:w="1"/><text x="1.5353%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.2853%" y="325" width="0.0286%" height="15" fill="rgb(231,124,27)" fg:x="45" fg:w="1"/><text x="1.5353%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.2853%" y="309" width="0.0286%" height="15" fill="rgb(249,195,6)" fg:x="45" fg:w="1"/><text x="1.5353%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.2853%" y="293" width="0.0286%" height="15" fill="rgb(237,174,47)" fg:x="45" fg:w="1"/><text x="1.5353%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="1.2853%" y="277" width="0.0286%" height="15" fill="rgb(206,201,31)" fg:x="45" fg:w="1"/><text x="1.5353%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="1.2853%" y="261" width="0.0286%" height="15" fill="rgb(231,57,52)" fg:x="45" fg:w="1"/><text x="1.5353%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="1.2853%" y="245" width="0.0286%" height="15" fill="rgb(248,177,22)" fg:x="45" fg:w="1"/><text x="1.5353%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="1.2853%" y="229" width="0.0286%" height="15" fill="rgb(215,211,37)" fg:x="45" fg:w="1"/><text x="1.5353%" y="239.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="1.2853%" y="213" width="0.0286%" height="15" fill="rgb(241,128,51)" fg:x="45" fg:w="1"/><text x="1.5353%" y="223.50"></text></g><g><title>`0x7FFAC8C67B74 (1 samples, 0.03%)</title><rect x="1.2853%" y="197" width="0.0286%" height="15" fill="rgb(227,165,31)" fg:x="45" fg:w="1"/><text x="1.5353%" y="207.50"></text></g><g><title>`0x7FFAC8C68307 (1 samples, 0.03%)</title><rect x="1.2853%" y="181" width="0.0286%" height="15" fill="rgb(228,167,24)" fg:x="45" fg:w="1"/><text x="1.5353%" y="191.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::hessian::hessian(unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="1.3139%" y="437" width="0.0286%" height="15" fill="rgb(228,143,12)" fg:x="46" fg:w="1"/><text x="1.5639%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="1.3139%" y="421" width="0.0286%" height="15" fill="rgb(249,149,8)" fg:x="46" fg:w="1"/><text x="1.5639%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::f64::impl$0::exp (1 samples, 0.03%)</title><rect x="1.3139%" y="405" width="0.0286%" height="15" fill="rgb(243,35,44)" fg:x="46" fg:w="1"/><text x="1.5639%" y="415.50"></text></g><g><title>`0x7FFAC6527CBE (1 samples, 0.03%)</title><rect x="1.3139%" y="389" width="0.0286%" height="15" fill="rgb(246,89,9)" fg:x="46" fg:w="1"/><text x="1.5639%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="1.3425%" y="437" width="0.0286%" height="15" fill="rgb(233,213,13)" fg:x="47" fg:w="1"/><text x="1.5925%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.3425%" y="421" width="0.0286%" height="15" fill="rgb(233,141,41)" fg:x="47" fg:w="1"/><text x="1.5925%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.3425%" y="405" width="0.0286%" height="15" fill="rgb(239,167,4)" fg:x="47" fg:w="1"/><text x="1.5925%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.3425%" y="389" width="0.0286%" height="15" fill="rgb(209,217,16)" fg:x="47" fg:w="1"/><text x="1.5925%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="1.3425%" y="373" width="0.0286%" height="15" fill="rgb(219,88,35)" fg:x="47" fg:w="1"/><text x="1.5925%" y="383.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="1.3425%" y="357" width="0.0286%" height="15" fill="rgb(220,193,23)" fg:x="47" fg:w="1"/><text x="1.5925%" y="367.50"></text></g><g><title>`0x7FFAC8C67DBE (1 samples, 0.03%)</title><rect x="1.3425%" y="341" width="0.0286%" height="15" fill="rgb(230,90,52)" fg:x="47" fg:w="1"/><text x="1.5925%" y="351.50"></text></g><g><title>`0x7FFAC8CD1940 (1 samples, 0.03%)</title><rect x="1.3425%" y="325" width="0.0286%" height="15" fill="rgb(252,106,19)" fg:x="47" fg:w="1"/><text x="1.5925%" y="335.50"></text></g><g><title>`0x7FFAC8C8F520 (1 samples, 0.03%)</title><rect x="1.3710%" y="437" width="0.0286%" height="15" fill="rgb(206,74,20)" fg:x="48" fg:w="1"/><text x="1.6210%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::csearch::csearch&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (22 samples, 0.63%)</title><rect x="0.7998%" y="453" width="0.6284%" height="15" fill="rgb(230,138,44)" fg:x="28" fg:w="22"/><text x="1.0498%" y="463.50"></text></g><g><title>`0x7FFAC8C8FA02 (1 samples, 0.03%)</title><rect x="1.3996%" y="437" width="0.0286%" height="15" fill="rgb(235,182,43)" fg:x="49" fg:w="1"/><text x="1.6496%" y="447.50"></text></g><g><title>`0x7FFAC8C6B73A (1 samples, 0.03%)</title><rect x="1.3996%" y="421" width="0.0286%" height="15" fill="rgb(242,16,51)" fg:x="49" fg:w="1"/><text x="1.6496%" y="431.50"></text></g><g><title>`0x7FFAC8D0DFEA (1 samples, 0.03%)</title><rect x="1.3996%" y="405" width="0.0286%" height="15" fill="rgb(248,9,4)" fg:x="49" fg:w="1"/><text x="1.6496%" y="415.50"></text></g><g><title>`0x7FFAC8C6EDEE (1 samples, 0.03%)</title><rect x="1.3996%" y="389" width="0.0286%" height="15" fill="rgb(210,31,22)" fg:x="49" fg:w="1"/><text x="1.6496%" y="399.50"></text></g><g><title>`0x7FFAC8CE06D9 (1 samples, 0.03%)</title><rect x="1.3996%" y="373" width="0.0286%" height="15" fill="rgb(239,54,39)" fg:x="49" fg:w="1"/><text x="1.6496%" y="383.50"></text></g><g><title>`0x7FFAC8DBC384 (1 samples, 0.03%)</title><rect x="1.3996%" y="357" width="0.0286%" height="15" fill="rgb(230,99,41)" fg:x="49" fg:w="1"/><text x="1.6496%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::polint::polint1 (1 samples, 0.03%)</title><rect x="1.4567%" y="437" width="0.0286%" height="15" fill="rgb(253,106,12)" fg:x="51" fg:w="1"/><text x="1.7067%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::triple::triple&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (6 samples, 0.17%)</title><rect x="1.4282%" y="453" width="0.1714%" height="15" fill="rgb(213,46,41)" fg:x="50" fg:w="6"/><text x="1.6782%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (4 samples, 0.11%)</title><rect x="1.4853%" y="437" width="0.1143%" height="15" fill="rgb(215,133,35)" fg:x="52" fg:w="4"/><text x="1.7353%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::f64::impl$0::powi (1 samples, 0.03%)</title><rect x="1.5710%" y="421" width="0.0286%" height="15" fill="rgb(213,28,5)" fg:x="55" fg:w="1"/><text x="1.8210%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::minq::getalp::getalp (1 samples, 0.03%)</title><rect x="1.5995%" y="437" width="0.0286%" height="15" fill="rgb(215,77,49)" fg:x="56" fg:w="1"/><text x="1.8495%" y="447.50"></text></g><g><title>`0x7FFAC8C8F4B3 (1 samples, 0.03%)</title><rect x="1.7995%" y="277" width="0.0286%" height="15" fill="rgb(248,100,22)" fg:x="63" fg:w="1"/><text x="2.0495%" y="287.50"></text></g><g><title>`0x7FFAC8C8F4C9 (1 samples, 0.03%)</title><rect x="1.8280%" y="277" width="0.0286%" height="15" fill="rgb(208,67,9)" fg:x="64" fg:w="1"/><text x="2.0780%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (5 samples, 0.14%)</title><rect x="1.7995%" y="405" width="0.1428%" height="15" fill="rgb(219,133,21)" fg:x="63" fg:w="5"/><text x="2.0495%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (5 samples, 0.14%)</title><rect x="1.7995%" y="389" width="0.1428%" height="15" fill="rgb(246,46,29)" fg:x="63" fg:w="5"/><text x="2.0495%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(alloc::vec::Vec (5 samples, 0.14%)</title><rect x="1.7995%" y="373" width="0.1428%" height="15" fill="rgb(246,185,52)" fg:x="63" fg:w="5"/><text x="2.0495%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (5 samples, 0.14%)</title><rect x="1.7995%" y="357" width="0.1428%" height="15" fill="rgb(252,136,11)" fg:x="63" fg:w="5"/><text x="2.0495%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (5 samples, 0.14%)</title><rect x="1.7995%" y="341" width="0.1428%" height="15" fill="rgb(219,138,53)" fg:x="63" fg:w="5"/><text x="2.0495%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (5 samples, 0.14%)</title><rect x="1.7995%" y="325" width="0.1428%" height="15" fill="rgb(211,51,23)" fg:x="63" fg:w="5"/><text x="2.0495%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (5 samples, 0.14%)</title><rect x="1.7995%" y="309" width="0.1428%" height="15" fill="rgb(247,221,28)" fg:x="63" fg:w="5"/><text x="2.0495%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::dealloc (5 samples, 0.14%)</title><rect x="1.7995%" y="293" width="0.1428%" height="15" fill="rgb(251,222,45)" fg:x="63" fg:w="5"/><text x="2.0495%" y="303.50"></text></g><g><title>`0x7FFAC8C8F547 (3 samples, 0.09%)</title><rect x="1.8566%" y="277" width="0.0857%" height="15" fill="rgb(217,162,53)" fg:x="65" fg:w="3"/><text x="2.1066%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;::lu&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9423%" y="389" width="0.0571%" height="15" fill="rgb(229,93,14)" fg:x="68" fg:w="2"/><text x="2.1923%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;::into_owned(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9423%" y="373" width="0.0571%" height="15" fill="rgb(209,67,49)" fg:x="68" fg:w="2"/><text x="2.1923%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix_view::impl$38::into_owned(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9423%" y="357" width="0.0571%" height="15" fill="rgb(213,87,29)" fg:x="68" fg:w="2"/><text x="2.1923%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix_view::impl$38::clone_owned(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9423%" y="341" width="0.0571%" height="15" fill="rgb(205,151,52)" fg:x="68" fg:w="2"/><text x="2.1923%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::default_allocator::impl$1::allocate_from_iterator(nalgebra::base::dimension::Dyn, nalgebra::base::dimension::Dyn, core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9423%" y="325" width="0.0571%" height="15" fill="rgb(253,215,39)" fg:x="68" fg:w="2"/><text x="2.1923%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt; &gt; &gt;(core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9423%" y="309" width="0.0571%" height="15" fill="rgb(221,220,41)" fg:x="68" fg:w="2"/><text x="2.1923%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9423%" y="293" width="0.0571%" height="15" fill="rgb(218,133,21)" fg:x="68" fg:w="2"/><text x="2.1923%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9423%" y="277" width="0.0571%" height="15" fill="rgb(221,193,43)" fg:x="68" fg:w="2"/><text x="2.1923%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9423%" y="261" width="0.0571%" height="15" fill="rgb(240,128,52)" fg:x="68" fg:w="2"/><text x="2.1923%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;::rows (4 samples, 0.11%)</title><rect x="1.9423%" y="405" width="0.1143%" height="15" fill="rgb(253,114,12)" fg:x="68" fg:w="4"/><text x="2.1923%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::linalg::lu::LU&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::solve&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9994%" y="389" width="0.0571%" height="15" fill="rgb(215,223,47)" fg:x="70" fg:w="2"/><text x="2.2494%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::linalg::lu::LU&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt;::solve_mut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9994%" y="373" width="0.0571%" height="15" fill="rgb(248,225,23)" fg:x="70" fg:w="2"/><text x="2.2494%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt; &gt;::solve_upper_triangular_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9994%" y="357" width="0.0571%" height="15" fill="rgb(250,108,0)" fg:x="70" fg:w="2"/><text x="2.2494%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt; &gt;::solve_upper_triangular_vector_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (2 samples, 0.06%)</title><rect x="1.9994%" y="341" width="0.0571%" height="15" fill="rgb(228,208,7)" fg:x="70" fg:w="2"/><text x="2.2494%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::axpy(double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0280%" y="325" width="0.0286%" height="15" fill="rgb(244,45,10)" fg:x="71" fg:w="1"/><text x="2.2780%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::axcpy(double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0280%" y="309" width="0.0286%" height="15" fill="rgb(207,125,25)" fg:x="71" fg:w="1"/><text x="2.2780%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::blas_uninit::axcpy_uninit(nalgebra::base::uninit::Init, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0280%" y="293" width="0.0286%" height="15" fill="rgb(210,195,18)" fg:x="71" fg:w="1"/><text x="2.2780%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::blas_uninit::array_axcpy(nalgebra::base::uninit::Init, ref_mut$&lt;slice2$&lt;f64&gt; &gt;, double, ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.0280%" y="277" width="0.0286%" height="15" fill="rgb(249,80,12)" fg:x="71" fg:w="1"/><text x="2.2780%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::range::impl$6::next(core::ops::range::Range (1 samples, 0.03%)</title><rect x="2.0280%" y="261" width="0.0286%" height="15" fill="rgb(221,65,9)" fg:x="71" fg:w="1"/><text x="2.2780%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1 samples, 0.03%)</title><rect x="2.0280%" y="245" width="0.0286%" height="15" fill="rgb(235,49,36)" fg:x="71" fg:w="1"/><text x="2.2780%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::is_empty (1 samples, 0.03%)</title><rect x="2.0566%" y="405" width="0.0286%" height="15" fill="rgb(225,32,20)" fg:x="72" fg:w="1"/><text x="2.3066%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::len (1 samples, 0.03%)</title><rect x="2.0566%" y="389" width="0.0286%" height="15" fill="rgb(215,141,46)" fg:x="72" fg:w="1"/><text x="2.3066%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::minq::ldlrk1::ldlrk1&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0566%" y="373" width="0.0286%" height="15" fill="rgb(250,160,47)" fg:x="72" fg:w="1"/><text x="2.3066%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;::clone_owned (1 samples, 0.03%)</title><rect x="2.0566%" y="357" width="0.0286%" height="15" fill="rgb(216,222,40)" fg:x="72" fg:w="1"/><text x="2.3066%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix_view::impl$40::clone_owned(nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0566%" y="341" width="0.0286%" height="15" fill="rgb(234,217,39)" fg:x="72" fg:w="1"/><text x="2.3066%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::default_allocator::impl$1::allocate_from_iterator(nalgebra::base::dimension::Dyn, nalgebra::base::dimension::Dyn, core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0566%" y="325" width="0.0286%" height="15" fill="rgb(207,178,40)" fg:x="72" fg:w="1"/><text x="2.3066%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;f64,core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt; &gt; &gt;(core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0566%" y="309" width="0.0286%" height="15" fill="rgb(221,136,13)" fg:x="72" fg:w="1"/><text x="2.3066%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0566%" y="293" width="0.0286%" height="15" fill="rgb(249,199,10)" fg:x="72" fg:w="1"/><text x="2.3066%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0566%" y="277" width="0.0286%" height="15" fill="rgb(249,222,13)" fg:x="72" fg:w="1"/><text x="2.3066%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::cloned::Cloned&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0566%" y="261" width="0.0286%" height="15" fill="rgb(244,185,38)" fg:x="72" fg:w="1"/><text x="2.3066%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::scale (1 samples, 0.03%)</title><rect x="2.0851%" y="405" width="0.0286%" height="15" fill="rgb(236,202,9)" fg:x="73" fg:w="1"/><text x="2.3351%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::map(nalgebra::base::matrix::impl$18::scale::closure_env$0&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0851%" y="389" width="0.0286%" height="15" fill="rgb(250,229,37)" fg:x="73" fg:w="1"/><text x="2.3351%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt; &gt; &gt;::uninit(nalgebra::base::dimension::Dyn, nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0851%" y="373" width="0.0286%" height="15" fill="rgb(206,174,23)" fg:x="73" fg:w="1"/><text x="2.3351%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::default_allocator::impl$1::allocate_uninit(nalgebra::base::dimension::Dyn, nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.0851%" y="357" width="0.0286%" height="15" fill="rgb(211,33,43)" fg:x="73" fg:w="1"/><text x="2.3351%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="2.0851%" y="341" width="0.0286%" height="15" fill="rgb(245,58,50)" fg:x="73" fg:w="1"/><text x="2.3351%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="2.0851%" y="325" width="0.0286%" height="15" fill="rgb(244,68,36)" fg:x="73" fg:w="1"/><text x="2.3351%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="2.0851%" y="309" width="0.0286%" height="15" fill="rgb(232,229,15)" fg:x="73" fg:w="1"/><text x="2.3351%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (1 samples, 0.03%)</title><rect x="2.0851%" y="293" width="0.0286%" height="15" fill="rgb(254,30,23)" fg:x="73" fg:w="1"/><text x="2.3351%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (1 samples, 0.03%)</title><rect x="2.0851%" y="277" width="0.0286%" height="15" fill="rgb(235,160,14)" fg:x="73" fg:w="1"/><text x="2.3351%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.0851%" y="261" width="0.0286%" height="15" fill="rgb(212,155,44)" fg:x="73" fg:w="1"/><text x="2.3351%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.0851%" y="245" width="0.0286%" height="15" fill="rgb(226,2,50)" fg:x="73" fg:w="1"/><text x="2.3351%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.0851%" y="229" width="0.0286%" height="15" fill="rgb(234,177,6)" fg:x="73" fg:w="1"/><text x="2.3351%" y="239.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.0851%" y="213" width="0.0286%" height="15" fill="rgb(217,24,9)" fg:x="73" fg:w="1"/><text x="2.3351%" y="223.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.0851%" y="197" width="0.0286%" height="15" fill="rgb(220,13,46)" fg:x="73" fg:w="1"/><text x="2.3351%" y="207.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="2.0851%" y="181" width="0.0286%" height="15" fill="rgb(239,221,27)" fg:x="73" fg:w="1"/><text x="2.3351%" y="191.50"></text></g><g><title>`0x7FFAC8C67B74 (1 samples, 0.03%)</title><rect x="2.0851%" y="165" width="0.0286%" height="15" fill="rgb(222,198,25)" fg:x="73" fg:w="1"/><text x="2.3351%" y="175.50"></text></g><g><title>`0x7FFAC8C68320 (1 samples, 0.03%)</title><rect x="2.0851%" y="149" width="0.0286%" height="15" fill="rgb(211,99,13)" fg:x="73" fg:w="1"/><text x="2.3351%" y="159.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;::transpose (1 samples, 0.03%)</title><rect x="2.1137%" y="405" width="0.0286%" height="15" fill="rgb(232,111,31)" fg:x="74" fg:w="1"/><text x="2.3637%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Dyn&gt; &gt;::uninit (1 samples, 0.03%)</title><rect x="2.1137%" y="389" width="0.0286%" height="15" fill="rgb(245,82,37)" fg:x="74" fg:w="1"/><text x="2.3637%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::default_allocator::impl$1::allocate_uninit (1 samples, 0.03%)</title><rect x="2.1137%" y="373" width="0.0286%" height="15" fill="rgb(227,149,46)" fg:x="74" fg:w="1"/><text x="2.3637%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="2.1137%" y="357" width="0.0286%" height="15" fill="rgb(218,36,50)" fg:x="74" fg:w="1"/><text x="2.3637%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="2.1137%" y="341" width="0.0286%" height="15" fill="rgb(226,80,48)" fg:x="74" fg:w="1"/><text x="2.3637%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="2.1137%" y="325" width="0.0286%" height="15" fill="rgb(238,224,15)" fg:x="74" fg:w="1"/><text x="2.3637%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (1 samples, 0.03%)</title><rect x="2.1137%" y="309" width="0.0286%" height="15" fill="rgb(241,136,10)" fg:x="74" fg:w="1"/><text x="2.3637%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (1 samples, 0.03%)</title><rect x="2.1137%" y="293" width="0.0286%" height="15" fill="rgb(208,32,45)" fg:x="74" fg:w="1"/><text x="2.3637%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.1137%" y="277" width="0.0286%" height="15" fill="rgb(207,135,9)" fg:x="74" fg:w="1"/><text x="2.3637%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.1137%" y="261" width="0.0286%" height="15" fill="rgb(206,86,44)" fg:x="74" fg:w="1"/><text x="2.3637%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.1137%" y="245" width="0.0286%" height="15" fill="rgb(245,177,15)" fg:x="74" fg:w="1"/><text x="2.3637%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.1137%" y="229" width="0.0286%" height="15" fill="rgb(206,64,50)" fg:x="74" fg:w="1"/><text x="2.3637%" y="239.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.1137%" y="213" width="0.0286%" height="15" fill="rgb(234,36,40)" fg:x="74" fg:w="1"/><text x="2.3637%" y="223.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="2.1137%" y="197" width="0.0286%" height="15" fill="rgb(213,64,8)" fg:x="74" fg:w="1"/><text x="2.3637%" y="207.50"></text></g><g><title>`0x7FFAC8C67B74 (1 samples, 0.03%)</title><rect x="2.1137%" y="181" width="0.0286%" height="15" fill="rgb(210,75,36)" fg:x="74" fg:w="1"/><text x="2.3637%" y="191.50"></text></g><g><title>`0x7FFAC8C682F8 (1 samples, 0.03%)</title><rect x="2.1137%" y="165" width="0.0286%" height="15" fill="rgb(229,88,21)" fg:x="74" fg:w="1"/><text x="2.3637%" y="175.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::minq::ldlup::ldlup&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (15 samples, 0.43%)</title><rect x="1.7424%" y="421" width="0.4284%" height="15" fill="rgb(252,204,47)" fg:x="61" fg:w="15"/><text x="1.9924%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::impl$42::clone(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.1422%" y="405" width="0.0286%" height="15" fill="rgb(208,77,27)" fg:x="75" fg:w="1"/><text x="2.3922%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::vec_storage::impl$23::clone(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.1422%" y="389" width="0.0286%" height="15" fill="rgb(221,76,26)" fg:x="75" fg:w="1"/><text x="2.3922%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.1422%" y="373" width="0.0286%" height="15" fill="rgb(225,139,18)" fg:x="75" fg:w="1"/><text x="2.3922%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.1422%" y="357" width="0.0286%" height="15" fill="rgb(230,137,11)" fg:x="75" fg:w="1"/><text x="2.3922%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.1422%" y="341" width="0.0286%" height="15" fill="rgb(212,28,1)" fg:x="75" fg:w="1"/><text x="2.3922%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.1422%" y="325" width="0.0286%" height="15" fill="rgb(248,164,17)" fg:x="75" fg:w="1"/><text x="2.3922%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.1422%" y="309" width="0.0286%" height="15" fill="rgb(222,171,42)" fg:x="75" fg:w="1"/><text x="2.3922%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.1422%" y="293" width="0.0286%" height="15" fill="rgb(243,84,45)" fg:x="75" fg:w="1"/><text x="2.3922%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.1422%" y="277" width="0.0286%" height="15" fill="rgb(252,49,23)" fg:x="75" fg:w="1"/><text x="2.3922%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="2.1422%" y="261" width="0.0286%" height="15" fill="rgb(215,19,7)" fg:x="75" fg:w="1"/><text x="2.3922%" y="271.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="2.1422%" y="245" width="0.0286%" height="15" fill="rgb(238,81,41)" fg:x="75" fg:w="1"/><text x="2.3922%" y="255.50"></text></g><g><title>`0x7FFAC8C67AA7 (1 samples, 0.03%)</title><rect x="2.1422%" y="229" width="0.0286%" height="15" fill="rgb(210,199,37)" fg:x="75" fg:w="1"/><text x="2.3922%" y="239.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`__rust_realloc (1 samples, 0.03%)</title><rect x="2.1708%" y="149" width="0.0286%" height="15" fill="rgb(244,192,49)" fg:x="76" fg:w="1"/><text x="2.4208%" y="159.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::enumerate::Enumerate&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$0&lt;6&gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$1 (2 samples, 0.06%)</title><rect x="2.1708%" y="357" width="0.0571%" height="15" fill="rgb(226,211,11)" fg:x="76" fg:w="2"/><text x="2.4208%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::enumerate::Enumerate&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$0&lt;6&gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$1 (2 samples, 0.06%)</title><rect x="2.1708%" y="341" width="0.0571%" height="15" fill="rgb(236,162,54)" fg:x="76" fg:w="2"/><text x="2.4208%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.06%)</title><rect x="2.1708%" y="325" width="0.0571%" height="15" fill="rgb(220,229,9)" fg:x="76" fg:w="2"/><text x="2.4208%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::ptr (2 samples, 0.06%)</title><rect x="2.1708%" y="309" width="0.0571%" height="15" fill="rgb(250,87,22)" fg:x="76" fg:w="2"/><text x="2.4208%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.06%)</title><rect x="2.1708%" y="293" width="0.0571%" height="15" fill="rgb(239,43,17)" fg:x="76" fg:w="2"/><text x="2.4208%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.06%)</title><rect x="2.1708%" y="277" width="0.0571%" height="15" fill="rgb(231,177,25)" fg:x="76" fg:w="2"/><text x="2.4208%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (2 samples, 0.06%)</title><rect x="2.1708%" y="261" width="0.0571%" height="15" fill="rgb(219,179,1)" fg:x="76" fg:w="2"/><text x="2.4208%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (2 samples, 0.06%)</title><rect x="2.1708%" y="245" width="0.0571%" height="15" fill="rgb(238,219,53)" fg:x="76" fg:w="2"/><text x="2.4208%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.06%)</title><rect x="2.1708%" y="229" width="0.0571%" height="15" fill="rgb(232,167,36)" fg:x="76" fg:w="2"/><text x="2.4208%" y="239.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.06%)</title><rect x="2.1708%" y="213" width="0.0571%" height="15" fill="rgb(244,19,51)" fg:x="76" fg:w="2"/><text x="2.4208%" y="223.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.06%)</title><rect x="2.1708%" y="197" width="0.0571%" height="15" fill="rgb(224,6,22)" fg:x="76" fg:w="2"/><text x="2.4208%" y="207.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (2 samples, 0.06%)</title><rect x="2.1708%" y="181" width="0.0571%" height="15" fill="rgb(224,145,5)" fg:x="76" fg:w="2"/><text x="2.4208%" y="191.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (2 samples, 0.06%)</title><rect x="2.1708%" y="165" width="0.0571%" height="15" fill="rgb(234,130,49)" fg:x="76" fg:w="2"/><text x="2.4208%" y="175.50"></text></g><g><title>`0x7FFAC8D04B8C (1 samples, 0.03%)</title><rect x="2.1994%" y="149" width="0.0286%" height="15" fill="rgb(254,6,2)" fg:x="77" fg:w="1"/><text x="2.4494%" y="159.50"></text></g><g><title>`0x7FFAC8C90DC5 (1 samples, 0.03%)</title><rect x="2.1994%" y="133" width="0.0286%" height="15" fill="rgb(208,96,46)" fg:x="77" fg:w="1"/><text x="2.4494%" y="143.50"></text></g><g><title>`0x7FFAC8C9166A (1 samples, 0.03%)</title><rect x="2.1994%" y="117" width="0.0286%" height="15" fill="rgb(239,3,39)" fg:x="77" fg:w="1"/><text x="2.4494%" y="127.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="2.1994%" y="101" width="0.0286%" height="15" fill="rgb(233,210,1)" fg:x="77" fg:w="1"/><text x="2.4494%" y="111.50"></text></g><g><title>`0x7FFAC8C67B74 (1 samples, 0.03%)</title><rect x="2.1994%" y="85" width="0.0286%" height="15" fill="rgb(244,137,37)" fg:x="77" fg:w="1"/><text x="2.4494%" y="95.50"></text></g><g><title>`0x7FFAC8C68307 (1 samples, 0.03%)</title><rect x="2.1994%" y="69" width="0.0286%" height="15" fill="rgb(240,136,2)" fg:x="77" fg:w="1"/><text x="2.4494%" y="79.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::is_empty (3 samples, 0.09%)</title><rect x="2.1708%" y="421" width="0.0857%" height="15" fill="rgb(239,18,37)" fg:x="76" fg:w="3"/><text x="2.4208%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::len (3 samples, 0.09%)</title><rect x="2.1708%" y="405" width="0.0857%" height="15" fill="rgb(218,185,22)" fg:x="76" fg:w="3"/><text x="2.4208%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;usize,core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::enumerate::Enumerate&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$0&lt;6&gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$1&lt;6&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::enumerate::Enumerate&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$0&lt;6&gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$1 (3 samples, 0.09%)</title><rect x="2.1708%" y="389" width="0.0857%" height="15" fill="rgb(225,218,4)" fg:x="76" fg:w="3"/><text x="2.4208%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::enumerate::Enumerate&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$0&lt;6&gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$1 (3 samples, 0.09%)</title><rect x="2.1708%" y="373" width="0.0857%" height="15" fill="rgb(230,182,32)" fg:x="76" fg:w="3"/><text x="2.4208%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::enumerate::Enumerate&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$0&lt;6&gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$1 (1 samples, 0.03%)</title><rect x="2.2279%" y="357" width="0.0286%" height="15" fill="rgb(242,56,43)" fg:x="78" fg:w="1"/><text x="2.4779%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::filter::impl$3::next(core::iter::adapters::filter::Filter&lt;core::iter::adapters::enumerate::Enumerate&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::minq::minqsub::minqsub::closure_env$0 (1 samples, 0.03%)</title><rect x="2.2279%" y="341" width="0.0286%" height="15" fill="rgb(233,99,24)" fg:x="78" fg:w="1"/><text x="2.4779%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::find(core::iter::adapters::enumerate::Enumerate&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;*, Rust_MCS::minq::minqsub::minqsub::closure_env$0 (1 samples, 0.03%)</title><rect x="2.2279%" y="325" width="0.0286%" height="15" fill="rgb(234,209,42)" fg:x="78" fg:w="1"/><text x="2.4779%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::enumerate::impl$1::try_fold(core::iter::adapters::enumerate::Enumerate&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;tuple$&lt;usize,ref$&lt;f64&gt; &gt;,ref_mut$&lt;Rust_MCS::minq::minqsub::minqsub::closure_env$0 (1 samples, 0.03%)</title><rect x="2.2279%" y="309" width="0.0286%" height="15" fill="rgb(227,7,12)" fg:x="78" fg:w="1"/><text x="2.4779%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::try_fold(nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::enumerate::impl$1::try_fold::enumerate::closure_env$0&lt;ref$&lt;f64&gt;,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;tuple$&lt;usize,ref$&lt;f64&gt; &gt;,tuple$&lt;&gt; &gt; &gt;,core::iter::traits::iterator::Iterator::find::check::closure_env$0&lt;tuple$&lt;usize,ref$&lt;f64&gt; &gt;,ref_mut$&lt;Rust_MCS::minq::minqsub::minqsub::closure_env$0 (1 samples, 0.03%)</title><rect x="2.2279%" y="293" width="0.0286%" height="15" fill="rgb(245,203,43)" fg:x="78" fg:w="1"/><text x="2.4779%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`enum2$&lt;core::option::Option&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt; &gt;::unwrap(enum2$&lt;core::option::Option&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="2.2565%" y="421" width="0.0286%" height="15" fill="rgb(238,205,33)" fg:x="79" fg:w="1"/><text x="2.5065%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::linalg::lu::LU&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt;::solve&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="2.2565%" y="405" width="0.0286%" height="15" fill="rgb(231,56,7)" fg:x="79" fg:w="1"/><text x="2.5065%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;::solve_upper_triangular_mut&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="2.2565%" y="389" width="0.0286%" height="15" fill="rgb(244,186,29)" fg:x="79" fg:w="1"/><text x="2.5065%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;::solve_upper_triangular_vector_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.2565%" y="373" width="0.0286%" height="15" fill="rgb(234,111,31)" fg:x="79" fg:w="1"/><text x="2.5065%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::range::impl$6::next(core::ops::range::Range (1 samples, 0.03%)</title><rect x="2.2851%" y="389" width="0.0286%" height="15" fill="rgb(241,149,10)" fg:x="80" fg:w="1"/><text x="2.5351%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1 samples, 0.03%)</title><rect x="2.2851%" y="373" width="0.0286%" height="15" fill="rgb(249,206,44)" fg:x="80" fg:w="1"/><text x="2.5351%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;::axpy(double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.3136%" y="373" width="0.0286%" height="15" fill="rgb(251,153,30)" fg:x="81" fg:w="1"/><text x="2.5636%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;::axcpy(double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.3136%" y="357" width="0.0286%" height="15" fill="rgb(239,152,38)" fg:x="81" fg:w="1"/><text x="2.5636%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::blas_uninit::axcpy_uninit(nalgebra::base::uninit::Init, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.3136%" y="341" width="0.0286%" height="15" fill="rgb(249,139,47)" fg:x="81" fg:w="1"/><text x="2.5636%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::blas_uninit::array_axcpy(nalgebra::base::uninit::Init, ref_mut$&lt;slice2$&lt;f64&gt; &gt;, double, ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.3136%" y="325" width="0.0286%" height="15" fill="rgb(244,64,35)" fg:x="81" fg:w="1"/><text x="2.5636%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::clone::impls::impl$19::clone (1 samples, 0.03%)</title><rect x="2.3136%" y="309" width="0.0286%" height="15" fill="rgb(216,46,15)" fg:x="81" fg:w="1"/><text x="2.5636%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::minq::minq&lt;6&gt;(double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (27 samples, 0.77%)</title><rect x="1.5995%" y="453" width="0.7712%" height="15" fill="rgb(250,74,19)" fg:x="56" fg:w="27"/><text x="1.8495%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::minq::minqsub::minqsub&lt;6&gt;(unsigned long long*, nalgebra::base::matrix::Matrix&lt;bool,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;bool,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;bool,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;bool,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (26 samples, 0.74%)</title><rect x="1.6281%" y="437" width="0.7426%" height="15" fill="rgb(249,42,33)" fg:x="57" fg:w="26"/><text x="1.8781%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,6&gt; &gt;::lu(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (3 samples, 0.09%)</title><rect x="2.2851%" y="421" width="0.0857%" height="15" fill="rgb(242,149,17)" fg:x="80" fg:w="3"/><text x="2.5351%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::linalg::lu::LU&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt;::new&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt; &gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (3 samples, 0.09%)</title><rect x="2.2851%" y="405" width="0.0857%" height="15" fill="rgb(244,29,21)" fg:x="80" fg:w="3"/><text x="2.5351%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::linalg::lu::gauss_step(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (2 samples, 0.06%)</title><rect x="2.3136%" y="389" width="0.0571%" height="15" fill="rgb(220,130,37)" fg:x="81" fg:w="2"/><text x="2.5636%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::ops::impl$36::mul_assign(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.3422%" y="373" width="0.0286%" height="15" fill="rgb(211,67,2)" fg:x="82" fg:w="1"/><text x="2.5922%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::range::impl$6::next(core::ops::range::Range (1 samples, 0.03%)</title><rect x="2.3422%" y="357" width="0.0286%" height="15" fill="rgb(235,68,52)" fg:x="82" fg:w="1"/><text x="2.5922%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1 samples, 0.03%)</title><rect x="2.3422%" y="341" width="0.0286%" height="15" fill="rgb(246,142,3)" fg:x="82" fg:w="1"/><text x="2.5922%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.3708%" y="389" width="0.0286%" height="15" fill="rgb(241,25,7)" fg:x="83" fg:w="1"/><text x="2.6208%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.3708%" y="373" width="0.0286%" height="15" fill="rgb(242,119,39)" fg:x="83" fg:w="1"/><text x="2.6208%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.3708%" y="357" width="0.0286%" height="15" fill="rgb(241,98,45)" fg:x="83" fg:w="1"/><text x="2.6208%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.3708%" y="341" width="0.0286%" height="15" fill="rgb(254,28,30)" fg:x="83" fg:w="1"/><text x="2.6208%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.3708%" y="325" width="0.0286%" height="15" fill="rgb(241,142,54)" fg:x="83" fg:w="1"/><text x="2.6208%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="2.3708%" y="309" width="0.0286%" height="15" fill="rgb(222,85,15)" fg:x="83" fg:w="1"/><text x="2.6208%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.3708%" y="293" width="0.0286%" height="15" fill="rgb(210,85,47)" fg:x="83" fg:w="1"/><text x="2.6208%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.3708%" y="277" width="0.0286%" height="15" fill="rgb(224,206,25)" fg:x="83" fg:w="1"/><text x="2.6208%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.3708%" y="261" width="0.0286%" height="15" fill="rgb(243,201,19)" fg:x="83" fg:w="1"/><text x="2.6208%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="2.3708%" y="245" width="0.0286%" height="15" fill="rgb(236,59,4)" fg:x="83" fg:w="1"/><text x="2.6208%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="2.3708%" y="229" width="0.0286%" height="15" fill="rgb(254,179,45)" fg:x="83" fg:w="1"/><text x="2.6208%" y="239.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="2.3708%" y="213" width="0.0286%" height="15" fill="rgb(226,14,10)" fg:x="83" fg:w="1"/><text x="2.6208%" y="223.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="2.3708%" y="197" width="0.0286%" height="15" fill="rgb(244,27,41)" fg:x="83" fg:w="1"/><text x="2.6208%" y="207.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="2.3708%" y="181" width="0.0286%" height="15" fill="rgb(235,35,32)" fg:x="83" fg:w="1"/><text x="2.6208%" y="191.50"></text></g><g><title>`0x7FFAC8C67DBE (1 samples, 0.03%)</title><rect x="2.3708%" y="165" width="0.0286%" height="15" fill="rgb(218,68,31)" fg:x="83" fg:w="1"/><text x="2.6208%" y="175.50"></text></g><g><title>`0x7FFAC8CD1738 (1 samples, 0.03%)</title><rect x="2.3708%" y="149" width="0.0286%" height="15" fill="rgb(207,120,37)" fg:x="83" fg:w="1"/><text x="2.6208%" y="159.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lsdescent::lsdescent&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double*, double*, double*, double*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool*, alloc::vec::Vec (2 samples, 0.06%)</title><rect x="2.3708%" y="405" width="0.0571%" height="15" fill="rgb(227,98,0)" fg:x="83" fg:w="2"/><text x="2.6208%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.3993%" y="389" width="0.0286%" height="15" fill="rgb(207,7,3)" fg:x="84" fg:w="1"/><text x="2.6493%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_slice (1 samples, 0.03%)</title><rect x="2.3993%" y="373" width="0.0286%" height="15" fill="rgb(206,98,19)" fg:x="84" fg:w="1"/><text x="2.6493%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.4279%" y="389" width="0.0286%" height="15" fill="rgb(217,5,26)" fg:x="85" fg:w="1"/><text x="2.6779%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::min_by(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.4279%" y="373" width="0.0286%" height="15" fill="rgb(235,190,38)" fg:x="85" fg:w="1"/><text x="2.6779%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::reduce(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;f64&gt; &gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="2.4279%" y="357" width="0.0286%" height="15" fill="rgb(247,86,24)" fg:x="85" fg:w="1"/><text x="2.6779%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::enumerate::impl$1::fold(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;f64&gt; &gt;, tuple$&lt;usize,ref$&lt;f64&gt; &gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="2.4279%" y="341" width="0.0286%" height="15" fill="rgb(205,101,16)" fg:x="85" fg:w="1"/><text x="2.6779%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;f64&gt;, tuple$&lt;usize,ref$&lt;f64&gt; &gt;, core::iter::adapters::enumerate::impl$1::fold::enumerate::closure_env$0&lt;ref$&lt;f64&gt;,tuple$&lt;usize,ref$&lt;f64&gt; &gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="2.4279%" y="325" width="0.0286%" height="15" fill="rgb(246,168,33)" fg:x="85" fg:w="1"/><text x="2.6779%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::enumerate::impl$1::fold::enumerate::closure$0(core::iter::adapters::enumerate::impl$1::fold::enumerate::closure_env$0&lt;ref$&lt;f64&gt;,tuple$&lt;usize,ref$&lt;f64&gt; &gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;f64&gt; &gt;,Rust_MCS::gls::lssort::lssort::closure_env$5&gt; &gt;*, tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="2.4279%" y="309" width="0.0286%" height="15" fill="rgb(231,114,1)" fg:x="85" fg:w="1"/><text x="2.6779%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::min_by::fold::closure$0(core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;tuple$&lt;usize,ref$&lt;f64&gt; &gt;,Rust_MCS::gls::lssort::lssort::closure_env$5&gt;*, tuple$&lt;usize,ref$&lt;f64&gt; &gt;, tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="2.4279%" y="293" width="0.0286%" height="15" fill="rgb(207,184,53)" fg:x="85" fg:w="1"/><text x="2.6779%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::cmp::min_by(tuple$&lt;usize,ref$&lt;f64&gt; &gt;, tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="2.4279%" y="277" width="0.0286%" height="15" fill="rgb(224,95,51)" fg:x="85" fg:w="1"/><text x="2.6779%" y="287.50"></text></g><g><title>`0x7FFAC8CD1525 (1 samples, 0.03%)</title><rect x="2.4564%" y="277" width="0.0286%" height="15" fill="rgb(212,188,45)" fg:x="86" fg:w="1"/><text x="2.7064%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::len (2 samples, 0.06%)</title><rect x="2.4564%" y="389" width="0.0571%" height="15" fill="rgb(223,154,38)" fg:x="86" fg:w="2"/><text x="2.7064%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;tuple$&lt;usize,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="2.4564%" y="373" width="0.0571%" height="15" fill="rgb(251,22,52)" fg:x="86" fg:w="2"/><text x="2.7064%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;usize,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="2.4564%" y="357" width="0.0571%" height="15" fill="rgb(229,209,22)" fg:x="86" fg:w="2"/><text x="2.7064%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="2.4564%" y="341" width="0.0571%" height="15" fill="rgb(234,138,34)" fg:x="86" fg:w="2"/><text x="2.7064%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.06%)</title><rect x="2.4564%" y="325" width="0.0571%" height="15" fill="rgb(212,95,11)" fg:x="86" fg:w="2"/><text x="2.7064%" y="335.50"></text></g><g><title>`0x7FFAC8CA2B99 (2 samples, 0.06%)</title><rect x="2.4564%" y="309" width="0.0571%" height="15" fill="rgb(240,179,47)" fg:x="86" fg:w="2"/><text x="2.7064%" y="319.50"></text></g><g><title>`0x7FFAC8C67DBE (2 samples, 0.06%)</title><rect x="2.4564%" y="293" width="0.0571%" height="15" fill="rgb(240,163,11)" fg:x="86" fg:w="2"/><text x="2.7064%" y="303.50"></text></g><g><title>`0x7FFAC8CD1D3D (1 samples, 0.03%)</title><rect x="2.4850%" y="277" width="0.0286%" height="15" fill="rgb(236,37,12)" fg:x="87" fg:w="1"/><text x="2.7350%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec&lt;tuple$ (1 samples, 0.03%)</title><rect x="2.5136%" y="389" width="0.0286%" height="15" fill="rgb(232,164,16)" fg:x="88" fg:w="1"/><text x="2.7636%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;tuple$&lt;usize,f64&gt;,alloc::alloc::Global&gt;::as_mut_slice (1 samples, 0.03%)</title><rect x="2.5136%" y="373" width="0.0286%" height="15" fill="rgb(244,205,15)" fg:x="88" fg:w="1"/><text x="2.7636%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;tuple$&lt;usize,f64&gt;,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="2.5136%" y="357" width="0.0286%" height="15" fill="rgb(223,117,47)" fg:x="88" fg:w="1"/><text x="2.7636%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;usize,f64&gt;,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="2.5136%" y="341" width="0.0286%" height="15" fill="rgb(244,107,35)" fg:x="88" fg:w="1"/><text x="2.7636%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="2.5136%" y="325" width="0.0286%" height="15" fill="rgb(205,140,8)" fg:x="88" fg:w="1"/><text x="2.7636%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="2.5136%" y="309" width="0.0286%" height="15" fill="rgb(228,84,46)" fg:x="88" fg:w="1"/><text x="2.7636%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lslocal::lslocal&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double*, double*, double*, double*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool*, alloc::vec::Vec (5 samples, 0.14%)</title><rect x="2.4279%" y="405" width="0.1428%" height="15" fill="rgb(254,188,9)" fg:x="85" fg:w="5"/><text x="2.6779%" y="415.50"></text></g><g><title>`0x7FFAC8C8F3FA (1 samples, 0.03%)</title><rect x="2.5421%" y="389" width="0.0286%" height="15" fill="rgb(206,112,54)" fg:x="89" fg:w="1"/><text x="2.7921%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.5707%" y="389" width="0.0286%" height="15" fill="rgb(216,84,49)" fg:x="90" fg:w="1"/><text x="2.8207%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="2.5707%" y="373" width="0.0286%" height="15" fill="rgb(214,194,35)" fg:x="90" fg:w="1"/><text x="2.8207%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.5707%" y="357" width="0.0286%" height="15" fill="rgb(249,28,3)" fg:x="90" fg:w="1"/><text x="2.8207%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.5707%" y="341" width="0.0286%" height="15" fill="rgb(222,56,52)" fg:x="90" fg:w="1"/><text x="2.8207%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.5707%" y="325" width="0.0286%" height="15" fill="rgb(245,217,50)" fg:x="90" fg:w="1"/><text x="2.8207%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="2.5707%" y="309" width="0.0286%" height="15" fill="rgb(213,201,24)" fg:x="90" fg:w="1"/><text x="2.8207%" y="319.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="2.5707%" y="293" width="0.0286%" height="15" fill="rgb(248,116,28)" fg:x="90" fg:w="1"/><text x="2.8207%" y="303.50"></text></g><g><title>`0x7FFAC8C67B74 (1 samples, 0.03%)</title><rect x="2.5707%" y="277" width="0.0286%" height="15" fill="rgb(219,72,43)" fg:x="90" fg:w="1"/><text x="2.8207%" y="287.50"></text></g><g><title>`0x7FFAC8C68175 (1 samples, 0.03%)</title><rect x="2.5707%" y="261" width="0.0286%" height="15" fill="rgb(209,138,14)" fg:x="90" fg:w="1"/><text x="2.8207%" y="271.50"></text></g><g><title>`0x7FFAC6527CED (1 samples, 0.03%)</title><rect x="2.5993%" y="373" width="0.0286%" height="15" fill="rgb(222,18,33)" fg:x="91" fg:w="1"/><text x="2.8493%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lspar::lspar&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 0.09%)</title><rect x="2.5707%" y="405" width="0.0857%" height="15" fill="rgb(213,199,7)" fg:x="90" fg:w="3"/><text x="2.8207%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (2 samples, 0.06%)</title><rect x="2.5993%" y="389" width="0.0571%" height="15" fill="rgb(250,110,10)" fg:x="91" fg:w="2"/><text x="2.8493%" y="399.50"></text></g><g><title>`0x7FFAC6527CF6 (1 samples, 0.03%)</title><rect x="2.6278%" y="373" width="0.0286%" height="15" fill="rgb(248,123,6)" fg:x="92" fg:w="1"/><text x="2.8778%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="2.6564%" y="357" width="0.0286%" height="15" fill="rgb(206,91,31)" fg:x="93" fg:w="1"/><text x="2.9064%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.6564%" y="341" width="0.0286%" height="15" fill="rgb(211,154,13)" fg:x="93" fg:w="1"/><text x="2.9064%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.6564%" y="325" width="0.0286%" height="15" fill="rgb(225,148,7)" fg:x="93" fg:w="1"/><text x="2.9064%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.6564%" y="309" width="0.0286%" height="15" fill="rgb(220,160,43)" fg:x="93" fg:w="1"/><text x="2.9064%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="2.6564%" y="293" width="0.0286%" height="15" fill="rgb(213,52,39)" fg:x="93" fg:w="1"/><text x="2.9064%" y="303.50"></text></g><g><title>`0x7FFAC8CA2BB6 (1 samples, 0.03%)</title><rect x="2.6564%" y="277" width="0.0286%" height="15" fill="rgb(243,137,7)" fg:x="93" fg:w="1"/><text x="2.9064%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;tuple$ (1 samples, 0.03%)</title><rect x="2.6849%" y="357" width="0.0286%" height="15" fill="rgb(230,79,13)" fg:x="94" fg:w="1"/><text x="2.9349%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;tuple$ (1 samples, 0.03%)</title><rect x="2.6849%" y="341" width="0.0286%" height="15" fill="rgb(247,105,23)" fg:x="94" fg:w="1"/><text x="2.9349%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (3 samples, 0.09%)</title><rect x="2.6564%" y="373" width="0.0857%" height="15" fill="rgb(223,179,41)" fg:x="93" fg:w="3"/><text x="2.9064%" y="383.50"></text></g><g><title>`0x7FFAC8C8FA02 (1 samples, 0.03%)</title><rect x="2.7135%" y="357" width="0.0286%" height="15" fill="rgb(218,9,34)" fg:x="95" fg:w="1"/><text x="2.9635%" y="367.50"></text></g><g><title>`0x7FFAC8C6B2F9 (1 samples, 0.03%)</title><rect x="2.7135%" y="341" width="0.0286%" height="15" fill="rgb(222,106,8)" fg:x="95" fg:w="1"/><text x="2.9635%" y="351.50"></text></g><g><title>`0x7FFAC8C6CA8C (1 samples, 0.03%)</title><rect x="2.7135%" y="325" width="0.0286%" height="15" fill="rgb(211,220,0)" fg:x="95" fg:w="1"/><text x="2.9635%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.7421%" y="373" width="0.0286%" height="15" fill="rgb(229,52,16)" fg:x="96" fg:w="1"/><text x="2.9921%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.7421%" y="357" width="0.0286%" height="15" fill="rgb(212,155,18)" fg:x="96" fg:w="1"/><text x="2.9921%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;bool&gt;*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.7421%" y="341" width="0.0286%" height="15" fill="rgb(242,21,14)" fg:x="96" fg:w="1"/><text x="2.9921%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lslocal::lslocal&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double, double, double*, double*, double*, double*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool*, alloc::vec::Vec (5 samples, 0.14%)</title><rect x="2.6564%" y="389" width="0.1428%" height="15" fill="rgb(222,19,48)" fg:x="93" fg:w="5"/><text x="2.9064%" y="399.50"></text></g><g><title>`0x7FFAC8C8F547 (1 samples, 0.03%)</title><rect x="2.7706%" y="373" width="0.0286%" height="15" fill="rgb(232,45,27)" fg:x="97" fg:w="1"/><text x="3.0206%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lsquart::lsquart&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double*, double*, double*, double*, double*, double*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool*, alloc::vec::Vec (6 samples, 0.17%)</title><rect x="2.6564%" y="405" width="0.1714%" height="15" fill="rgb(249,103,42)" fg:x="93" fg:w="6"/><text x="2.9064%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt;::complex_eigenvalues&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt; (1 samples, 0.03%)</title><rect x="2.7992%" y="389" width="0.0286%" height="15" fill="rgb(246,81,33)" fg:x="98" fg:w="1"/><text x="3.0492%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;enum2$&lt;core::option::Option&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt; &gt; &gt;,nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt; &gt; &gt; &gt;::unwrap(enum2$&lt;core::option::Option&lt;tuple$&lt;enum2$&lt;core::option::Option&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt; &gt; &gt;,nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="2.7992%" y="373" width="0.0286%" height="15" fill="rgb(252,33,42)" fg:x="98" fg:w="1"/><text x="3.0492%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::linalg::schur::Schur&lt;f64,nalgebra::base::dimension::Const&lt;3&gt; &gt;::do_decompose&lt;f64,nalgebra::base::dimension::Const&lt;3&gt; &gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="2.7992%" y="357" width="0.0286%" height="15" fill="rgb(209,212,41)" fg:x="98" fg:w="1"/><text x="3.0492%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::linalg::hessenberg::Hessenberg&lt;f64,nalgebra::base::dimension::Const&lt;3&gt; &gt;::new_with_workspace&lt;f64,nalgebra::base::dimension::Const&lt;3&gt; &gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="2.7992%" y="341" width="0.0286%" height="15" fill="rgb(207,154,6)" fg:x="98" fg:w="1"/><text x="3.0492%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::linalg::householder::clear_column_unchecked(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,3,3&gt; &gt;*, unsigned long long, unsigned long long, enum2$&lt;core::option::Option&lt;ref_mut$&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="2.7992%" y="325" width="0.0286%" height="15" fill="rgb(223,64,47)" fg:x="98" fg:w="1"/><text x="3.0492%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::linalg::householder::reflection_axis_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.7992%" y="309" width="0.0286%" height="15" fill="rgb(211,161,38)" fg:x="98" fg:w="1"/><text x="3.0492%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;3&gt; &gt; &gt;::normalize_mut (1 samples, 0.03%)</title><rect x="2.7992%" y="293" width="0.0286%" height="15" fill="rgb(219,138,40)" fg:x="98" fg:w="1"/><text x="3.0492%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;3&gt; &gt; &gt;::unscale_mut (1 samples, 0.03%)</title><rect x="2.7992%" y="277" width="0.0286%" height="15" fill="rgb(241,228,46)" fg:x="98" fg:w="1"/><text x="3.0492%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;3&gt; &gt; &gt;::apply(nalgebra::base::matrix::impl$19::unscale_mut::closure_env$0&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.7992%" y="261" width="0.0286%" height="15" fill="rgb(223,209,38)" fg:x="98" fg:w="1"/><text x="3.0492%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::impl$19::unscale_mut::closure$0(nalgebra::base::matrix::impl$19::unscale_mut::closure_env$0&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::matrix_view::ViewStorageMut&lt;f64,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="2.7992%" y="245" width="0.0286%" height="15" fill="rgb(236,164,45)" fg:x="98" fg:w="1"/><text x="3.0492%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::clone::impls::impl$19::clone (1 samples, 0.03%)</title><rect x="2.7992%" y="229" width="0.0286%" height="15" fill="rgb(231,15,5)" fg:x="98" fg:w="1"/><text x="3.0492%" y="239.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lsrange::lsrange&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="2.8278%" y="405" width="0.0286%" height="15" fill="rgb(252,35,15)" fg:x="99" fg:w="1"/><text x="3.0778%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::min_by(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt; &gt;, Rust_MCS::gls::lsrange::lsrange::closure_env$2 (1 samples, 0.03%)</title><rect x="2.8278%" y="389" width="0.0286%" height="15" fill="rgb(248,181,18)" fg:x="99" fg:w="1"/><text x="3.0778%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::reduce(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt; &gt;, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;f64,Rust_MCS::gls::lsrange::lsrange::closure_env$2 (1 samples, 0.03%)</title><rect x="2.8278%" y="373" width="0.0286%" height="15" fill="rgb(233,39,42)" fg:x="99" fg:w="1"/><text x="3.0778%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt; &gt;, double, core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;f64,Rust_MCS::gls::lsrange::lsrange::closure_env$2 (1 samples, 0.03%)</title><rect x="2.8278%" y="357" width="0.0286%" height="15" fill="rgb(238,110,33)" fg:x="99" fg:w="1"/><text x="3.0778%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::filter::impl$3::fold(core::iter::adapters::filter::Filter&lt;core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;,Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt; &gt;, double, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;f64,Rust_MCS::gls::lsrange::lsrange::closure_env$2 (1 samples, 0.03%)</title><rect x="2.8278%" y="341" width="0.0286%" height="15" fill="rgb(233,195,10)" fg:x="99" fg:w="1"/><text x="3.0778%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::zip::impl$1::fold(core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;, double, core::iter::adapters::filter::filter_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;f64,Rust_MCS::gls::lsrange::lsrange::closure_env$2 (1 samples, 0.03%)</title><rect x="2.8278%" y="325" width="0.0286%" height="15" fill="rgb(254,105,3)" fg:x="99" fg:w="1"/><text x="3.0778%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::zip::impl$3::fold(core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;, double, core::iter::adapters::filter::filter_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;f64,Rust_MCS::gls::lsrange::lsrange::closure_env$2 (1 samples, 0.03%)</title><rect x="2.8278%" y="309" width="0.0286%" height="15" fill="rgb(221,225,9)" fg:x="99" fg:w="1"/><text x="3.0778%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::zip::impl$20::spec_fold(core::iter::adapters::zip::Zip&lt;nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,nalgebra::base::iter::MatrixIter&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt; &gt;, double, core::iter::adapters::filter::filter_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;f64,Rust_MCS::gls::lsrange::lsrange::closure_env$2 (1 samples, 0.03%)</title><rect x="2.8278%" y="293" width="0.0286%" height="15" fill="rgb(224,227,45)" fg:x="99" fg:w="1"/><text x="3.0778%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::filter::filter_fold::closure$0(core::iter::adapters::filter::filter_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,Rust_MCS::gls::lsrange::lsrange::closure_env$0&lt;6&gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;f64,Rust_MCS::gls::lsrange::lsrange::closure_env$2&lt;6&gt; &gt; &gt; &gt;*, double, tuple$&lt;ref$&lt;f64&gt;,ref$ (1 samples, 0.03%)</title><rect x="2.8278%" y="277" width="0.0286%" height="15" fill="rgb(229,198,43)" fg:x="99" fg:w="1"/><text x="3.0778%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;f64&gt;,ref$&lt;f64&gt; &gt;,f64,f64,Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt;,core::iter::traits::iterator::Iterator::min_by::fold::closure_env$0&lt;f64,Rust_MCS::gls::lsrange::lsrange::closure_env$2&lt;6&gt; &gt; &gt;*, double, tuple$&lt;ref$&lt;f64&gt;,ref$ (1 samples, 0.03%)</title><rect x="2.8278%" y="261" width="0.0286%" height="15" fill="rgb(206,209,35)" fg:x="99" fg:w="1"/><text x="3.0778%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lsrange::lsrange::closure$1(Rust_MCS::gls::lsrange::lsrange::closure_env$1&lt;6&gt;*, tuple$&lt;ref$&lt;f64&gt;,ref$ (1 samples, 0.03%)</title><rect x="2.8278%" y="245" width="0.0286%" height="15" fill="rgb(245,195,53)" fg:x="99" fg:w="1"/><text x="3.0778%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.8563%" y="405" width="0.0286%" height="15" fill="rgb(240,92,26)" fg:x="100" fg:w="1"/><text x="3.1063%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="2.8563%" y="389" width="0.0286%" height="15" fill="rgb(207,40,23)" fg:x="100" fg:w="1"/><text x="3.1063%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.8563%" y="373" width="0.0286%" height="15" fill="rgb(223,111,35)" fg:x="100" fg:w="1"/><text x="3.1063%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.8563%" y="357" width="0.0286%" height="15" fill="rgb(229,147,28)" fg:x="100" fg:w="1"/><text x="3.1063%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.8563%" y="341" width="0.0286%" height="15" fill="rgb(211,29,28)" fg:x="100" fg:w="1"/><text x="3.1063%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="2.8563%" y="325" width="0.0286%" height="15" fill="rgb(228,72,33)" fg:x="100" fg:w="1"/><text x="3.1063%" y="335.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="2.8563%" y="309" width="0.0286%" height="15" fill="rgb(205,214,31)" fg:x="100" fg:w="1"/><text x="3.1063%" y="319.50"></text></g><g><title>`0x7FFAC8C67B74 (1 samples, 0.03%)</title><rect x="2.8563%" y="293" width="0.0286%" height="15" fill="rgb(224,111,15)" fg:x="100" fg:w="1"/><text x="3.1063%" y="303.50"></text></g><g><title>`0x7FFAC8C68307 (1 samples, 0.03%)</title><rect x="2.8563%" y="277" width="0.0286%" height="15" fill="rgb(253,21,26)" fg:x="100" fg:w="1"/><text x="3.1063%" y="287.50"></text></g><g><title>`0x7FFAC8C68170 (1 samples, 0.03%)</title><rect x="2.8849%" y="165" width="0.0286%" height="15" fill="rgb(245,139,43)" fg:x="101" fg:w="1"/><text x="3.1349%" y="175.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity (2 samples, 0.06%)</title><rect x="2.8849%" y="277" width="0.0571%" height="15" fill="rgb(252,170,7)" fg:x="101" fg:w="2"/><text x="3.1349%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="2.8849%" y="261" width="0.0571%" height="15" fill="rgb(231,118,14)" fg:x="101" fg:w="2"/><text x="3.1349%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="2.8849%" y="245" width="0.0571%" height="15" fill="rgb(238,83,0)" fg:x="101" fg:w="2"/><text x="3.1349%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.06%)</title><rect x="2.8849%" y="229" width="0.0571%" height="15" fill="rgb(221,39,39)" fg:x="101" fg:w="2"/><text x="3.1349%" y="239.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.06%)</title><rect x="2.8849%" y="213" width="0.0571%" height="15" fill="rgb(222,119,46)" fg:x="101" fg:w="2"/><text x="3.1349%" y="223.50"></text></g><g><title>`0x7FFAC8CA2B99 (2 samples, 0.06%)</title><rect x="2.8849%" y="197" width="0.0571%" height="15" fill="rgb(222,165,49)" fg:x="101" fg:w="2"/><text x="3.1349%" y="207.50"></text></g><g><title>`0x7FFAC8C67B74 (2 samples, 0.06%)</title><rect x="2.8849%" y="181" width="0.0571%" height="15" fill="rgb(219,113,52)" fg:x="101" fg:w="2"/><text x="3.1349%" y="191.50"></text></g><g><title>`0x7FFAC8C688AD (1 samples, 0.03%)</title><rect x="2.9135%" y="165" width="0.0286%" height="15" fill="rgb(214,7,15)" fg:x="102" fg:w="1"/><text x="3.1635%" y="175.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.9420%" y="277" width="0.0286%" height="15" fill="rgb(235,32,4)" fg:x="103" fg:w="1"/><text x="3.1920%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.9420%" y="261" width="0.0286%" height="15" fill="rgb(238,90,54)" fg:x="103" fg:w="1"/><text x="3.1920%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.9420%" y="245" width="0.0286%" height="15" fill="rgb(213,208,19)" fg:x="103" fg:w="1"/><text x="3.1920%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::zip::Zip&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;f64&gt; &gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="2.9420%" y="229" width="0.0286%" height="15" fill="rgb(233,156,4)" fg:x="103" fg:w="1"/><text x="3.1920%" y="239.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.03%)</title><rect x="2.9420%" y="213" width="0.0286%" height="15" fill="rgb(207,194,5)" fg:x="103" fg:w="1"/><text x="3.1920%" y="223.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.9420%" y="197" width="0.0286%" height="15" fill="rgb(206,111,30)" fg:x="103" fg:w="1"/><text x="3.1920%" y="207.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;f64,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.9420%" y="181" width="0.0286%" height="15" fill="rgb(243,70,54)" fg:x="103" fg:w="1"/><text x="3.1920%" y="191.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="2.9420%" y="165" width="0.0286%" height="15" fill="rgb(242,28,8)" fg:x="103" fg:w="1"/><text x="3.1920%" y="175.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="2.9420%" y="149" width="0.0286%" height="15" fill="rgb(219,106,18)" fg:x="103" fg:w="1"/><text x="3.1920%" y="159.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="2.9420%" y="133" width="0.0286%" height="15" fill="rgb(244,222,10)" fg:x="103" fg:w="1"/><text x="3.1920%" y="143.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="2.9420%" y="117" width="0.0286%" height="15" fill="rgb(236,179,52)" fg:x="103" fg:w="1"/><text x="3.1920%" y="127.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="2.9420%" y="101" width="0.0286%" height="15" fill="rgb(213,23,39)" fg:x="103" fg:w="1"/><text x="3.1920%" y="111.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="2.9420%" y="85" width="0.0286%" height="15" fill="rgb(238,48,10)" fg:x="103" fg:w="1"/><text x="3.1920%" y="95.50"></text></g><g><title>`0x7FFAC8C67DBE (1 samples, 0.03%)</title><rect x="2.9420%" y="69" width="0.0286%" height="15" fill="rgb(251,196,23)" fg:x="103" fg:w="1"/><text x="3.1920%" y="79.50"></text></g><g><title>`0x7FFAC8CD1DCD (1 samples, 0.03%)</title><rect x="2.9420%" y="53" width="0.0286%" height="15" fill="rgb(250,152,24)" fg:x="103" fg:w="1"/><text x="3.1920%" y="63.50"></text></g><g><title>`0x7FFAC8CA0625 (1 samples, 0.03%)</title><rect x="2.9420%" y="37" width="0.0286%" height="15" fill="rgb(209,150,17)" fg:x="103" fg:w="1"/><text x="3.1920%" y="47.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (4 samples, 0.11%)</title><rect x="2.8849%" y="405" width="0.1143%" height="15" fill="rgb(234,202,34)" fg:x="101" fg:w="4"/><text x="3.1349%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_slice (4 samples, 0.11%)</title><rect x="2.8849%" y="389" width="0.1143%" height="15" fill="rgb(253,148,53)" fg:x="101" fg:w="4"/><text x="3.1349%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_ptr (4 samples, 0.11%)</title><rect x="2.8849%" y="373" width="0.1143%" height="15" fill="rgb(218,129,16)" fg:x="101" fg:w="4"/><text x="3.1349%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::ptr (4 samples, 0.11%)</title><rect x="2.8849%" y="357" width="0.1143%" height="15" fill="rgb(216,85,19)" fg:x="101" fg:w="4"/><text x="3.1349%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.11%)</title><rect x="2.8849%" y="341" width="0.1143%" height="15" fill="rgb(235,228,7)" fg:x="101" fg:w="4"/><text x="3.1349%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.11%)</title><rect x="2.8849%" y="325" width="0.1143%" height="15" fill="rgb(245,175,0)" fg:x="101" fg:w="4"/><text x="3.1349%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lsdescent::lsdescent&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, double*, double*, double*, double*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;*, bool*, alloc::vec::Vec (4 samples, 0.11%)</title><rect x="2.8849%" y="309" width="0.1143%" height="15" fill="rgb(208,168,36)" fg:x="101" fg:w="4"/><text x="3.1349%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::lssort::lssort(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec (4 samples, 0.11%)</title><rect x="2.8849%" y="293" width="0.1143%" height="15" fill="rgb(246,171,24)" fg:x="101" fg:w="4"/><text x="3.1349%" y="303.50"></text></g><g><title>`0x7FFAC8C8FA02 (1 samples, 0.03%)</title><rect x="2.9706%" y="277" width="0.0286%" height="15" fill="rgb(215,142,24)" fg:x="104" fg:w="1"/><text x="3.2206%" y="287.50"></text></g><g><title>`0x7FFAC8C6BB3D (1 samples, 0.03%)</title><rect x="2.9706%" y="261" width="0.0286%" height="15" fill="rgb(250,187,7)" fg:x="104" fg:w="1"/><text x="3.2206%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (23 samples, 0.66%)</title><rect x="2.3708%" y="453" width="0.6570%" height="15" fill="rgb(228,66,33)" fg:x="83" fg:w="23"/><text x="2.6208%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_slice (23 samples, 0.66%)</title><rect x="2.3708%" y="437" width="0.6570%" height="15" fill="rgb(234,215,21)" fg:x="83" fg:w="23"/><text x="2.6208%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::gls::gls&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (23 samples, 0.66%)</title><rect x="2.3708%" y="421" width="0.6570%" height="15" fill="rgb(222,191,20)" fg:x="83" fg:w="23"/><text x="2.6208%" y="431.50"></text></g><g><title>`0x7FFAC8C8F513 (1 samples, 0.03%)</title><rect x="2.9991%" y="405" width="0.0286%" height="15" fill="rgb(245,79,54)" fg:x="105" fg:w="1"/><text x="3.2491%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::lsearch::lsearch&lt;6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, enum2$&lt;core::option::Option&lt;usize&gt; &gt;, Rust_MCS::StopStruct*, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (86 samples, 2.46%)</title><rect x="0.7712%" y="469" width="2.4564%" height="15" fill="rgb(240,10,37)" fg:x="27" fg:w="86"/><text x="1.0212%" y="479.50">Ru..</text></g><g><title>`0x7FFAC8C8FA02 (7 samples, 0.20%)</title><rect x="3.0277%" y="453" width="0.1999%" height="15" fill="rgb(214,192,32)" fg:x="106" fg:w="7"/><text x="3.2777%" y="463.50"></text></g><g><title>`0x7FFAC8C6B73A (7 samples, 0.20%)</title><rect x="3.0277%" y="437" width="0.1999%" height="15" fill="rgb(209,36,54)" fg:x="106" fg:w="7"/><text x="3.2777%" y="447.50"></text></g><g><title>`0x7FFAC8D0DFEA (7 samples, 0.20%)</title><rect x="3.0277%" y="421" width="0.1999%" height="15" fill="rgb(220,10,11)" fg:x="106" fg:w="7"/><text x="3.2777%" y="431.50"></text></g><g><title>`0x7FFAC8C6EDEE (7 samples, 0.20%)</title><rect x="3.0277%" y="405" width="0.1999%" height="15" fill="rgb(221,106,17)" fg:x="106" fg:w="7"/><text x="3.2777%" y="415.50"></text></g><g><title>`0x7FFAC8CE06D9 (7 samples, 0.20%)</title><rect x="3.0277%" y="389" width="0.1999%" height="15" fill="rgb(251,142,44)" fg:x="106" fg:w="7"/><text x="3.2777%" y="399.50"></text></g><g><title>`0x7FFAC8DBC384 (7 samples, 0.20%)</title><rect x="3.0277%" y="373" width="0.1999%" height="15" fill="rgb(238,13,15)" fg:x="106" fg:w="7"/><text x="3.2777%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="3.2562%" y="437" width="0.0286%" height="15" fill="rgb(208,107,27)" fg:x="114" fg:w="1"/><text x="3.5062%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_generic(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;, nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="3.2562%" y="421" width="0.0286%" height="15" fill="rgb(205,136,37)" fg:x="114" fg:w="1"/><text x="3.5062%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::default_allocator::impl$9::reallocate_copy(nalgebra::base::dimension::Const&lt;3&gt;, nalgebra::base::dimension::Dyn, nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="3.2562%" y="405" width="0.0286%" height="15" fill="rgb(250,205,27)" fg:x="114" fg:w="1"/><text x="3.5062%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt;::resize(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="3.2562%" y="389" width="0.0286%" height="15" fill="rgb(210,80,43)" fg:x="114" fg:w="1"/><text x="3.5062%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="3.2562%" y="373" width="0.0286%" height="15" fill="rgb(247,160,36)" fg:x="114" fg:w="1"/><text x="3.5062%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="3.2562%" y="357" width="0.0286%" height="15" fill="rgb(234,13,49)" fg:x="114" fg:w="1"/><text x="3.5062%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (1 samples, 0.03%)</title><rect x="3.2562%" y="341" width="0.0286%" height="15" fill="rgb(234,122,0)" fg:x="114" fg:w="1"/><text x="3.5062%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (1 samples, 0.03%)</title><rect x="3.2562%" y="325" width="0.0286%" height="15" fill="rgb(207,146,38)" fg:x="114" fg:w="1"/><text x="3.5062%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (1 samples, 0.03%)</title><rect x="3.2562%" y="309" width="0.0286%" height="15" fill="rgb(207,177,25)" fg:x="114" fg:w="1"/><text x="3.5062%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="3.2562%" y="293" width="0.0286%" height="15" fill="rgb(211,178,42)" fg:x="114" fg:w="1"/><text x="3.5062%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="3.2562%" y="277" width="0.0286%" height="15" fill="rgb(230,69,54)" fg:x="114" fg:w="1"/><text x="3.5062%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="3.2562%" y="261" width="0.0286%" height="15" fill="rgb(214,135,41)" fg:x="114" fg:w="1"/><text x="3.5062%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="3.2562%" y="245" width="0.0286%" height="15" fill="rgb(237,67,25)" fg:x="114" fg:w="1"/><text x="3.5062%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="3.2562%" y="229" width="0.0286%" height="15" fill="rgb(222,189,50)" fg:x="114" fg:w="1"/><text x="3.5062%" y="239.50"></text></g><g><title>`0x7FFAC8D04B8C (1 samples, 0.03%)</title><rect x="3.2562%" y="213" width="0.0286%" height="15" fill="rgb(245,148,34)" fg:x="114" fg:w="1"/><text x="3.5062%" y="223.50"></text></g><g><title>`0x7FFAC8C90DC5 (1 samples, 0.03%)</title><rect x="3.2562%" y="197" width="0.0286%" height="15" fill="rgb(222,29,6)" fg:x="114" fg:w="1"/><text x="3.5062%" y="207.50"></text></g><g><title>`0x7FFAC8C91552 (1 samples, 0.03%)</title><rect x="3.2562%" y="181" width="0.0286%" height="15" fill="rgb(221,189,43)" fg:x="114" fg:w="1"/><text x="3.5062%" y="191.50"></text></g><g><title>`0x7FFAC8CD135B (1 samples, 0.03%)</title><rect x="3.2848%" y="245" width="0.0286%" height="15" fill="rgb(207,36,27)" fg:x="115" fg:w="1"/><text x="3.5348%" y="255.50"></text></g><g><title>`0x7FFAC8C6CAB2 (1 samples, 0.03%)</title><rect x="3.2848%" y="229" width="0.0286%" height="15" fill="rgb(217,90,24)" fg:x="115" fg:w="1"/><text x="3.5348%" y="239.50"></text></g><g><title>`0x7FFAC8CD1940 (2 samples, 0.06%)</title><rect x="3.3133%" y="245" width="0.0571%" height="15" fill="rgb(224,66,35)" fg:x="116" fg:w="2"/><text x="3.5633%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::impl$42::clone(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (4 samples, 0.11%)</title><rect x="3.2848%" y="437" width="0.1143%" height="15" fill="rgb(221,13,50)" fg:x="115" fg:w="4"/><text x="3.5348%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::vec_storage::impl$23::clone(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (4 samples, 0.11%)</title><rect x="3.2848%" y="421" width="0.1143%" height="15" fill="rgb(236,68,49)" fg:x="115" fg:w="4"/><text x="3.5348%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (4 samples, 0.11%)</title><rect x="3.2848%" y="405" width="0.1143%" height="15" fill="rgb(229,146,28)" fg:x="115" fg:w="4"/><text x="3.5348%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (4 samples, 0.11%)</title><rect x="3.2848%" y="389" width="0.1143%" height="15" fill="rgb(225,31,38)" fg:x="115" fg:w="4"/><text x="3.5348%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (4 samples, 0.11%)</title><rect x="3.2848%" y="373" width="0.1143%" height="15" fill="rgb(250,208,3)" fg:x="115" fg:w="4"/><text x="3.5348%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (4 samples, 0.11%)</title><rect x="3.2848%" y="357" width="0.1143%" height="15" fill="rgb(246,54,23)" fg:x="115" fg:w="4"/><text x="3.5348%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="3.2848%" y="341" width="0.1143%" height="15" fill="rgb(243,76,11)" fg:x="115" fg:w="4"/><text x="3.5348%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="3.2848%" y="325" width="0.1143%" height="15" fill="rgb(245,21,50)" fg:x="115" fg:w="4"/><text x="3.5348%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.11%)</title><rect x="3.2848%" y="309" width="0.1143%" height="15" fill="rgb(228,9,43)" fg:x="115" fg:w="4"/><text x="3.5348%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (4 samples, 0.11%)</title><rect x="3.2848%" y="293" width="0.1143%" height="15" fill="rgb(208,100,47)" fg:x="115" fg:w="4"/><text x="3.5348%" y="303.50"></text></g><g><title>`0x7FFAC8CA2B99 (4 samples, 0.11%)</title><rect x="3.2848%" y="277" width="0.1143%" height="15" fill="rgb(232,26,8)" fg:x="115" fg:w="4"/><text x="3.5348%" y="287.50"></text></g><g><title>`0x7FFAC8C67DBE (4 samples, 0.11%)</title><rect x="3.2848%" y="261" width="0.1143%" height="15" fill="rgb(216,166,38)" fg:x="115" fg:w="4"/><text x="3.5348%" y="271.50"></text></g><g><title>`0x7FFAC8CD25C3 (1 samples, 0.03%)</title><rect x="3.3705%" y="245" width="0.0286%" height="15" fill="rgb(251,202,51)" fg:x="118" fg:w="1"/><text x="3.6205%" y="255.50"></text></g><g><title>`0x7FFAC8D0D71D (1 samples, 0.03%)</title><rect x="3.3705%" y="229" width="0.0286%" height="15" fill="rgb(254,216,34)" fg:x="118" fg:w="1"/><text x="3.6205%" y="239.50"></text></g><g><title>`0x7FFAC8DBC2C4 (1 samples, 0.03%)</title><rect x="3.3705%" y="213" width="0.0286%" height="15" fill="rgb(251,32,27)" fg:x="118" fg:w="1"/><text x="3.6205%" y="223.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally_mut&lt;f64,nalgebra::base::dimension::Const&lt;3&gt; &gt; (6 samples, 0.17%)</title><rect x="3.2562%" y="453" width="0.1714%" height="15" fill="rgb(208,127,28)" fg:x="114" fg:w="6"/><text x="3.5062%" y="463.50"></text></g><g><title>`0x7FFAC8C8FA02 (1 samples, 0.03%)</title><rect x="3.3990%" y="437" width="0.0286%" height="15" fill="rgb(224,137,22)" fg:x="119" fg:w="1"/><text x="3.6490%" y="447.50"></text></g><g><title>`0x7FFAC8C6B73A (1 samples, 0.03%)</title><rect x="3.3990%" y="421" width="0.0286%" height="15" fill="rgb(254,70,32)" fg:x="119" fg:w="1"/><text x="3.6490%" y="431.50"></text></g><g><title>`0x7FFAC8D0DFEA (1 samples, 0.03%)</title><rect x="3.3990%" y="405" width="0.0286%" height="15" fill="rgb(229,75,37)" fg:x="119" fg:w="1"/><text x="3.6490%" y="415.50"></text></g><g><title>`0x7FFAC8C6EDEE (1 samples, 0.03%)</title><rect x="3.3990%" y="389" width="0.0286%" height="15" fill="rgb(252,64,23)" fg:x="119" fg:w="1"/><text x="3.6490%" y="399.50"></text></g><g><title>`0x7FFAC8CE06D9 (1 samples, 0.03%)</title><rect x="3.3990%" y="373" width="0.0286%" height="15" fill="rgb(232,162,48)" fg:x="119" fg:w="1"/><text x="3.6490%" y="383.50"></text></g><g><title>`0x7FFAC8DBC384 (1 samples, 0.03%)</title><rect x="3.3990%" y="357" width="0.0286%" height="15" fill="rgb(246,160,12)" fg:x="119" fg:w="1"/><text x="3.6490%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::split_func::splinit&lt;6,1000&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, unsigned long long[1000]*, unsigned long long*, enum2$&lt;core::option::Option&lt;usize&gt; &gt;*, unsigned long long*, unsigned long long*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (8 samples, 0.23%)</title><rect x="3.2276%" y="469" width="0.2285%" height="15" fill="rgb(247,166,0)" fg:x="113" fg:w="8"/><text x="3.4776%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="3.4276%" y="453" width="0.0286%" height="15" fill="rgb(249,219,21)" fg:x="120" fg:w="1"/><text x="3.6776%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="3.4276%" y="437" width="0.0286%" height="15" fill="rgb(205,209,3)" fg:x="120" fg:w="1"/><text x="3.6776%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::add_basket::add_basket&lt;6&gt;(enum2$&lt;core::option::Option&lt;usize&gt; &gt;*, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="3.6561%" y="453" width="0.0286%" height="15" fill="rgb(243,44,1)" fg:x="128" fg:w="1"/><text x="3.9061%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::updtrec::updtrec(unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (5 samples, 0.14%)</title><rect x="3.7418%" y="437" width="0.1428%" height="15" fill="rgb(206,159,16)" fg:x="131" fg:w="5"/><text x="3.9918%" y="447.50"></text></g><g><title>`0x7FFAC8DC18D3 (4 samples, 0.11%)</title><rect x="3.8846%" y="197" width="0.1143%" height="15" fill="rgb(244,77,30)" fg:x="136" fg:w="4"/><text x="4.1346%" y="207.50"></text></g><g><title>`0x7FFAC8C91D19 (11 samples, 0.31%)</title><rect x="3.8846%" y="213" width="0.3142%" height="15" fill="rgb(218,69,12)" fg:x="136" fg:w="11"/><text x="4.1346%" y="223.50"></text></g><g><title>`0x7FFAC8DC18D7 (7 samples, 0.20%)</title><rect x="3.9989%" y="197" width="0.1999%" height="15" fill="rgb(212,87,7)" fg:x="140" fg:w="7"/><text x="4.2489%" y="207.50"></text></g><g><title>`0x7FFAC8C6B73A (1 samples, 0.03%)</title><rect x="4.1988%" y="181" width="0.0286%" height="15" fill="rgb(245,114,25)" fg:x="147" fg:w="1"/><text x="4.4488%" y="191.50"></text></g><g><title>`0x7FFAC8D0DFEA (1 samples, 0.03%)</title><rect x="4.1988%" y="165" width="0.0286%" height="15" fill="rgb(210,61,42)" fg:x="147" fg:w="1"/><text x="4.4488%" y="175.50"></text></g><g><title>`0x7FFAC8C6EDEE (1 samples, 0.03%)</title><rect x="4.1988%" y="149" width="0.0286%" height="15" fill="rgb(211,52,33)" fg:x="147" fg:w="1"/><text x="4.4488%" y="159.50"></text></g><g><title>`0x7FFAC8CE06D9 (1 samples, 0.03%)</title><rect x="4.1988%" y="133" width="0.0286%" height="15" fill="rgb(234,58,33)" fg:x="147" fg:w="1"/><text x="4.4488%" y="143.50"></text></g><g><title>`0x7FFAC8DBC384 (1 samples, 0.03%)</title><rect x="4.1988%" y="117" width="0.0286%" height="15" fill="rgb(220,115,36)" fg:x="147" fg:w="1"/><text x="4.4488%" y="127.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (15 samples, 0.43%)</title><rect x="3.8846%" y="405" width="0.4284%" height="15" fill="rgb(243,153,54)" fg:x="136" fg:w="15"/><text x="4.1346%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::reserve (15 samples, 0.43%)</title><rect x="3.8846%" y="389" width="0.4284%" height="15" fill="rgb(251,47,18)" fg:x="136" fg:w="15"/><text x="4.1346%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (15 samples, 0.43%)</title><rect x="3.8846%" y="373" width="0.4284%" height="15" fill="rgb(242,102,42)" fg:x="136" fg:w="15"/><text x="4.1346%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (15 samples, 0.43%)</title><rect x="3.8846%" y="357" width="0.4284%" height="15" fill="rgb(234,31,38)" fg:x="136" fg:w="15"/><text x="4.1346%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (15 samples, 0.43%)</title><rect x="3.8846%" y="341" width="0.4284%" height="15" fill="rgb(221,117,51)" fg:x="136" fg:w="15"/><text x="4.1346%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (15 samples, 0.43%)</title><rect x="3.8846%" y="325" width="0.4284%" height="15" fill="rgb(212,20,18)" fg:x="136" fg:w="15"/><text x="4.1346%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (15 samples, 0.43%)</title><rect x="3.8846%" y="309" width="0.4284%" height="15" fill="rgb(245,133,36)" fg:x="136" fg:w="15"/><text x="4.1346%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (15 samples, 0.43%)</title><rect x="3.8846%" y="293" width="0.4284%" height="15" fill="rgb(212,6,19)" fg:x="136" fg:w="15"/><text x="4.1346%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (15 samples, 0.43%)</title><rect x="3.8846%" y="277" width="0.4284%" height="15" fill="rgb(218,1,36)" fg:x="136" fg:w="15"/><text x="4.1346%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (15 samples, 0.43%)</title><rect x="3.8846%" y="261" width="0.4284%" height="15" fill="rgb(246,84,54)" fg:x="136" fg:w="15"/><text x="4.1346%" y="271.50"></text></g><g><title>`0x7FFAC8D04B8C (15 samples, 0.43%)</title><rect x="3.8846%" y="245" width="0.4284%" height="15" fill="rgb(242,110,6)" fg:x="136" fg:w="15"/><text x="4.1346%" y="255.50"></text></g><g><title>`0x7FFAC8C90DC5 (15 samples, 0.43%)</title><rect x="3.8846%" y="229" width="0.4284%" height="15" fill="rgb(214,47,5)" fg:x="136" fg:w="15"/><text x="4.1346%" y="239.50"></text></g><g><title>`0x7FFAC8C91D2C (4 samples, 0.11%)</title><rect x="4.1988%" y="213" width="0.1143%" height="15" fill="rgb(218,159,25)" fg:x="147" fg:w="4"/><text x="4.4488%" y="223.50"></text></g><g><title>`0x7FFAC8C8FA02 (4 samples, 0.11%)</title><rect x="4.1988%" y="197" width="0.1143%" height="15" fill="rgb(215,211,28)" fg:x="147" fg:w="4"/><text x="4.4488%" y="207.50"></text></g><g><title>`0x7FFAC8C6C2ED (3 samples, 0.09%)</title><rect x="4.2274%" y="181" width="0.0857%" height="15" fill="rgb(238,59,32)" fg:x="148" fg:w="3"/><text x="4.4774%" y="191.50"></text></g><g><title>`0x7FFAC8CCF5FF (3 samples, 0.09%)</title><rect x="4.2274%" y="165" width="0.0857%" height="15" fill="rgb(226,82,3)" fg:x="148" fg:w="3"/><text x="4.4774%" y="175.50"></text></g><g><title>`0x7FFAC8DBC384 (3 samples, 0.09%)</title><rect x="4.2274%" y="149" width="0.0857%" height="15" fill="rgb(240,164,32)" fg:x="148" fg:w="3"/><text x="4.4774%" y="159.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::mut_ptr::impl$0::add(enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="4.3131%" y="405" width="0.0286%" height="15" fill="rgb(232,46,7)" fg:x="151" fg:w="1"/><text x="4.5631%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::resize(unsigned long long, enum2$&lt;core::option::Option (26 samples, 0.74%)</title><rect x="3.8846%" y="437" width="0.7426%" height="15" fill="rgb(229,129,53)" fg:x="136" fg:w="26"/><text x="4.1346%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;::extend_with(unsigned long long, enum2$&lt;core::option::Option (26 samples, 0.74%)</title><rect x="3.8846%" y="421" width="0.7426%" height="15" fill="rgb(234,188,29)" fg:x="136" fg:w="26"/><text x="4.1346%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;usize&gt; &gt;*, enum2$&lt;core::option::Option (10 samples, 0.29%)</title><rect x="4.3416%" y="405" width="0.2856%" height="15" fill="rgb(246,141,4)" fg:x="152" fg:w="10"/><text x="4.5916%" y="415.50"></text></g><g><title>`0x7FFAC8C91BFD (1 samples, 0.03%)</title><rect x="4.6272%" y="213" width="0.0286%" height="15" fill="rgb(229,23,39)" fg:x="162" fg:w="1"/><text x="4.8772%" y="223.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="4.6272%" y="197" width="0.0286%" height="15" fill="rgb(206,12,3)" fg:x="162" fg:w="1"/><text x="4.8772%" y="207.50"></text></g><g><title>`0x7FFAC8C67DBE (1 samples, 0.03%)</title><rect x="4.6272%" y="181" width="0.0286%" height="15" fill="rgb(252,226,20)" fg:x="162" fg:w="1"/><text x="4.8772%" y="191.50"></text></g><g><title>`0x7FFAC8CD1940 (1 samples, 0.03%)</title><rect x="4.6272%" y="165" width="0.0286%" height="15" fill="rgb(216,123,35)" fg:x="162" fg:w="1"/><text x="4.8772%" y="175.50"></text></g><g><title>`0x7FFAC8DC18D3 (5 samples, 0.14%)</title><rect x="4.6558%" y="197" width="0.1428%" height="15" fill="rgb(212,68,40)" fg:x="163" fg:w="5"/><text x="4.9058%" y="207.50"></text></g><g><title>`0x7FFAC8C91D19 (10 samples, 0.29%)</title><rect x="4.6558%" y="213" width="0.2856%" height="15" fill="rgb(254,125,32)" fg:x="163" fg:w="10"/><text x="4.9058%" y="223.50"></text></g><g><title>`0x7FFAC8DC18D7 (5 samples, 0.14%)</title><rect x="4.7986%" y="197" width="0.1428%" height="15" fill="rgb(253,97,22)" fg:x="168" fg:w="5"/><text x="5.0486%" y="207.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::reserve (15 samples, 0.43%)</title><rect x="4.6272%" y="405" width="0.4284%" height="15" fill="rgb(241,101,14)" fg:x="162" fg:w="15"/><text x="4.8772%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;isize,alloc::alloc::Global&gt;::reserve (15 samples, 0.43%)</title><rect x="4.6272%" y="389" width="0.4284%" height="15" fill="rgb(238,103,29)" fg:x="162" fg:w="15"/><text x="4.8772%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (15 samples, 0.43%)</title><rect x="4.6272%" y="373" width="0.4284%" height="15" fill="rgb(233,195,47)" fg:x="162" fg:w="15"/><text x="4.8772%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (15 samples, 0.43%)</title><rect x="4.6272%" y="357" width="0.4284%" height="15" fill="rgb(246,218,30)" fg:x="162" fg:w="15"/><text x="4.8772%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (15 samples, 0.43%)</title><rect x="4.6272%" y="341" width="0.4284%" height="15" fill="rgb(219,145,47)" fg:x="162" fg:w="15"/><text x="4.8772%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (15 samples, 0.43%)</title><rect x="4.6272%" y="325" width="0.4284%" height="15" fill="rgb(243,12,26)" fg:x="162" fg:w="15"/><text x="4.8772%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (15 samples, 0.43%)</title><rect x="4.6272%" y="309" width="0.4284%" height="15" fill="rgb(214,87,16)" fg:x="162" fg:w="15"/><text x="4.8772%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (15 samples, 0.43%)</title><rect x="4.6272%" y="293" width="0.4284%" height="15" fill="rgb(208,99,42)" fg:x="162" fg:w="15"/><text x="4.8772%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (15 samples, 0.43%)</title><rect x="4.6272%" y="277" width="0.4284%" height="15" fill="rgb(253,99,2)" fg:x="162" fg:w="15"/><text x="4.8772%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (15 samples, 0.43%)</title><rect x="4.6272%" y="261" width="0.4284%" height="15" fill="rgb(220,168,23)" fg:x="162" fg:w="15"/><text x="4.8772%" y="271.50"></text></g><g><title>`0x7FFAC8D04B8C (15 samples, 0.43%)</title><rect x="4.6272%" y="245" width="0.4284%" height="15" fill="rgb(242,38,24)" fg:x="162" fg:w="15"/><text x="4.8772%" y="255.50"></text></g><g><title>`0x7FFAC8C90DC5 (15 samples, 0.43%)</title><rect x="4.6272%" y="229" width="0.4284%" height="15" fill="rgb(225,182,9)" fg:x="162" fg:w="15"/><text x="4.8772%" y="239.50"></text></g><g><title>`0x7FFAC8C91D2C (4 samples, 0.11%)</title><rect x="4.9414%" y="213" width="0.1143%" height="15" fill="rgb(243,178,37)" fg:x="173" fg:w="4"/><text x="5.1914%" y="223.50"></text></g><g><title>`0x7FFAC8C8FA02 (4 samples, 0.11%)</title><rect x="4.9414%" y="197" width="0.1143%" height="15" fill="rgb(232,139,19)" fg:x="173" fg:w="4"/><text x="5.1914%" y="207.50"></text></g><g><title>`0x7FFAC8C6C2ED (4 samples, 0.11%)</title><rect x="4.9414%" y="181" width="0.1143%" height="15" fill="rgb(225,201,24)" fg:x="173" fg:w="4"/><text x="5.1914%" y="191.50"></text></g><g><title>`0x7FFAC8CCF5FF (4 samples, 0.11%)</title><rect x="4.9414%" y="165" width="0.1143%" height="15" fill="rgb(221,47,46)" fg:x="173" fg:w="4"/><text x="5.1914%" y="175.50"></text></g><g><title>`0x7FFAC8DBC384 (4 samples, 0.11%)</title><rect x="4.9414%" y="149" width="0.1143%" height="15" fill="rgb(249,23,13)" fg:x="173" fg:w="4"/><text x="5.1914%" y="159.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::resize (28 samples, 0.80%)</title><rect x="4.6272%" y="437" width="0.7998%" height="15" fill="rgb(219,9,5)" fg:x="162" fg:w="28"/><text x="4.8772%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::extend_with (28 samples, 0.80%)</title><rect x="4.6272%" y="421" width="0.7998%" height="15" fill="rgb(254,171,16)" fg:x="162" fg:w="28"/><text x="4.8772%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::write (13 samples, 0.37%)</title><rect x="5.0557%" y="405" width="0.3713%" height="15" fill="rgb(230,171,20)" fg:x="177" fg:w="13"/><text x="5.3057%" y="415.50"></text></g><g><title>`0x7FFAA8131A89 (13 samples, 0.37%)</title><rect x="5.0557%" y="389" width="0.3713%" height="15" fill="rgb(210,71,41)" fg:x="177" fg:w="13"/><text x="5.3057%" y="399.50"></text></g><g><title>`0x7FFAC8CD119A (1 samples, 0.03%)</title><rect x="5.4270%" y="149" width="0.0286%" height="15" fill="rgb(206,173,20)" fg:x="190" fg:w="1"/><text x="5.6770%" y="159.50"></text></g><g><title>`0x7FFAC8DBC2C4 (1 samples, 0.03%)</title><rect x="5.4270%" y="133" width="0.0286%" height="15" fill="rgb(233,88,34)" fg:x="190" fg:w="1"/><text x="5.6770%" y="143.50"></text></g><g><title>`0x7FFAC8C91BFD (2 samples, 0.06%)</title><rect x="5.4270%" y="213" width="0.0571%" height="15" fill="rgb(223,209,46)" fg:x="190" fg:w="2"/><text x="5.6770%" y="223.50"></text></g><g><title>`0x7FFAC8CA2B99 (2 samples, 0.06%)</title><rect x="5.4270%" y="197" width="0.0571%" height="15" fill="rgb(250,43,18)" fg:x="190" fg:w="2"/><text x="5.6770%" y="207.50"></text></g><g><title>`0x7FFAC8C67DBE (2 samples, 0.06%)</title><rect x="5.4270%" y="181" width="0.0571%" height="15" fill="rgb(208,13,10)" fg:x="190" fg:w="2"/><text x="5.6770%" y="191.50"></text></g><g><title>`0x7FFAC8CD3312 (2 samples, 0.06%)</title><rect x="5.4270%" y="165" width="0.0571%" height="15" fill="rgb(212,200,36)" fg:x="190" fg:w="2"/><text x="5.6770%" y="175.50"></text></g><g><title>`0x7FFAC8CD11E7 (1 samples, 0.03%)</title><rect x="5.4556%" y="149" width="0.0286%" height="15" fill="rgb(225,90,30)" fg:x="191" fg:w="1"/><text x="5.7056%" y="159.50"></text></g><g><title>`0x7FFAC8CCF5FF (1 samples, 0.03%)</title><rect x="5.4556%" y="133" width="0.0286%" height="15" fill="rgb(236,182,39)" fg:x="191" fg:w="1"/><text x="5.7056%" y="143.50"></text></g><g><title>`0x7FFAC8DBC384 (1 samples, 0.03%)</title><rect x="5.4556%" y="117" width="0.0286%" height="15" fill="rgb(212,144,35)" fg:x="191" fg:w="1"/><text x="5.7056%" y="127.50"></text></g><g><title>`0x7FFAC8C91CC6 (1 samples, 0.03%)</title><rect x="5.4841%" y="213" width="0.0286%" height="15" fill="rgb(228,63,44)" fg:x="192" fg:w="1"/><text x="5.7341%" y="223.50"></text></g><g><title>`0x7FFAC8DC18D3 (4 samples, 0.11%)</title><rect x="5.5127%" y="197" width="0.1143%" height="15" fill="rgb(228,109,6)" fg:x="193" fg:w="4"/><text x="5.7627%" y="207.50"></text></g><g><title>`0x7FFAC8C91D19 (10 samples, 0.29%)</title><rect x="5.5127%" y="213" width="0.2856%" height="15" fill="rgb(238,117,24)" fg:x="193" fg:w="10"/><text x="5.7627%" y="223.50"></text></g><g><title>`0x7FFAC8DC18D7 (6 samples, 0.17%)</title><rect x="5.6270%" y="197" width="0.1714%" height="15" fill="rgb(242,26,26)" fg:x="197" fg:w="6"/><text x="5.8770%" y="207.50"></text></g><g><title>`0x7FFAC8C6B73A (1 samples, 0.03%)</title><rect x="5.7983%" y="181" width="0.0286%" height="15" fill="rgb(221,92,48)" fg:x="203" fg:w="1"/><text x="6.0483%" y="191.50"></text></g><g><title>`0x7FFAC8D0DFEA (1 samples, 0.03%)</title><rect x="5.7983%" y="165" width="0.0286%" height="15" fill="rgb(209,209,32)" fg:x="203" fg:w="1"/><text x="6.0483%" y="175.50"></text></g><g><title>`0x7FFAC8C6EDEE (1 samples, 0.03%)</title><rect x="5.7983%" y="149" width="0.0286%" height="15" fill="rgb(221,70,22)" fg:x="203" fg:w="1"/><text x="6.0483%" y="159.50"></text></g><g><title>`0x7FFAC8CE06D9 (1 samples, 0.03%)</title><rect x="5.7983%" y="133" width="0.0286%" height="15" fill="rgb(248,145,5)" fg:x="203" fg:w="1"/><text x="6.0483%" y="143.50"></text></g><g><title>`0x7FFAC8DBC384 (1 samples, 0.03%)</title><rect x="5.7983%" y="117" width="0.0286%" height="15" fill="rgb(226,116,26)" fg:x="203" fg:w="1"/><text x="6.0483%" y="127.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::reserve (17 samples, 0.49%)</title><rect x="5.4270%" y="405" width="0.4856%" height="15" fill="rgb(244,5,17)" fg:x="190" fg:w="17"/><text x="5.6770%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::reserve (17 samples, 0.49%)</title><rect x="5.4270%" y="389" width="0.4856%" height="15" fill="rgb(252,159,33)" fg:x="190" fg:w="17"/><text x="5.6770%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (17 samples, 0.49%)</title><rect x="5.4270%" y="373" width="0.4856%" height="15" fill="rgb(206,71,0)" fg:x="190" fg:w="17"/><text x="5.6770%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (17 samples, 0.49%)</title><rect x="5.4270%" y="357" width="0.4856%" height="15" fill="rgb(233,118,54)" fg:x="190" fg:w="17"/><text x="5.6770%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (17 samples, 0.49%)</title><rect x="5.4270%" y="341" width="0.4856%" height="15" fill="rgb(234,83,48)" fg:x="190" fg:w="17"/><text x="5.6770%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (17 samples, 0.49%)</title><rect x="5.4270%" y="325" width="0.4856%" height="15" fill="rgb(228,3,54)" fg:x="190" fg:w="17"/><text x="5.6770%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (17 samples, 0.49%)</title><rect x="5.4270%" y="309" width="0.4856%" height="15" fill="rgb(226,155,13)" fg:x="190" fg:w="17"/><text x="5.6770%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (17 samples, 0.49%)</title><rect x="5.4270%" y="293" width="0.4856%" height="15" fill="rgb(241,28,37)" fg:x="190" fg:w="17"/><text x="5.6770%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (17 samples, 0.49%)</title><rect x="5.4270%" y="277" width="0.4856%" height="15" fill="rgb(233,93,10)" fg:x="190" fg:w="17"/><text x="5.6770%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (17 samples, 0.49%)</title><rect x="5.4270%" y="261" width="0.4856%" height="15" fill="rgb(225,113,19)" fg:x="190" fg:w="17"/><text x="5.6770%" y="271.50"></text></g><g><title>`0x7FFAC8D04B8C (17 samples, 0.49%)</title><rect x="5.4270%" y="245" width="0.4856%" height="15" fill="rgb(241,2,18)" fg:x="190" fg:w="17"/><text x="5.6770%" y="255.50"></text></g><g><title>`0x7FFAC8C90DC5 (17 samples, 0.49%)</title><rect x="5.4270%" y="229" width="0.4856%" height="15" fill="rgb(228,207,21)" fg:x="190" fg:w="17"/><text x="5.6770%" y="239.50"></text></g><g><title>`0x7FFAC8C91D2C (4 samples, 0.11%)</title><rect x="5.7983%" y="213" width="0.1143%" height="15" fill="rgb(213,211,35)" fg:x="203" fg:w="4"/><text x="6.0483%" y="223.50"></text></g><g><title>`0x7FFAC8C8FA02 (4 samples, 0.11%)</title><rect x="5.7983%" y="197" width="0.1143%" height="15" fill="rgb(209,83,10)" fg:x="203" fg:w="4"/><text x="6.0483%" y="207.50"></text></g><g><title>`0x7FFAC8C6C2ED (3 samples, 0.09%)</title><rect x="5.8269%" y="181" width="0.0857%" height="15" fill="rgb(209,164,1)" fg:x="204" fg:w="3"/><text x="6.0769%" y="191.50"></text></g><g><title>`0x7FFAC8CCF5FF (3 samples, 0.09%)</title><rect x="5.8269%" y="165" width="0.0857%" height="15" fill="rgb(213,184,43)" fg:x="204" fg:w="3"/><text x="6.0769%" y="175.50"></text></g><g><title>`0x7FFAC8DBC384 (3 samples, 0.09%)</title><rect x="5.8269%" y="149" width="0.0857%" height="15" fill="rgb(231,61,34)" fg:x="204" fg:w="3"/><text x="6.0769%" y="159.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::resize (27 samples, 0.77%)</title><rect x="5.4270%" y="437" width="0.7712%" height="15" fill="rgb(235,75,3)" fg:x="190" fg:w="27"/><text x="5.6770%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::extend_with (27 samples, 0.77%)</title><rect x="5.4270%" y="421" width="0.7712%" height="15" fill="rgb(220,106,47)" fg:x="190" fg:w="27"/><text x="5.6770%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::write (10 samples, 0.29%)</title><rect x="5.9126%" y="405" width="0.2856%" height="15" fill="rgb(210,196,33)" fg:x="207" fg:w="10"/><text x="6.1626%" y="415.50"></text></g><g><title>`0x7FFAA8131A89 (10 samples, 0.29%)</title><rect x="5.9126%" y="389" width="0.2856%" height="15" fill="rgb(229,154,42)" fg:x="207" fg:w="10"/><text x="6.1626%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="6.1982%" y="437" width="0.0286%" height="15" fill="rgb(228,114,26)" fg:x="217" fg:w="1"/><text x="6.4482%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="6.1982%" y="421" width="0.0286%" height="15" fill="rgb(208,144,1)" fg:x="217" fg:w="1"/><text x="6.4482%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="6.1982%" y="405" width="0.0286%" height="15" fill="rgb(239,112,37)" fg:x="217" fg:w="1"/><text x="6.4482%" y="415.50"></text></g><g><title>`0x7FFAC8DC18D3 (16 samples, 0.46%)</title><rect x="6.2268%" y="149" width="0.4570%" height="15" fill="rgb(210,96,50)" fg:x="218" fg:w="16"/><text x="6.4768%" y="159.50"></text></g><g><title>`0x7FFAC8DC18D7 (5 samples, 0.14%)</title><rect x="6.6838%" y="149" width="0.1428%" height="15" fill="rgb(222,178,2)" fg:x="234" fg:w="5"/><text x="6.9338%" y="159.50"></text></g><g><title>`0x7FFAC8C91D19 (22 samples, 0.63%)</title><rect x="6.2268%" y="165" width="0.6284%" height="15" fill="rgb(226,74,18)" fg:x="218" fg:w="22"/><text x="6.4768%" y="175.50"></text></g><g><title>`0x7FFAC8DC18EB (1 samples, 0.03%)</title><rect x="6.8266%" y="149" width="0.0286%" height="15" fill="rgb(225,67,54)" fg:x="239" fg:w="1"/><text x="7.0766%" y="159.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::default_allocator::impl$9::reallocate_copy(nalgebra::base::dimension::Const&lt;2&gt;, nalgebra::base::dimension::Dyn, nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (27 samples, 0.77%)</title><rect x="6.2268%" y="389" width="0.7712%" height="15" fill="rgb(251,92,32)" fg:x="218" fg:w="27"/><text x="6.4768%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;::resize(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (27 samples, 0.77%)</title><rect x="6.2268%" y="373" width="0.7712%" height="15" fill="rgb(228,149,22)" fg:x="218" fg:w="27"/><text x="6.4768%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (27 samples, 0.77%)</title><rect x="6.2268%" y="357" width="0.7712%" height="15" fill="rgb(243,54,13)" fg:x="218" fg:w="27"/><text x="6.4768%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::reserve_exact (27 samples, 0.77%)</title><rect x="6.2268%" y="341" width="0.7712%" height="15" fill="rgb(243,180,28)" fg:x="218" fg:w="27"/><text x="6.4768%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve_exact (27 samples, 0.77%)</title><rect x="6.2268%" y="325" width="0.7712%" height="15" fill="rgb(208,167,24)" fg:x="218" fg:w="27"/><text x="6.4768%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_reserve_exact (27 samples, 0.77%)</title><rect x="6.2268%" y="309" width="0.7712%" height="15" fill="rgb(245,73,45)" fg:x="218" fg:w="27"/><text x="6.4768%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_exact (27 samples, 0.77%)</title><rect x="6.2268%" y="293" width="0.7712%" height="15" fill="rgb(237,203,48)" fg:x="218" fg:w="27"/><text x="6.4768%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (27 samples, 0.77%)</title><rect x="6.2268%" y="277" width="0.7712%" height="15" fill="rgb(211,197,16)" fg:x="218" fg:w="27"/><text x="6.4768%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (27 samples, 0.77%)</title><rect x="6.2268%" y="261" width="0.7712%" height="15" fill="rgb(243,99,51)" fg:x="218" fg:w="27"/><text x="6.4768%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (27 samples, 0.77%)</title><rect x="6.2268%" y="245" width="0.7712%" height="15" fill="rgb(215,123,29)" fg:x="218" fg:w="27"/><text x="6.4768%" y="255.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (27 samples, 0.77%)</title><rect x="6.2268%" y="229" width="0.7712%" height="15" fill="rgb(239,186,37)" fg:x="218" fg:w="27"/><text x="6.4768%" y="239.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (27 samples, 0.77%)</title><rect x="6.2268%" y="213" width="0.7712%" height="15" fill="rgb(252,136,39)" fg:x="218" fg:w="27"/><text x="6.4768%" y="223.50"></text></g><g><title>`0x7FFAC8D04B8C (27 samples, 0.77%)</title><rect x="6.2268%" y="197" width="0.7712%" height="15" fill="rgb(223,213,32)" fg:x="218" fg:w="27"/><text x="6.4768%" y="207.50"></text></g><g><title>`0x7FFAC8C90DC5 (27 samples, 0.77%)</title><rect x="6.2268%" y="181" width="0.7712%" height="15" fill="rgb(233,115,5)" fg:x="218" fg:w="27"/><text x="6.4768%" y="191.50"></text></g><g><title>`0x7FFAC8C91D2C (5 samples, 0.14%)</title><rect x="6.8552%" y="165" width="0.1428%" height="15" fill="rgb(207,226,44)" fg:x="240" fg:w="5"/><text x="7.1052%" y="175.50"></text></g><g><title>`0x7FFAC8C8FA02 (5 samples, 0.14%)</title><rect x="6.8552%" y="149" width="0.1428%" height="15" fill="rgb(208,126,0)" fg:x="240" fg:w="5"/><text x="7.1052%" y="159.50"></text></g><g><title>`0x7FFAC8C6C2ED (5 samples, 0.14%)</title><rect x="6.8552%" y="133" width="0.1428%" height="15" fill="rgb(244,66,21)" fg:x="240" fg:w="5"/><text x="7.1052%" y="143.50"></text></g><g><title>`0x7FFAC8CCF5FF (5 samples, 0.14%)</title><rect x="6.8552%" y="117" width="0.1428%" height="15" fill="rgb(222,97,12)" fg:x="240" fg:w="5"/><text x="7.1052%" y="127.50"></text></g><g><title>`0x7FFAC8DBC384 (5 samples, 0.14%)</title><rect x="6.8552%" y="101" width="0.1428%" height="15" fill="rgb(219,213,19)" fg:x="240" fg:w="5"/><text x="7.1052%" y="111.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (60 samples, 1.71%)</title><rect x="6.2268%" y="421" width="1.7138%" height="15" fill="rgb(252,169,30)" fg:x="218" fg:w="60"/><text x="6.4768%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_generic(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;, nalgebra::base::dimension::Const (60 samples, 1.71%)</title><rect x="6.2268%" y="405" width="1.7138%" height="15" fill="rgb(206,32,51)" fg:x="218" fg:w="60"/><text x="6.4768%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;::fill_with(nalgebra::base::edition::impl$8::resize_generic::closure_env$0&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt;,nalgebra::base::dimension::Const (33 samples, 0.94%)</title><rect x="6.9980%" y="389" width="0.9426%" height="15" fill="rgb(250,172,42)" fg:x="245" fg:w="33"/><text x="7.2480%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::iter::impl$36::next(nalgebra::base::iter::MatrixIterMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorageMut&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (26 samples, 0.74%)</title><rect x="7.1979%" y="373" width="0.7426%" height="15" fill="rgb(209,34,43)" fg:x="252" fg:w="26"/><text x="7.4479%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::iter::impl$31::next(nalgebra::base::iter::RawIter&lt;ptr_mut$&lt;core::mem::maybe_uninit::MaybeUninit&lt;f64&gt; &gt;,core::mem::maybe_uninit::MaybeUninit&lt;f64&gt;,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (26 samples, 0.74%)</title><rect x="7.1979%" y="357" width="0.7426%" height="15" fill="rgb(223,11,35)" fg:x="252" fg:w="26"/><text x="7.4479%" y="367.50"></text></g><g><title>`0x7FFAA813007B (7 samples, 0.20%)</title><rect x="7.9406%" y="389" width="0.1999%" height="15" fill="rgb(251,219,26)" fg:x="278" fg:w="7"/><text x="8.1906%" y="399.50"></text></g><g><title>`0x7FFAA8130727 (1 samples, 0.03%)</title><rect x="8.1405%" y="389" width="0.0286%" height="15" fill="rgb(231,119,3)" fg:x="285" fg:w="1"/><text x="8.3905%" y="399.50"></text></g><g><title>`0x7FFAA813075E (7 samples, 0.20%)</title><rect x="8.1691%" y="389" width="0.1999%" height="15" fill="rgb(216,97,11)" fg:x="286" fg:w="7"/><text x="8.4191%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::impl$42::clone(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (23 samples, 0.66%)</title><rect x="7.9406%" y="421" width="0.6570%" height="15" fill="rgb(223,59,9)" fg:x="278" fg:w="23"/><text x="8.1906%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::vec_storage::impl$23::clone(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (23 samples, 0.66%)</title><rect x="7.9406%" y="405" width="0.6570%" height="15" fill="rgb(233,93,31)" fg:x="278" fg:w="23"/><text x="8.1906%" y="415.50"></text></g><g><title>`0x7FFAA8130766 (8 samples, 0.23%)</title><rect x="8.3690%" y="389" width="0.2285%" height="15" fill="rgb(239,81,33)" fg:x="293" fg:w="8"/><text x="8.6190%" y="399.50"></text></g><g><title>`0x7FFAC8C6B73A (1 samples, 0.03%)</title><rect x="8.5975%" y="405" width="0.0286%" height="15" fill="rgb(213,120,34)" fg:x="301" fg:w="1"/><text x="8.8475%" y="415.50"></text></g><g><title>`0x7FFAC8D0DFEA (1 samples, 0.03%)</title><rect x="8.5975%" y="389" width="0.0286%" height="15" fill="rgb(243,49,53)" fg:x="301" fg:w="1"/><text x="8.8475%" y="399.50"></text></g><g><title>`0x7FFAC8C6EDEE (1 samples, 0.03%)</title><rect x="8.5975%" y="373" width="0.0286%" height="15" fill="rgb(247,216,33)" fg:x="301" fg:w="1"/><text x="8.8475%" y="383.50"></text></g><g><title>`0x7FFAC8CE06D9 (1 samples, 0.03%)</title><rect x="8.5975%" y="357" width="0.0286%" height="15" fill="rgb(226,26,14)" fg:x="301" fg:w="1"/><text x="8.8475%" y="367.50"></text></g><g><title>`0x7FFAC8DBC384 (1 samples, 0.03%)</title><rect x="8.5975%" y="341" width="0.0286%" height="15" fill="rgb(215,49,53)" fg:x="301" fg:w="1"/><text x="8.8475%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::split_func::genbox&lt;1000&gt;(unsigned long long*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (178 samples, 5.08%)</title><rect x="3.6847%" y="453" width="5.0843%" height="15" fill="rgb(245,162,40)" fg:x="129" fg:w="178"/><text x="3.9347%" y="463.50">Rust_M..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::resize_horizontally_mut&lt;f64,nalgebra::base::dimension::Const&lt;2&gt; &gt; (89 samples, 2.54%)</title><rect x="6.2268%" y="437" width="2.5421%" height="15" fill="rgb(229,68,17)" fg:x="218" fg:w="89"/><text x="6.4768%" y="447.50">Ru..</text></g><g><title>`0x7FFAC8C8FA02 (6 samples, 0.17%)</title><rect x="8.5975%" y="421" width="0.1714%" height="15" fill="rgb(213,182,10)" fg:x="301" fg:w="6"/><text x="8.8475%" y="431.50"></text></g><g><title>`0x7FFAC8C6C2ED (5 samples, 0.14%)</title><rect x="8.6261%" y="405" width="0.1428%" height="15" fill="rgb(245,125,30)" fg:x="302" fg:w="5"/><text x="8.8761%" y="415.50"></text></g><g><title>`0x7FFAC8CCF5FF (5 samples, 0.14%)</title><rect x="8.6261%" y="389" width="0.1428%" height="15" fill="rgb(232,202,2)" fg:x="302" fg:w="5"/><text x="8.8761%" y="399.50"></text></g><g><title>`0x7FFAC8DBC384 (5 samples, 0.14%)</title><rect x="8.6261%" y="373" width="0.1428%" height="15" fill="rgb(237,140,51)" fg:x="302" fg:w="5"/><text x="8.8761%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`exp (4 samples, 0.11%)</title><rect x="8.9689%" y="405" width="0.1143%" height="15" fill="rgb(236,157,25)" fg:x="314" fg:w="4"/><text x="9.2189%" y="415.50"></text></g><g><title>`0x7FFAC6527C62 (2 samples, 0.06%)</title><rect x="9.0831%" y="405" width="0.0571%" height="15" fill="rgb(219,209,0)" fg:x="318" fg:w="2"/><text x="9.3331%" y="415.50"></text></g><g><title>`0x7FFAC6527CF6 (2 samples, 0.06%)</title><rect x="9.1402%" y="405" width="0.0571%" height="15" fill="rgb(240,116,54)" fg:x="320" fg:w="2"/><text x="9.3902%" y="415.50"></text></g><g><title>`0x7FFAC6527D1F (1 samples, 0.03%)</title><rect x="9.1974%" y="405" width="0.0286%" height="15" fill="rgb(216,10,36)" fg:x="322" fg:w="1"/><text x="9.4474%" y="415.50"></text></g><g><title>`0x7FFAC6527D25 (1 samples, 0.03%)</title><rect x="9.2259%" y="405" width="0.0286%" height="15" fill="rgb(222,72,44)" fg:x="323" fg:w="1"/><text x="9.4759%" y="415.50"></text></g><g><title>`0x7FFAC6527D2B (1 samples, 0.03%)</title><rect x="9.2545%" y="405" width="0.0286%" height="15" fill="rgb(232,159,9)" fg:x="324" fg:w="1"/><text x="9.5045%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::f64::impl$0::exp (13 samples, 0.37%)</title><rect x="8.9689%" y="421" width="0.3713%" height="15" fill="rgb(210,39,32)" fg:x="314" fg:w="13"/><text x="9.2189%" y="431.50"></text></g><g><title>`0x7FFAC6527D3A (2 samples, 0.06%)</title><rect x="9.2831%" y="405" width="0.0571%" height="15" fill="rgb(216,194,45)" fg:x="325" fg:w="2"/><text x="9.5331%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::f64::impl$0::powi (2 samples, 0.06%)</title><rect x="9.3402%" y="421" width="0.0571%" height="15" fill="rgb(218,18,35)" fg:x="327" fg:w="2"/><text x="9.5902%" y="431.50"></text></g><g><title>`0x7FFAC6527A0F (1 samples, 0.03%)</title><rect x="9.3973%" y="421" width="0.0286%" height="15" fill="rgb(207,83,51)" fg:x="329" fg:w="1"/><text x="9.6473%" y="431.50"></text></g><g><title>`0x7FFAC6527C80 (2 samples, 0.06%)</title><rect x="9.4259%" y="421" width="0.0571%" height="15" fill="rgb(225,63,43)" fg:x="330" fg:w="2"/><text x="9.6759%" y="431.50"></text></g><g><title>`0x7FFAC6527CA5 (1 samples, 0.03%)</title><rect x="9.4830%" y="421" width="0.0286%" height="15" fill="rgb(207,57,36)" fg:x="332" fg:w="1"/><text x="9.7330%" y="431.50"></text></g><g><title>`0x7FFAC6527CBE (1 samples, 0.03%)</title><rect x="9.5116%" y="421" width="0.0286%" height="15" fill="rgb(216,99,33)" fg:x="333" fg:w="1"/><text x="9.7616%" y="431.50"></text></g><g><title>`0x7FFAC6527CDB (1 samples, 0.03%)</title><rect x="9.5401%" y="421" width="0.0286%" height="15" fill="rgb(225,42,16)" fg:x="334" fg:w="1"/><text x="9.7901%" y="431.50"></text></g><g><title>`0x7FFAC6527CE4 (1 samples, 0.03%)</title><rect x="9.5687%" y="421" width="0.0286%" height="15" fill="rgb(220,201,45)" fg:x="335" fg:w="1"/><text x="9.8187%" y="431.50"></text></g><g><title>`0x7FFAC6527CED (1 samples, 0.03%)</title><rect x="9.5973%" y="421" width="0.0286%" height="15" fill="rgb(225,33,4)" fg:x="336" fg:w="1"/><text x="9.8473%" y="431.50"></text></g><g><title>`0x7FFAC6527CF6 (2 samples, 0.06%)</title><rect x="9.6258%" y="421" width="0.0571%" height="15" fill="rgb(224,33,50)" fg:x="337" fg:w="2"/><text x="9.8758%" y="431.50"></text></g><g><title>`0x7FFAC6527CFF (1 samples, 0.03%)</title><rect x="9.6829%" y="421" width="0.0286%" height="15" fill="rgb(246,198,51)" fg:x="339" fg:w="1"/><text x="9.9329%" y="431.50"></text></g><g><title>`0x7FFAC6527D1F (2 samples, 0.06%)</title><rect x="9.7115%" y="421" width="0.0571%" height="15" fill="rgb(205,22,4)" fg:x="340" fg:w="2"/><text x="9.9615%" y="431.50"></text></g><g><title>`0x7FFAC6527D25 (1 samples, 0.03%)</title><rect x="9.7686%" y="421" width="0.0286%" height="15" fill="rgb(206,3,8)" fg:x="342" fg:w="1"/><text x="10.0186%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::split_func::split&lt;6,1000&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), unsigned long long, unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, double, alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double*, unsigned long long[1000]*, unsigned long long*, enum2$&lt;core::option::Option (223 samples, 6.37%)</title><rect x="3.4562%" y="469" width="6.3696%" height="15" fill="rgb(251,23,15)" fg:x="121" fg:w="223"/><text x="3.7062%" y="479.50">Rust_MCS..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (37 samples, 1.06%)</title><rect x="8.7689%" y="453" width="1.0568%" height="15" fill="rgb(252,88,28)" fg:x="307" fg:w="37"/><text x="9.0189%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::test_functions::hm6&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (37 samples, 1.06%)</title><rect x="8.7689%" y="437" width="1.0568%" height="15" fill="rgb(212,127,14)" fg:x="307" fg:w="37"/><text x="9.0189%" y="447.50"></text></g><g><title>`0x7FFAC6527D2B (1 samples, 0.03%)</title><rect x="9.7972%" y="421" width="0.0286%" height="15" fill="rgb(247,145,37)" fg:x="343" fg:w="1"/><text x="10.0472%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::slice::iter::Iter (102 samples, 2.91%)</title><rect x="19.9943%" y="453" width="2.9135%" height="15" fill="rgb(209,117,53)" fg:x="700" fg:w="102"/><text x="20.2443%" y="463.50">Ru..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;core::slice::iter::Iter (102 samples, 2.91%)</title><rect x="19.9943%" y="437" width="2.9135%" height="15" fill="rgb(212,90,42)" fg:x="700" fg:w="102"/><text x="20.2443%" y="447.50">Ru..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (18 samples, 0.51%)</title><rect x="22.3936%" y="421" width="0.5141%" height="15" fill="rgb(218,164,37)" fg:x="784" fg:w="18"/><text x="22.6436%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (18 samples, 0.51%)</title><rect x="22.3936%" y="405" width="0.5141%" height="15" fill="rgb(246,65,34)" fg:x="784" fg:w="18"/><text x="22.6436%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::strtsw::strtsw(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (487 samples, 13.91%)</title><rect x="9.8258%" y="469" width="13.9103%" height="15" fill="rgb(231,100,33)" fg:x="344" fg:w="487"/><text x="10.0758%" y="479.50">Rust_MCS-33cbee260f73..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::ops::impl$0::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (29 samples, 0.83%)</title><rect x="22.9077%" y="453" width="0.8283%" height="15" fill="rgb(228,126,14)" fg:x="802" fg:w="29"/><text x="23.1577%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;*, tuple$ (29 samples, 0.83%)</title><rect x="22.9077%" y="437" width="0.8283%" height="15" fill="rgb(215,173,21)" fg:x="802" fg:w="29"/><text x="23.1577%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const&lt;2&gt; &gt; &gt;::get_unchecked(tuple$ (11 samples, 0.31%)</title><rect x="23.4219%" y="421" width="0.3142%" height="15" fill="rgb(210,6,40)" fg:x="820" fg:w="11"/><text x="23.6719%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (11 samples, 0.31%)</title><rect x="23.4219%" y="405" width="0.3142%" height="15" fill="rgb(212,48,18)" fg:x="820" fg:w="11"/><text x="23.6719%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (11 samples, 0.31%)</title><rect x="23.4219%" y="389" width="0.3142%" height="15" fill="rgb(230,214,11)" fg:x="820" fg:w="11"/><text x="23.6719%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (11 samples, 0.31%)</title><rect x="23.4219%" y="373" width="0.3142%" height="15" fill="rgb(254,105,39)" fg:x="820" fg:w="11"/><text x="23.6719%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (11 samples, 0.31%)</title><rect x="23.4219%" y="357" width="0.3142%" height="15" fill="rgb(245,158,5)" fg:x="820" fg:w="11"/><text x="23.6719%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::const_ptr::impl$0::wrapping_add (11 samples, 0.31%)</title><rect x="23.4219%" y="341" width="0.3142%" height="15" fill="rgb(249,208,11)" fg:x="820" fg:w="11"/><text x="23.6719%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::const_ptr::impl$0::wrapping_offset (11 samples, 0.31%)</title><rect x="23.4219%" y="325" width="0.3142%" height="15" fill="rgb(210,39,28)" fg:x="820" fg:w="11"/><text x="23.6719%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::updtrec::updtrec(unsigned long long, unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::matrix_view::ViewStorage&lt;f64,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::dimension::Const (4 samples, 0.11%)</title><rect x="23.7361%" y="469" width="0.1143%" height="15" fill="rgb(211,56,53)" fg:x="831" fg:w="4"/><text x="23.9861%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::from_elem (1 samples, 0.03%)</title><rect x="23.8503%" y="469" width="0.0286%" height="15" fill="rgb(226,201,30)" fg:x="835" fg:w="1"/><text x="24.1003%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::spec_from_elem::impl$1::from_elem (1 samples, 0.03%)</title><rect x="23.8503%" y="453" width="0.0286%" height="15" fill="rgb(239,101,34)" fg:x="835" fg:w="1"/><text x="24.1003%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::with_capacity_zeroed_in (1 samples, 0.03%)</title><rect x="23.8503%" y="437" width="0.0286%" height="15" fill="rgb(226,209,5)" fg:x="835" fg:w="1"/><text x="24.1003%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (1 samples, 0.03%)</title><rect x="23.8503%" y="421" width="0.0286%" height="15" fill="rgb(250,105,47)" fg:x="835" fg:w="1"/><text x="24.1003%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="23.8503%" y="405" width="0.0286%" height="15" fill="rgb(230,72,3)" fg:x="835" fg:w="1"/><text x="24.1003%" y="415.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="23.8503%" y="389" width="0.0286%" height="15" fill="rgb(232,218,39)" fg:x="835" fg:w="1"/><text x="24.1003%" y="399.50"></text></g><g><title>`0x7FFAC8C67DBE (1 samples, 0.03%)</title><rect x="23.8503%" y="373" width="0.0286%" height="15" fill="rgb(248,166,6)" fg:x="835" fg:w="1"/><text x="24.1003%" y="383.50"></text></g><g><title>`0x7FFAC8CD1940 (1 samples, 0.03%)</title><rect x="23.8503%" y="357" width="0.0286%" height="15" fill="rgb(247,89,20)" fg:x="835" fg:w="1"/><text x="24.1003%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::as_slice (1 samples, 0.03%)</title><rect x="23.8789%" y="437" width="0.0286%" height="15" fill="rgb(248,130,54)" fg:x="836" fg:w="1"/><text x="24.1289%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$13::index(alloc::vec::Vec (3 samples, 0.09%)</title><rect x="23.8789%" y="469" width="0.0857%" height="15" fill="rgb(234,196,4)" fg:x="836" fg:w="3"/><text x="24.1289%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (3 samples, 0.09%)</title><rect x="23.8789%" y="453" width="0.0857%" height="15" fill="rgb(250,143,31)" fg:x="836" fg:w="3"/><text x="24.1289%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_slice (2 samples, 0.06%)</title><rect x="23.9075%" y="437" width="0.0571%" height="15" fill="rgb(211,110,34)" fg:x="837" fg:w="2"/><text x="24.1575%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::init_func::subint (1 samples, 0.03%)</title><rect x="24.0503%" y="405" width="0.0286%" height="15" fill="rgb(215,124,48)" fg:x="842" fg:w="1"/><text x="24.3003%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::f64::impl$0::abs (1 samples, 0.03%)</title><rect x="24.0503%" y="389" width="0.0286%" height="15" fill="rgb(216,46,13)" fg:x="842" fg:w="1"/><text x="24.3003%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::exgain::exgain&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (9 samples, 0.26%)</title><rect x="23.9646%" y="421" width="0.2571%" height="15" fill="rgb(205,184,25)" fg:x="839" fg:w="9"/><text x="24.2146%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::quadratic_func::quadmin (5 samples, 0.14%)</title><rect x="24.0788%" y="405" width="0.1428%" height="15" fill="rgb(228,1,10)" fg:x="843" fg:w="5"/><text x="24.3288%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::quadratic_func::quadpol (1 samples, 0.03%)</title><rect x="24.1931%" y="389" width="0.0286%" height="15" fill="rgb(213,116,27)" fg:x="847" fg:w="1"/><text x="24.4431%" y="399.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (21 samples, 0.60%)</title><rect x="23.9646%" y="469" width="0.5998%" height="15" fill="rgb(241,95,50)" fg:x="839" fg:w="21"/><text x="24.2146%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec (21 samples, 0.60%)</title><rect x="23.9646%" y="453" width="0.5998%" height="15" fill="rgb(238,48,32)" fg:x="839" fg:w="21"/><text x="24.2146%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;::as_mut_slice (21 samples, 0.60%)</title><rect x="23.9646%" y="437" width="0.5998%" height="15" fill="rgb(235,113,49)" fg:x="839" fg:w="21"/><text x="24.2146%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::splrnk::splrnk&lt;6&gt;(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (12 samples, 0.34%)</title><rect x="24.2217%" y="421" width="0.3428%" height="15" fill="rgb(205,127,43)" fg:x="848" fg:w="12"/><text x="24.4717%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::split_func::split2 (4 samples, 0.11%)</title><rect x="24.4502%" y="405" width="0.1143%" height="15" fill="rgb(250,162,2)" fg:x="856" fg:w="4"/><text x="24.7002%" y="415.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(alloc::vec::Vec (4 samples, 0.11%)</title><rect x="24.5644%" y="469" width="0.1143%" height="15" fill="rgb(220,13,41)" fg:x="860" fg:w="4"/><text x="24.8144%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (4 samples, 0.11%)</title><rect x="24.5644%" y="453" width="0.1143%" height="15" fill="rgb(249,221,25)" fg:x="860" fg:w="4"/><text x="24.8144%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (4 samples, 0.11%)</title><rect x="24.5644%" y="437" width="0.1143%" height="15" fill="rgb(215,208,19)" fg:x="860" fg:w="4"/><text x="24.8144%" y="447.50"></text></g><g><title>`0x7FFAC8C8FA02 (4 samples, 0.11%)</title><rect x="24.5644%" y="421" width="0.1143%" height="15" fill="rgb(236,175,2)" fg:x="860" fg:w="4"/><text x="24.8144%" y="431.50"></text></g><g><title>`0x7FFAC8C6C2ED (4 samples, 0.11%)</title><rect x="24.5644%" y="405" width="0.1143%" height="15" fill="rgb(241,52,2)" fg:x="860" fg:w="4"/><text x="24.8144%" y="415.50"></text></g><g><title>`0x7FFAC8CCF5FF (4 samples, 0.11%)</title><rect x="24.5644%" y="389" width="0.1143%" height="15" fill="rgb(248,140,14)" fg:x="860" fg:w="4"/><text x="24.8144%" y="399.50"></text></g><g><title>`0x7FFAC8DBC384 (4 samples, 0.11%)</title><rect x="24.5644%" y="373" width="0.1143%" height="15" fill="rgb(253,22,42)" fg:x="860" fg:w="4"/><text x="24.8144%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="24.6787%" y="469" width="0.0286%" height="15" fill="rgb(234,61,47)" fg:x="864" fg:w="1"/><text x="24.9287%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="24.6787%" y="453" width="0.0286%" height="15" fill="rgb(208,226,15)" fg:x="864" fg:w="1"/><text x="24.9287%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="24.6787%" y="437" width="0.0286%" height="15" fill="rgb(217,221,4)" fg:x="864" fg:w="1"/><text x="24.9287%" y="447.50"></text></g><g><title>`0x7FFAC8C8FA02 (1 samples, 0.03%)</title><rect x="24.6787%" y="421" width="0.0286%" height="15" fill="rgb(212,174,34)" fg:x="864" fg:w="1"/><text x="24.9287%" y="431.50"></text></g><g><title>`0x7FFAC8C6C2ED (1 samples, 0.03%)</title><rect x="24.6787%" y="405" width="0.0286%" height="15" fill="rgb(253,83,4)" fg:x="864" fg:w="1"/><text x="24.9287%" y="415.50"></text></g><g><title>`0x7FFAC8CCF5FF (1 samples, 0.03%)</title><rect x="24.6787%" y="389" width="0.0286%" height="15" fill="rgb(250,195,49)" fg:x="864" fg:w="1"/><text x="24.9287%" y="399.50"></text></g><g><title>`0x7FFAC8DBC384 (1 samples, 0.03%)</title><rect x="24.6787%" y="373" width="0.0286%" height="15" fill="rgb(241,192,25)" fg:x="864" fg:w="1"/><text x="24.9287%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="24.7072%" y="469" width="0.0286%" height="15" fill="rgb(208,124,10)" fg:x="865" fg:w="1"/><text x="24.9572%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="24.7072%" y="453" width="0.0286%" height="15" fill="rgb(222,33,0)" fg:x="865" fg:w="1"/><text x="24.9572%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="24.7072%" y="437" width="0.0286%" height="15" fill="rgb(234,209,28)" fg:x="865" fg:w="1"/><text x="24.9572%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="24.7072%" y="421" width="0.0286%" height="15" fill="rgb(224,11,23)" fg:x="865" fg:w="1"/><text x="24.9572%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="24.7072%" y="405" width="0.0286%" height="15" fill="rgb(232,99,1)" fg:x="865" fg:w="1"/><text x="24.9572%" y="415.50"></text></g><g><title>`0x7FFAC8C8FA02 (1 samples, 0.03%)</title><rect x="24.7072%" y="389" width="0.0286%" height="15" fill="rgb(237,95,45)" fg:x="865" fg:w="1"/><text x="24.9572%" y="399.50"></text></g><g><title>`0x7FFAC8C6C2ED (1 samples, 0.03%)</title><rect x="24.7072%" y="373" width="0.0286%" height="15" fill="rgb(208,109,11)" fg:x="865" fg:w="1"/><text x="24.9572%" y="383.50"></text></g><g><title>`0x7FFAC8CCF5FF (1 samples, 0.03%)</title><rect x="24.7072%" y="357" width="0.0286%" height="15" fill="rgb(216,190,48)" fg:x="865" fg:w="1"/><text x="24.9572%" y="367.50"></text></g><g><title>`0x7FFAC8DBC384 (1 samples, 0.03%)</title><rect x="24.7072%" y="341" width="0.0286%" height="15" fill="rgb(251,171,36)" fg:x="865" fg:w="1"/><text x="24.9572%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="24.7358%" y="469" width="0.0286%" height="15" fill="rgb(230,62,22)" fg:x="866" fg:w="1"/><text x="24.9858%" y="479.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="24.7358%" y="453" width="0.0286%" height="15" fill="rgb(225,114,35)" fg:x="866" fg:w="1"/><text x="24.9858%" y="463.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="24.7358%" y="437" width="0.0286%" height="15" fill="rgb(215,118,42)" fg:x="866" fg:w="1"/><text x="24.9858%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="24.7358%" y="421" width="0.0286%" height="15" fill="rgb(243,119,21)" fg:x="866" fg:w="1"/><text x="24.9858%" y="431.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="24.7358%" y="405" width="0.0286%" height="15" fill="rgb(252,177,53)" fg:x="866" fg:w="1"/><text x="24.9858%" y="415.50"></text></g><g><title>`0x7FFAC8C8FA02 (1 samples, 0.03%)</title><rect x="24.7358%" y="389" width="0.0286%" height="15" fill="rgb(237,209,29)" fg:x="866" fg:w="1"/><text x="24.9858%" y="399.50"></text></g><g><title>`0x7FFAC8C6C2ED (1 samples, 0.03%)</title><rect x="24.7358%" y="373" width="0.0286%" height="15" fill="rgb(212,65,23)" fg:x="866" fg:w="1"/><text x="24.9858%" y="383.50"></text></g><g><title>`0x7FFAC8CCF5FF (1 samples, 0.03%)</title><rect x="24.7358%" y="357" width="0.0286%" height="15" fill="rgb(230,222,46)" fg:x="866" fg:w="1"/><text x="24.9858%" y="367.50"></text></g><g><title>`0x7FFAC8DBC384 (1 samples, 0.03%)</title><rect x="24.7358%" y="341" width="0.0286%" height="15" fill="rgb(215,135,32)" fg:x="866" fg:w="1"/><text x="24.9858%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::iter::traits::iterator::Iterator::fold(nalgebra::base::iter::MatrixIter&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;, unsigned long long, nalgebra::base::min_max::impl$0::min::closure_env$1&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (4 samples, 0.11%)</title><rect x="24.7644%" y="437" width="0.1143%" height="15" fill="rgb(246,101,22)" fg:x="867" fg:w="4"/><text x="25.0144%" y="447.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::split_func::split1 (9 samples, 0.26%)</title><rect x="58.5547%" y="373" width="0.2571%" height="15" fill="rgb(206,107,13)" fg:x="2050" fg:w="9"/><text x="58.8047%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::updtf::updtf&lt;6&gt;(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (719 samples, 20.54%)</title><rect x="58.8118%" y="373" width="20.5370%" height="15" fill="rgb(250,100,44)" fg:x="2059" fg:w="719"/><text x="59.0618%" y="383.50">Rust_MCS-33cbee260f7383c3.exe`Ru..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::vertex::vert1 (68 samples, 1.94%)</title><rect x="79.3488%" y="373" width="1.9423%" height="15" fill="rgb(231,147,38)" fg:x="2778" fg:w="68"/><text x="79.5988%" y="383.50">R..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::vertex::vert2 (91 samples, 2.60%)</title><rect x="81.2911%" y="373" width="2.5993%" height="15" fill="rgb(229,8,40)" fg:x="2846" fg:w="91"/><text x="81.5411%" y="383.50">Ru..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::vertex::wrap_index (1 samples, 0.03%)</title><rect x="83.8903%" y="373" width="0.0286%" height="15" fill="rgb(221,135,30)" fg:x="2937" fg:w="1"/><text x="84.1403%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$13::index(alloc::vec::Vec (28 samples, 0.80%)</title><rect x="83.9189%" y="373" width="0.7998%" height="15" fill="rgb(249,193,18)" fg:x="2938" fg:w="28"/><text x="84.1689%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (28 samples, 0.80%)</title><rect x="83.9189%" y="357" width="0.7998%" height="15" fill="rgb(209,133,39)" fg:x="2938" fg:w="28"/><text x="84.1689%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (28 samples, 0.80%)</title><rect x="83.9189%" y="341" width="0.7998%" height="15" fill="rgb(232,100,14)" fg:x="2938" fg:w="28"/><text x="84.1689%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (192 samples, 5.48%)</title><rect x="84.7187%" y="373" width="5.4841%" height="15" fill="rgb(224,185,1)" fg:x="2966" fg:w="192"/><text x="84.9687%" y="383.50">Rust_MC..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (48 samples, 1.37%)</title><rect x="88.8318%" y="357" width="1.3710%" height="15" fill="rgb(223,139,8)" fg:x="3110" fg:w="48"/><text x="89.0818%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (48 samples, 1.37%)</title><rect x="88.8318%" y="341" width="1.3710%" height="15" fill="rgb(232,213,38)" fg:x="3110" fg:w="48"/><text x="89.0818%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::num::impl$5::abs (1 samples, 0.03%)</title><rect x="90.2028%" y="373" width="0.0286%" height="15" fill="rgb(207,94,22)" fg:x="3158" fg:w="1"/><text x="90.4528%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::unwrap_or(enum2$&lt;core::option::Option (39 samples, 1.11%)</title><rect x="90.2314%" y="373" width="1.1140%" height="15" fill="rgb(219,183,54)" fg:x="3159" fg:w="39"/><text x="90.4814%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;::fill (1 samples, 0.03%)</title><rect x="91.3453%" y="373" width="0.0286%" height="15" fill="rgb(216,185,54)" fg:x="3198" fg:w="1"/><text x="91.5953%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (234 samples, 6.68%)</title><rect x="91.3739%" y="373" width="6.6838%" height="15" fill="rgb(254,217,39)" fg:x="3199" fg:w="234"/><text x="91.6239%" y="383.50">Rust_MCS-..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::get_unchecked(tuple$ (23 samples, 0.66%)</title><rect x="97.4007%" y="357" width="0.6570%" height="15" fill="rgb(240,178,23)" fg:x="3410" fg:w="23"/><text x="97.6507%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (23 samples, 0.66%)</title><rect x="97.4007%" y="341" width="0.6570%" height="15" fill="rgb(218,11,47)" fg:x="3410" fg:w="23"/><text x="97.6507%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (23 samples, 0.66%)</title><rect x="97.4007%" y="325" width="0.6570%" height="15" fill="rgb(218,51,51)" fg:x="3410" fg:w="23"/><text x="97.6507%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (23 samples, 0.66%)</title><rect x="97.4007%" y="309" width="0.6570%" height="15" fill="rgb(238,126,27)" fg:x="3410" fg:w="23"/><text x="97.6507%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (23 samples, 0.66%)</title><rect x="97.4007%" y="293" width="0.6570%" height="15" fill="rgb(249,202,22)" fg:x="3410" fg:w="23"/><text x="97.6507%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::const_ptr::impl$0::wrapping_add (23 samples, 0.66%)</title><rect x="97.4007%" y="277" width="0.6570%" height="15" fill="rgb(254,195,49)" fg:x="3410" fg:w="23"/><text x="97.6507%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::const_ptr::impl$0::wrapping_offset (23 samples, 0.66%)</title><rect x="97.4007%" y="261" width="0.6570%" height="15" fill="rgb(208,123,14)" fg:x="3410" fg:w="23"/><text x="97.6507%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, tuple$ (2 samples, 0.06%)</title><rect x="98.0577%" y="373" width="0.0571%" height="15" fill="rgb(224,200,8)" fg:x="3433" fg:w="2"/><text x="98.3077%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;::get_unchecked(tuple$ (1 samples, 0.03%)</title><rect x="98.0863%" y="357" width="0.0286%" height="15" fill="rgb(217,61,36)" fg:x="3434" fg:w="1"/><text x="98.3363%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="98.0863%" y="341" width="0.0286%" height="15" fill="rgb(206,35,45)" fg:x="3434" fg:w="1"/><text x="98.3363%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="98.0863%" y="325" width="0.0286%" height="15" fill="rgb(217,65,33)" fg:x="3434" fg:w="1"/><text x="98.3363%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="98.0863%" y="309" width="0.0286%" height="15" fill="rgb(222,158,48)" fg:x="3434" fg:w="1"/><text x="98.3363%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const (1 samples, 0.03%)</title><rect x="98.0863%" y="293" width="0.0286%" height="15" fill="rgb(254,2,54)" fg:x="3434" fg:w="1"/><text x="98.3363%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::const_ptr::impl$0::wrapping_add (1 samples, 0.03%)</title><rect x="98.0863%" y="277" width="0.0286%" height="15" fill="rgb(250,143,38)" fg:x="3434" fg:w="1"/><text x="98.3363%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::const_ptr::impl$0::wrapping_offset (1 samples, 0.03%)</title><rect x="98.0863%" y="261" width="0.0286%" height="15" fill="rgb(248,25,0)" fg:x="3434" fg:w="1"/><text x="98.3363%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::ops::impl$1::index(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="98.1148%" y="373" width="0.0286%" height="15" fill="rgb(206,152,27)" fg:x="3435" fg:w="1"/><text x="98.3648%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;::get_unchecked(tuple$ (1 samples, 0.03%)</title><rect x="98.1148%" y="357" width="0.0286%" height="15" fill="rgb(240,77,30)" fg:x="3435" fg:w="1"/><text x="98.3648%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::indexing::impl$11::get_unchecked(tuple$&lt;usize,usize&gt;, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="98.1148%" y="341" width="0.0286%" height="15" fill="rgb(231,5,3)" fg:x="3435" fg:w="1"/><text x="98.3648%" y="351.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_unchecked(nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="98.1148%" y="325" width="0.0286%" height="15" fill="rgb(207,226,32)" fg:x="3435" fg:w="1"/><text x="98.3648%" y="335.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_unchecked_linear(nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="98.1148%" y="309" width="0.0286%" height="15" fill="rgb(222,207,47)" fg:x="3435" fg:w="1"/><text x="98.3648%" y="319.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::storage::RawStorage::get_address_unchecked_linear(nalgebra::base::array_storage::ArrayStorage (1 samples, 0.03%)</title><rect x="98.1148%" y="293" width="0.0286%" height="15" fill="rgb(229,115,45)" fg:x="3435" fg:w="1"/><text x="98.3648%" y="303.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::const_ptr::impl$0::wrapping_add (1 samples, 0.03%)</title><rect x="98.1148%" y="277" width="0.0286%" height="15" fill="rgb(224,191,6)" fg:x="3435" fg:w="1"/><text x="98.3648%" y="287.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::const_ptr::impl$0::wrapping_offset (1 samples, 0.03%)</title><rect x="98.1148%" y="261" width="0.0286%" height="15" fill="rgb(230,227,24)" fg:x="3435" fg:w="1"/><text x="98.3648%" y="271.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::sync::impl$29::deref (3,469 samples, 99.09%)</title><rect x="0.3142%" y="757" width="99.0860%" height="15" fill="rgb(228,80,19)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="767.50">Rust_MCS-33cbee260f7383c3.exe`alloc::sync::impl$29::deref</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::sync::Arc::inner (3,469 samples, 99.09%)</title><rect x="0.3142%" y="741" width="99.0860%" height="15" fill="rgb(247,229,0)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="751.50">Rust_MCS-33cbee260f7383c3.exe`alloc::sync::Arc::inner</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::non_null::NonNull::as_ref (3,469 samples, 99.09%)</title><rect x="0.3142%" y="725" width="99.0860%" height="15" fill="rgb(237,194,15)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="735.50">Rust_MCS-33cbee260f7383c3.exe`core::ptr::non_null::NonNull::as_ref</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt; (3,469 samples, 99.09%)</title><rect x="0.3142%" y="709" width="99.0860%" height="15" fill="rgb(219,203,20)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="719.50">Rust_MCS-33cbee260f7383c3.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::run_test::closure$1 (3,469 samples, 99.09%)</title><rect x="0.3142%" y="693" width="99.0860%" height="15" fill="rgb(234,128,8)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="703.50">Rust_MCS-33cbee260f7383c3.exe`test::run_test::closure$1</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place (3,469 samples, 99.09%)</title><rect x="0.3142%" y="677" width="99.0860%" height="15" fill="rgb(248,202,8)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="687.50">Rust_MCS-33cbee260f7383c3.exe`core::ptr::drop_in_place</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sync::poison::mutex::impl$14::drop (3,469 samples, 99.09%)</title><rect x="0.3142%" y="661" width="99.0860%" height="15" fill="rgb(206,104,37)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="671.50">Rust_MCS-33cbee260f7383c3.exe`std::sync::poison::mutex::impl$14::drop</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sync::poison::Flag::done (3,469 samples, 99.09%)</title><rect x="0.3142%" y="645" width="99.0860%" height="15" fill="rgb(223,8,27)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="655.50">Rust_MCS-33cbee260f7383c3.exe`std::sync::poison::Flag::done</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::run_test::closure$0 (3,469 samples, 99.09%)</title><rect x="0.3142%" y="629" width="99.0860%" height="15" fill="rgb(216,217,28)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="639.50">Rust_MCS-33cbee260f7383c3.exe`test::run_test::closure$0</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::run_test_in_process (3,469 samples, 99.09%)</title><rect x="0.3142%" y="613" width="99.0860%" height="15" fill="rgb(249,199,1)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="623.50">Rust_MCS-33cbee260f7383c3.exe`test::run_test_in_process</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::panic::catch_unwind (3,469 samples, 99.09%)</title><rect x="0.3142%" y="597" width="99.0860%" height="15" fill="rgb(240,85,17)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="607.50">Rust_MCS-33cbee260f7383c3.exe`std::panic::catch_unwind</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::panicking::try (3,469 samples, 99.09%)</title><rect x="0.3142%" y="581" width="99.0860%" height="15" fill="rgb(206,108,45)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="591.50">Rust_MCS-33cbee260f7383c3.exe`std::panicking::try</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::panicking::try::do_call (3,469 samples, 99.09%)</title><rect x="0.3142%" y="565" width="99.0860%" height="15" fill="rgb(245,210,41)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="575.50">Rust_MCS-33cbee260f7383c3.exe`std::panicking::try::do_call</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`test::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt; (*)()&gt; (3,469 samples, 99.09%)</title><rect x="0.3142%" y="549" width="99.0860%" height="15" fill="rgb(206,13,37)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="559.50">Rust_MCS-33cbee260f7383c3.exe`test::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,a..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ops::function::FnOnce::call_once&lt;Rust_MCS::tests::test_for_flamegraph_0::closure_env$0,tuple$&lt;&gt; &gt; (3,469 samples, 99.09%)</title><rect x="0.3142%" y="533" width="99.0860%" height="15" fill="rgb(250,61,18)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="543.50">Rust_MCS-33cbee260f7383c3.exe`core::ops::function::FnOnce::call_once&lt;Rust_MCS::tests::test_for_flamegraph_0::closure_env$0,tuple$&lt;&gt; &gt;</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::tests::test_for_flamegraph_0::closure$0 (3,469 samples, 99.09%)</title><rect x="0.3142%" y="517" width="99.0860%" height="15" fill="rgb(235,172,48)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="527.50">Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::tests::test_for_flamegraph_0::closure$0</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::tests::test_for_flamegraph_0 (3,469 samples, 99.09%)</title><rect x="0.3142%" y="501" width="99.0860%" height="15" fill="rgb(249,201,17)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="511.50">Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::tests::test_for_flamegraph_0</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs&lt;1000,6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*), nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, Rust_MCS::StopStruct*, Rust_MCS::IinitEnum*, unsigned long long, double, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::array_storage::ArrayStorage (3,469 samples, 99.09%)</title><rect x="0.3142%" y="485" width="99.0860%" height="15" fill="rgb(219,208,6)" fg:x="11" fg:w="3469"/><text x="0.5642%" y="495.50">Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs&lt;1000,6&gt;(double (*)(nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Cons..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;::min (2,613 samples, 74.64%)</title><rect x="24.7644%" y="469" width="74.6358%" height="15" fill="rgb(248,31,23)" fg:x="867" fg:w="2613"/><text x="25.0144%" y="479.50">Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimen..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;::fold_with(nalgebra::base::min_max::impl$0::min::closure_env$0&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;, nalgebra::base::min_max::impl$0::min::closure_env$1&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (2,613 samples, 74.64%)</title><rect x="24.7644%" y="453" width="74.6358%" height="15" fill="rgb(245,15,42)" fg:x="867" fg:w="2613"/><text x="25.0144%" y="463.50">Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimen..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::min_max::impl$0::min::closure$0(nalgebra::base::min_max::impl$0::min::closure_env$0&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;, enum2$&lt;core::option::Option&lt;ref$ (2,609 samples, 74.52%)</title><rect x="24.8786%" y="437" width="74.5216%" height="15" fill="rgb(222,217,39)" fg:x="871" fg:w="2609"/><text x="25.1286%" y="447.50">Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::min_max::impl$0::min::closure$0(nalgebra::base::min_max::impl$0::min::closure_..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`enum2$&lt;core::option::Option&lt;ref$&lt;usize&gt; &gt; &gt;::cloned(enum2$&lt;core::option::Option&lt;ref$ (2,609 samples, 74.52%)</title><rect x="24.8786%" y="421" width="74.5216%" height="15" fill="rgb(210,219,27)" fg:x="871" fg:w="2609"/><text x="25.1286%" y="431.50">Rust_MCS-33cbee260f7383c3.exe`enum2$&lt;core::option::Option&lt;ref$&lt;usize&gt; &gt; &gt;::cloned(enum2$&lt;core::option::Option&lt;ref$</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::clone::impls::impl$5::clone (2,609 samples, 74.52%)</title><rect x="24.8786%" y="405" width="74.5216%" height="15" fill="rgb(252,166,36)" fg:x="871" fg:w="2609"/><text x="25.1286%" y="415.50">Rust_MCS-33cbee260f7383c3.exe`core::clone::impls::impl$5::clone</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::vertex::vertex&lt;6&gt;(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,3&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;usize&gt; &gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;isize,alloc::alloc::Global&gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn,nalgebra::base::vec_storage::VecStorage&lt;f64,nalgebra::base::dimension::Const&lt;2&gt;,nalgebra::base::dimension::Dyn&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f64,6,1&gt; &gt;*, nalgebra::base::matrix::Matrix&lt;f64,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (2,609 samples, 74.52%)</title><rect x="24.8786%" y="389" width="74.5216%" height="15" fill="rgb(245,132,34)" fg:x="871" fg:w="2609"/><text x="25.1286%" y="399.50">Rust_MCS-33cbee260f7383c3.exe`Rust_MCS::mcs_utils::vertex::vertex&lt;6&gt;(unsigned long long, nalgebra::base::matrix::Matrix&lt;f64,..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::ops::impl$2::index_mut(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (44 samples, 1.26%)</title><rect x="98.1434%" y="373" width="1.2568%" height="15" fill="rgb(236,54,3)" fg:x="3436" fg:w="44"/><text x="98.3934%" y="383.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`nalgebra::base::ops::impl$3::index_mut(nalgebra::base::matrix::Matrix&lt;usize,nalgebra::base::dimension::Const&lt;6&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;usize,6,1&gt; &gt;*, tuple$ (44 samples, 1.26%)</title><rect x="98.1434%" y="357" width="1.2568%" height="15" fill="rgb(241,173,43)" fg:x="3436" fg:w="44"/><text x="98.3934%" y="367.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (3,470 samples, 99.11%)</title><rect x="0.3142%" y="885" width="99.1145%" height="15" fill="rgb(215,190,9)" fg:x="11" fg:w="3470"/><text x="0.5642%" y="895.50">Rust_MCS-33cbee260f7383c3.exe`std::sys::pal::windows::thread::impl$0::new::thread_start</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::boxed::impl$28::call_once (3,470 samples, 99.11%)</title><rect x="0.3142%" y="869" width="99.1145%" height="15" fill="rgb(242,101,16)" fg:x="11" fg:w="3470"/><text x="0.5642%" y="879.50">Rust_MCS-33cbee260f7383c3.exe`alloc::boxed::impl$28::call_once</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::boxed::impl$28::call_once (3,470 samples, 99.11%)</title><rect x="0.3142%" y="853" width="99.1145%" height="15" fill="rgb(223,190,21)" fg:x="11" fg:w="3470"/><text x="0.5642%" y="863.50">Rust_MCS-33cbee260f7383c3.exe`alloc::boxed::impl$28::call_once</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`alloc::boxed::impl$8::drop (3,470 samples, 99.11%)</title><rect x="0.3142%" y="837" width="99.1145%" height="15" fill="rgb(215,228,25)" fg:x="11" fg:w="3470"/><text x="0.5642%" y="847.50">Rust_MCS-33cbee260f7383c3.exe`alloc::boxed::impl$8::drop</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::alloc::layout::Layout::for_value_raw (3,470 samples, 99.11%)</title><rect x="0.3142%" y="821" width="99.1145%" height="15" fill="rgb(225,36,22)" fg:x="11" fg:w="3470"/><text x="0.5642%" y="831.50">Rust_MCS-33cbee260f7383c3.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::mem::size_of_val_raw (3,470 samples, 99.11%)</title><rect x="0.3142%" y="805" width="99.1145%" height="15" fill="rgb(251,106,46)" fg:x="11" fg:w="3470"/><text x="0.5642%" y="815.50">Rust_MCS-33cbee260f7383c3.exe`core::mem::size_of_val_raw</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt; (3,470 samples, 99.11%)</title><rect x="0.3142%" y="789" width="99.1145%" height="15" fill="rgb(208,90,1)" fg:x="11" fg:w="3470"/><text x="0.5642%" y="799.50">Rust_MCS-33cbee260f7383c3.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;test::run_test::closure_env$1,tuple$&lt;&gt; &gt;,tu..</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::thread::impl$0::spawn_unchecked_::closure$1 (3,470 samples, 99.11%)</title><rect x="0.3142%" y="773" width="99.1145%" height="15" fill="rgb(243,10,4)" fg:x="11" fg:w="3470"/><text x="0.5642%" y="783.50">Rust_MCS-33cbee260f7383c3.exe`std::thread::impl$0::spawn_unchecked_::closure$1</text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`std::sys::pal::windows::thread::Thread::set_name (1 samples, 0.03%)</title><rect x="99.4002%" y="757" width="0.0286%" height="15" fill="rgb(212,137,27)" fg:x="3480" fg:w="1"/><text x="99.6502%" y="767.50"></text></g><g><title>Rust_MCS-33cbee260f7383c3.exe`core::ffi::c_str::CStr::to_str (1 samples, 0.03%)</title><rect x="99.4002%" y="741" width="0.0286%" height="15" fill="rgb(231,220,49)" fg:x="3480" fg:w="1"/><text x="99.6502%" y="751.50"></text></g><g><title>`0x7FFAC8CABC1A (1 samples, 0.03%)</title><rect x="99.4287%" y="853" width="0.0286%" height="15" fill="rgb(237,96,20)" fg:x="3481" fg:w="1"/><text x="99.6787%" y="863.50"></text></g><g><title>`0x7FFAC8CABFEC (1 samples, 0.03%)</title><rect x="99.4287%" y="837" width="0.0286%" height="15" fill="rgb(239,229,30)" fg:x="3481" fg:w="1"/><text x="99.6787%" y="847.50"></text></g><g><title>`0x7FFAC8CAD334 (1 samples, 0.03%)</title><rect x="99.4287%" y="821" width="0.0286%" height="15" fill="rgb(219,65,33)" fg:x="3481" fg:w="1"/><text x="99.6787%" y="831.50"></text></g><g><title>`0x7FFAC8DBC904 (1 samples, 0.03%)</title><rect x="99.4287%" y="805" width="0.0286%" height="15" fill="rgb(243,134,7)" fg:x="3481" fg:w="1"/><text x="99.6787%" y="815.50"></text></g><g><title>`0x7FFAC8C7790B (1 samples, 0.03%)</title><rect x="99.4573%" y="837" width="0.0286%" height="15" fill="rgb(216,177,54)" fg:x="3482" fg:w="1"/><text x="99.7073%" y="847.50"></text></g><g><title>`0x7FFAC8D114FC (3,482 samples, 99.46%)</title><rect x="0.0571%" y="917" width="99.4573%" height="15" fill="rgb(211,160,20)" fg:x="2" fg:w="3482"/><text x="0.3071%" y="927.50">`0x7FFAC8D114FC</text></g><g><title>`0x7FFAC7B0E8D7 (3,482 samples, 99.46%)</title><rect x="0.0571%" y="901" width="99.4573%" height="15" fill="rgb(239,85,39)" fg:x="2" fg:w="3482"/><text x="0.3071%" y="911.50">`0x7FFAC7B0E8D7</text></g><g><title>`0x7FFAC8C75CB1 (3 samples, 0.09%)</title><rect x="99.4287%" y="885" width="0.0857%" height="15" fill="rgb(232,125,22)" fg:x="3481" fg:w="3"/><text x="99.6787%" y="895.50"></text></g><g><title>`0x7FFAC8C74257 (3 samples, 0.09%)</title><rect x="99.4287%" y="869" width="0.0857%" height="15" fill="rgb(244,57,34)" fg:x="3481" fg:w="3"/><text x="99.6787%" y="879.50"></text></g><g><title>`0x7FFAC8CABCE1 (2 samples, 0.06%)</title><rect x="99.4573%" y="853" width="0.0571%" height="15" fill="rgb(214,203,32)" fg:x="3482" fg:w="2"/><text x="99.7073%" y="863.50"></text></g><g><title>`0x7FFAC8C77E5C (1 samples, 0.03%)</title><rect x="99.4859%" y="837" width="0.0286%" height="15" fill="rgb(207,58,43)" fg:x="3483" fg:w="1"/><text x="99.7359%" y="847.50"></text></g><g><title>`0x7FFAC8D4B1E0 (1 samples, 0.03%)</title><rect x="99.5144%" y="917" width="0.0286%" height="15" fill="rgb(215,193,15)" fg:x="3484" fg:w="1"/><text x="99.7644%" y="927.50"></text></g><g><title>`0x7FFAC8D08A0A (1 samples, 0.03%)</title><rect x="99.5430%" y="869" width="0.0286%" height="15" fill="rgb(232,15,44)" fg:x="3485" fg:w="1"/><text x="99.7930%" y="879.50"></text></g><g><title>`0x7FFAC8CDA121 (1 samples, 0.03%)</title><rect x="99.5430%" y="853" width="0.0286%" height="15" fill="rgb(212,3,48)" fg:x="3485" fg:w="1"/><text x="99.7930%" y="863.50"></text></g><g><title>`0x7FFAC8CDA1A3 (1 samples, 0.03%)</title><rect x="99.5430%" y="837" width="0.0286%" height="15" fill="rgb(218,128,7)" fg:x="3485" fg:w="1"/><text x="99.7930%" y="847.50"></text></g><g><title>`0x7FFAC8DBDFF4 (1 samples, 0.03%)</title><rect x="99.5430%" y="821" width="0.0286%" height="15" fill="rgb(226,216,39)" fg:x="3485" fg:w="1"/><text x="99.7930%" y="831.50"></text></g><g><title>`0x7FFAC8D09262 (1 samples, 0.03%)</title><rect x="99.5716%" y="869" width="0.0286%" height="15" fill="rgb(243,47,51)" fg:x="3486" fg:w="1"/><text x="99.8216%" y="879.50"></text></g><g><title>`0x7FFAC8CC7407 (1 samples, 0.03%)</title><rect x="99.5716%" y="853" width="0.0286%" height="15" fill="rgb(241,183,40)" fg:x="3486" fg:w="1"/><text x="99.8216%" y="863.50"></text></g><g><title>`0x7FFAC8CC74AD (1 samples, 0.03%)</title><rect x="99.5716%" y="837" width="0.0286%" height="15" fill="rgb(231,217,32)" fg:x="3486" fg:w="1"/><text x="99.8216%" y="847.50"></text></g><g><title>`0x7FFAC8CC75D1 (1 samples, 0.03%)</title><rect x="99.5716%" y="821" width="0.0286%" height="15" fill="rgb(229,61,38)" fg:x="3486" fg:w="1"/><text x="99.8216%" y="831.50"></text></g><g><title>`0x7FFAC8CC7717 (1 samples, 0.03%)</title><rect x="99.5716%" y="805" width="0.0286%" height="15" fill="rgb(225,210,5)" fg:x="3486" fg:w="1"/><text x="99.8216%" y="815.50"></text></g><g><title>`0x7FFAC8CC786A (1 samples, 0.03%)</title><rect x="99.5716%" y="789" width="0.0286%" height="15" fill="rgb(231,79,45)" fg:x="3486" fg:w="1"/><text x="99.8216%" y="799.50"></text></g><g><title>`0x7FFAC8DCC124 (1 samples, 0.03%)</title><rect x="99.5716%" y="773" width="0.0286%" height="15" fill="rgb(224,100,7)" fg:x="3486" fg:w="1"/><text x="99.8216%" y="783.50"></text></g><g><title>`0x7FFAC8DCC195 (1 samples, 0.03%)</title><rect x="99.5716%" y="757" width="0.0286%" height="15" fill="rgb(241,198,18)" fg:x="3486" fg:w="1"/><text x="99.8216%" y="767.50"></text></g><g><title>`0x7FFAC8DCC310 (1 samples, 0.03%)</title><rect x="99.5716%" y="741" width="0.0286%" height="15" fill="rgb(252,97,53)" fg:x="3486" fg:w="1"/><text x="99.8216%" y="751.50"></text></g><g><title>`0x7FFAC8DCC380 (1 samples, 0.03%)</title><rect x="99.5716%" y="725" width="0.0286%" height="15" fill="rgb(220,88,7)" fg:x="3486" fg:w="1"/><text x="99.8216%" y="735.50"></text></g><g><title>`0x7FFAC8D093E6 (1 samples, 0.03%)</title><rect x="99.6001%" y="869" width="0.0286%" height="15" fill="rgb(213,176,14)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="879.50"></text></g><g><title>`0x7FFAC8D79B29 (1 samples, 0.03%)</title><rect x="99.6001%" y="853" width="0.0286%" height="15" fill="rgb(246,73,7)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="863.50"></text></g><g><title>`0x7FFAC8CF7D06 (1 samples, 0.03%)</title><rect x="99.6001%" y="837" width="0.0286%" height="15" fill="rgb(245,64,36)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="847.50"></text></g><g><title>`0x7FFAC8CF9AF4 (1 samples, 0.03%)</title><rect x="99.6001%" y="821" width="0.0286%" height="15" fill="rgb(245,80,10)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="831.50"></text></g><g><title>`0x7FFAC8CFA6A3 (1 samples, 0.03%)</title><rect x="99.6001%" y="805" width="0.0286%" height="15" fill="rgb(232,107,50)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="815.50"></text></g><g><title>`0x7FFAC8CA2B99 (1 samples, 0.03%)</title><rect x="99.6001%" y="789" width="0.0286%" height="15" fill="rgb(253,3,0)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="799.50"></text></g><g><title>`0x7FFAC8C67DBE (1 samples, 0.03%)</title><rect x="99.6001%" y="773" width="0.0286%" height="15" fill="rgb(212,99,53)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="783.50"></text></g><g><title>`0x7FFAC8CD1387 (1 samples, 0.03%)</title><rect x="99.6001%" y="757" width="0.0286%" height="15" fill="rgb(249,111,54)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="767.50"></text></g><g><title>`0x7FFAC8CD382F (1 samples, 0.03%)</title><rect x="99.6001%" y="741" width="0.0286%" height="15" fill="rgb(249,55,30)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="751.50"></text></g><g><title>`0x7FFAC8CD5223 (1 samples, 0.03%)</title><rect x="99.6001%" y="725" width="0.0286%" height="15" fill="rgb(237,47,42)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="735.50"></text></g><g><title>`0x7FFAC8CD586E (1 samples, 0.03%)</title><rect x="99.6001%" y="709" width="0.0286%" height="15" fill="rgb(211,20,18)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="719.50"></text></g><g><title>`0x7FFAC8D496D0 (1 samples, 0.03%)</title><rect x="99.6001%" y="693" width="0.0286%" height="15" fill="rgb(231,203,46)" fg:x="3487" fg:w="1"/><text x="99.8501%" y="703.50"></text></g><g><title>`0x7FFAC8CA1110 (1 samples, 0.03%)</title><rect x="99.6287%" y="789" width="0.0286%" height="15" fill="rgb(237,142,3)" fg:x="3488" fg:w="1"/><text x="99.8787%" y="799.50"></text></g><g><title>`0x7FFAC8CB75CE (1 samples, 0.03%)</title><rect x="99.6572%" y="741" width="0.0286%" height="15" fill="rgb(241,107,1)" fg:x="3489" fg:w="1"/><text x="99.9072%" y="751.50"></text></g><g><title>`0x7FFAC8CB93EB (1 samples, 0.03%)</title><rect x="99.6572%" y="725" width="0.0286%" height="15" fill="rgb(229,83,13)" fg:x="3489" fg:w="1"/><text x="99.9072%" y="735.50"></text></g><g><title>`0x7FFAC8CAEBD1 (1 samples, 0.03%)</title><rect x="99.6572%" y="709" width="0.0286%" height="15" fill="rgb(241,91,40)" fg:x="3489" fg:w="1"/><text x="99.9072%" y="719.50"></text></g><g><title>`0x7FFAC8CB0739 (1 samples, 0.03%)</title><rect x="99.6572%" y="693" width="0.0286%" height="15" fill="rgb(225,3,45)" fg:x="3489" fg:w="1"/><text x="99.9072%" y="703.50"></text></g><g><title>`0x7FFAC8CB731E (1 samples, 0.03%)</title><rect x="99.6572%" y="677" width="0.0286%" height="15" fill="rgb(244,223,14)" fg:x="3489" fg:w="1"/><text x="99.9072%" y="687.50"></text></g><g><title>`0x7FFAC8CB3243 (1 samples, 0.03%)</title><rect x="99.6572%" y="661" width="0.0286%" height="15" fill="rgb(224,124,37)" fg:x="3489" fg:w="1"/><text x="99.9072%" y="671.50"></text></g><g><title>`0x7FFAC8CB6002 (3 samples, 0.09%)</title><rect x="99.6287%" y="805" width="0.0857%" height="15" fill="rgb(251,171,30)" fg:x="3488" fg:w="3"/><text x="99.8787%" y="815.50"></text></g><g><title>`0x7FFAC8CA16E7 (2 samples, 0.06%)</title><rect x="99.6572%" y="789" width="0.0571%" height="15" fill="rgb(236,46,54)" fg:x="3489" fg:w="2"/><text x="99.9072%" y="799.50"></text></g><g><title>`0x7FFAC8CAEBD1 (2 samples, 0.06%)</title><rect x="99.6572%" y="773" width="0.0571%" height="15" fill="rgb(245,213,5)" fg:x="3489" fg:w="2"/><text x="99.9072%" y="783.50"></text></g><g><title>`0x7FFAC8CB0739 (2 samples, 0.06%)</title><rect x="99.6572%" y="757" width="0.0571%" height="15" fill="rgb(230,144,27)" fg:x="3489" fg:w="2"/><text x="99.9072%" y="767.50"></text></g><g><title>`0x7FFAC8CB7742 (1 samples, 0.03%)</title><rect x="99.6858%" y="741" width="0.0286%" height="15" fill="rgb(220,86,6)" fg:x="3490" fg:w="1"/><text x="99.9358%" y="751.50"></text></g><g><title>`0x7FFAC8C77AF2 (1 samples, 0.03%)</title><rect x="99.6858%" y="725" width="0.0286%" height="15" fill="rgb(240,20,13)" fg:x="3490" fg:w="1"/><text x="99.9358%" y="735.50"></text></g><g><title>`0x7FFAC67B238D (1 samples, 0.03%)</title><rect x="99.7144%" y="709" width="0.0286%" height="15" fill="rgb(217,89,34)" fg:x="3491" fg:w="1"/><text x="99.9644%" y="719.50"></text></g><g><title>`0x7FFAC66D8C61 (1 samples, 0.03%)</title><rect x="99.7144%" y="693" width="0.0286%" height="15" fill="rgb(229,13,5)" fg:x="3491" fg:w="1"/><text x="99.9644%" y="703.50"></text></g><g><title>`0x7FFAC8D3BDC8 (1 samples, 0.03%)</title><rect x="99.7144%" y="677" width="0.0286%" height="15" fill="rgb(244,67,35)" fg:x="3491" fg:w="1"/><text x="99.9644%" y="687.50"></text></g><g><title>`0x7FFAC8D3C7D8 (1 samples, 0.03%)</title><rect x="99.7144%" y="661" width="0.0286%" height="15" fill="rgb(221,40,2)" fg:x="3491" fg:w="1"/><text x="99.9644%" y="671.50"></text></g><g><title>`0x7FFAC8DBD434 (1 samples, 0.03%)</title><rect x="99.7144%" y="645" width="0.0286%" height="15" fill="rgb(237,157,21)" fg:x="3491" fg:w="1"/><text x="99.9644%" y="655.50"></text></g><g><title>`0x7FFAC67B23F1 (1 samples, 0.03%)</title><rect x="99.7429%" y="709" width="0.0286%" height="15" fill="rgb(222,94,11)" fg:x="3492" fg:w="1"/><text x="99.9929%" y="719.50"></text></g><g><title>`0x7FFAC672898E (1 samples, 0.03%)</title><rect x="99.7429%" y="693" width="0.0286%" height="15" fill="rgb(249,113,6)" fg:x="3492" fg:w="1"/><text x="99.9929%" y="703.50"></text></g><g><title>`0x7FFAC672927F (1 samples, 0.03%)</title><rect x="99.7429%" y="677" width="0.0286%" height="15" fill="rgb(238,137,36)" fg:x="3492" fg:w="1"/><text x="99.9929%" y="687.50"></text></g><g><title>`0x7FFAC67A2572 (1 samples, 0.03%)</title><rect x="99.7429%" y="661" width="0.0286%" height="15" fill="rgb(210,102,26)" fg:x="3492" fg:w="1"/><text x="99.9929%" y="671.50"></text></g><g><title>`0x7FFAC66EBED7 (1 samples, 0.03%)</title><rect x="99.7429%" y="645" width="0.0286%" height="15" fill="rgb(218,30,30)" fg:x="3492" fg:w="1"/><text x="99.9929%" y="655.50"></text></g><g><title>`0x7FFAC66EBFA7 (1 samples, 0.03%)</title><rect x="99.7429%" y="629" width="0.0286%" height="15" fill="rgb(214,67,26)" fg:x="3492" fg:w="1"/><text x="99.9929%" y="639.50"></text></g><g><title>`0x7FFAC66ED49A (1 samples, 0.03%)</title><rect x="99.7429%" y="613" width="0.0286%" height="15" fill="rgb(251,9,53)" fg:x="3492" fg:w="1"/><text x="99.9929%" y="623.50"></text></g><g><title>`0x7FFAC8DBD6F4 (1 samples, 0.03%)</title><rect x="99.7429%" y="597" width="0.0286%" height="15" fill="rgb(228,204,25)" fg:x="3492" fg:w="1"/><text x="99.9929%" y="607.50"></text></g><g><title>`0x7FFAC8CDF33C (6 samples, 0.17%)</title><rect x="99.6287%" y="853" width="0.1714%" height="15" fill="rgb(207,153,8)" fg:x="3488" fg:w="6"/><text x="99.8787%" y="863.50"></text></g><g><title>`0x7FFAC8C79B30 (6 samples, 0.17%)</title><rect x="99.6287%" y="837" width="0.1714%" height="15" fill="rgb(242,9,16)" fg:x="3488" fg:w="6"/><text x="99.8787%" y="847.50"></text></g><g><title>`0x7FFAC8CB5CA0 (6 samples, 0.17%)</title><rect x="99.6287%" y="821" width="0.1714%" height="15" fill="rgb(217,211,10)" fg:x="3488" fg:w="6"/><text x="99.8787%" y="831.50"></text></g><g><title>`0x7FFAC8CB6094 (3 samples, 0.09%)</title><rect x="99.7144%" y="805" width="0.0857%" height="15" fill="rgb(219,228,52)" fg:x="3491" fg:w="3"/><text x="99.9644%" y="815.50"></text></g><g><title>`0x7FFAC8C96E7B (3 samples, 0.09%)</title><rect x="99.7144%" y="789" width="0.0857%" height="15" fill="rgb(231,92,29)" fg:x="3491" fg:w="3"/><text x="99.9644%" y="799.50"></text></g><g><title>`0x7FFAC8C96D46 (3 samples, 0.09%)</title><rect x="99.7144%" y="773" width="0.0857%" height="15" fill="rgb(232,8,23)" fg:x="3491" fg:w="3"/><text x="99.9644%" y="783.50"></text></g><g><title>`0x7FFAC8C96D1A (3 samples, 0.09%)</title><rect x="99.7144%" y="757" width="0.0857%" height="15" fill="rgb(216,211,34)" fg:x="3491" fg:w="3"/><text x="99.9644%" y="767.50"></text></g><g><title>`0x7FFAC8C97BDC (3 samples, 0.09%)</title><rect x="99.7144%" y="741" width="0.0857%" height="15" fill="rgb(236,151,0)" fg:x="3491" fg:w="3"/><text x="99.9644%" y="751.50"></text></g><g><title>`0x7FFAC8C98830 (3 samples, 0.09%)</title><rect x="99.7144%" y="725" width="0.0857%" height="15" fill="rgb(209,168,3)" fg:x="3491" fg:w="3"/><text x="99.9644%" y="735.50"></text></g><g><title>`0x7FFAC67B23FF (1 samples, 0.03%)</title><rect x="99.7715%" y="709" width="0.0286%" height="15" fill="rgb(208,129,28)" fg:x="3493" fg:w="1"/><text x="100.0215%" y="719.50"></text></g><g><title>`0x7FFAC67C942B (1 samples, 0.03%)</title><rect x="99.7715%" y="693" width="0.0286%" height="15" fill="rgb(229,78,22)" fg:x="3493" fg:w="1"/><text x="100.0215%" y="703.50"></text></g><g><title>`0x7FFAC6810E9F (1 samples, 0.03%)</title><rect x="99.7715%" y="677" width="0.0286%" height="15" fill="rgb(228,187,13)" fg:x="3493" fg:w="1"/><text x="100.0215%" y="687.50"></text></g><g><title>`0x7FFAC680CC1F (1 samples, 0.03%)</title><rect x="99.7715%" y="661" width="0.0286%" height="15" fill="rgb(240,119,24)" fg:x="3493" fg:w="1"/><text x="100.0215%" y="671.50"></text></g><g><title>`0x7FFAC680B7D8 (1 samples, 0.03%)</title><rect x="99.7715%" y="645" width="0.0286%" height="15" fill="rgb(209,194,42)" fg:x="3493" fg:w="1"/><text x="100.0215%" y="655.50"></text></g><g><title>`0x7FFAC8D0A145 (7 samples, 0.20%)</title><rect x="99.6287%" y="869" width="0.1999%" height="15" fill="rgb(247,200,46)" fg:x="3488" fg:w="7"/><text x="99.8787%" y="879.50"></text></g><g><title>`0x7FFAC8CDF3B1 (1 samples, 0.03%)</title><rect x="99.8001%" y="853" width="0.0286%" height="15" fill="rgb(218,76,16)" fg:x="3494" fg:w="1"/><text x="100.0501%" y="863.50"></text></g><g><title>`0x7FFAC8CB1EB8 (1 samples, 0.03%)</title><rect x="99.8001%" y="837" width="0.0286%" height="15" fill="rgb(225,21,48)" fg:x="3494" fg:w="1"/><text x="100.0501%" y="847.50"></text></g><g><title>`0x7FFAC8D2DD3B (1 samples, 0.03%)</title><rect x="99.8001%" y="821" width="0.0286%" height="15" fill="rgb(239,223,50)" fg:x="3494" fg:w="1"/><text x="100.0501%" y="831.50"></text></g><g><title>`0x7FFAC8D2DF06 (1 samples, 0.03%)</title><rect x="99.8001%" y="805" width="0.0286%" height="15" fill="rgb(244,45,21)" fg:x="3494" fg:w="1"/><text x="100.0501%" y="815.50"></text></g><g><title>`0x7FFAC8CB4B1B (1 samples, 0.03%)</title><rect x="99.8001%" y="789" width="0.0286%" height="15" fill="rgb(232,33,43)" fg:x="3494" fg:w="1"/><text x="100.0501%" y="799.50"></text></g><g><title>`0x7FFAC8D2E236 (1 samples, 0.03%)</title><rect x="99.8001%" y="773" width="0.0286%" height="15" fill="rgb(209,8,3)" fg:x="3494" fg:w="1"/><text x="100.0501%" y="783.50"></text></g><g><title>`0x7FFAC8DBC9C4 (1 samples, 0.03%)</title><rect x="99.8001%" y="757" width="0.0286%" height="15" fill="rgb(214,25,53)" fg:x="3494" fg:w="1"/><text x="100.0501%" y="767.50"></text></g><g><title>`0x7FFAC8D0A239 (1 samples, 0.03%)</title><rect x="99.8286%" y="869" width="0.0286%" height="15" fill="rgb(254,186,54)" fg:x="3495" fg:w="1"/><text x="100.0786%" y="879.50"></text></g><g><title>`0x7FFAC8CB75CE (1 samples, 0.03%)</title><rect x="99.8286%" y="853" width="0.0286%" height="15" fill="rgb(208,174,49)" fg:x="3495" fg:w="1"/><text x="100.0786%" y="863.50"></text></g><g><title>`0x7FFAC8CB93EB (1 samples, 0.03%)</title><rect x="99.8286%" y="837" width="0.0286%" height="15" fill="rgb(233,191,51)" fg:x="3495" fg:w="1"/><text x="100.0786%" y="847.50"></text></g><g><title>`0x7FFAC8CAEBD1 (1 samples, 0.03%)</title><rect x="99.8286%" y="821" width="0.0286%" height="15" fill="rgb(222,134,10)" fg:x="3495" fg:w="1"/><text x="100.0786%" y="831.50"></text></g><g><title>`0x7FFAC8CB05EE (1 samples, 0.03%)</title><rect x="99.8286%" y="805" width="0.0286%" height="15" fill="rgb(230,226,20)" fg:x="3495" fg:w="1"/><text x="100.0786%" y="815.50"></text></g><g><title>`0x7FFAC8CB0ABA (1 samples, 0.03%)</title><rect x="99.8286%" y="789" width="0.0286%" height="15" fill="rgb(251,111,25)" fg:x="3495" fg:w="1"/><text x="100.0786%" y="799.50"></text></g><g><title>`0x7FFAC8DBC4C4 (1 samples, 0.03%)</title><rect x="99.8286%" y="773" width="0.0286%" height="15" fill="rgb(224,40,46)" fg:x="3495" fg:w="1"/><text x="100.0786%" y="783.50"></text></g><g><title>`0x7FFAC8CABC1A (1 samples, 0.03%)</title><rect x="99.8572%" y="837" width="0.0286%" height="15" fill="rgb(236,108,47)" fg:x="3496" fg:w="1"/><text x="100.1072%" y="847.50"></text></g><g><title>`0x7FFAC8CABFEC (1 samples, 0.03%)</title><rect x="99.8572%" y="821" width="0.0286%" height="15" fill="rgb(234,93,0)" fg:x="3496" fg:w="1"/><text x="100.1072%" y="831.50"></text></g><g><title>`0x7FFAC8CAD42C (1 samples, 0.03%)</title><rect x="99.8572%" y="805" width="0.0286%" height="15" fill="rgb(224,213,32)" fg:x="3496" fg:w="1"/><text x="100.1072%" y="815.50"></text></g><g><title>`0x7FFAC8CB06CC (1 samples, 0.03%)</title><rect x="99.8572%" y="789" width="0.0286%" height="15" fill="rgb(251,11,48)" fg:x="3496" fg:w="1"/><text x="100.1072%" y="799.50"></text></g><g><title>`0x7FFAC8CB11D7 (1 samples, 0.03%)</title><rect x="99.8572%" y="773" width="0.0286%" height="15" fill="rgb(236,173,5)" fg:x="3496" fg:w="1"/><text x="100.1072%" y="783.50"></text></g><g><title>`0x7FFAC8CB3B8B (1 samples, 0.03%)</title><rect x="99.8572%" y="757" width="0.0286%" height="15" fill="rgb(230,95,12)" fg:x="3496" fg:w="1"/><text x="100.1072%" y="767.50"></text></g><g><title>`0x7FFAC8D0A240 (2 samples, 0.06%)</title><rect x="99.8572%" y="869" width="0.0571%" height="15" fill="rgb(232,209,1)" fg:x="3496" fg:w="2"/><text x="100.1072%" y="879.50"></text></g><g><title>`0x7FFAC8CABB67 (2 samples, 0.06%)</title><rect x="99.8572%" y="853" width="0.0571%" height="15" fill="rgb(232,6,1)" fg:x="3496" fg:w="2"/><text x="100.1072%" y="863.50"></text></g><g><title>`0x7FFAC8CABCE1 (1 samples, 0.03%)</title><rect x="99.8857%" y="837" width="0.0286%" height="15" fill="rgb(210,224,50)" fg:x="3497" fg:w="1"/><text x="100.1357%" y="847.50"></text></g><g><title>`0x7FFAC8C77A1C (1 samples, 0.03%)</title><rect x="99.8857%" y="821" width="0.0286%" height="15" fill="rgb(228,127,35)" fg:x="3497" fg:w="1"/><text x="100.1357%" y="831.50"></text></g><g><title>`0x7FFAC8D0A281 (1 samples, 0.03%)</title><rect x="99.9143%" y="869" width="0.0286%" height="15" fill="rgb(245,102,45)" fg:x="3498" fg:w="1"/><text x="100.1643%" y="879.50"></text></g><g><title>`0x7FFAC8C96E07 (1 samples, 0.03%)</title><rect x="99.9143%" y="853" width="0.0286%" height="15" fill="rgb(214,1,49)" fg:x="3498" fg:w="1"/><text x="100.1643%" y="863.50"></text></g><g><title>`0x7FFAC8C96F2F (1 samples, 0.03%)</title><rect x="99.9143%" y="837" width="0.0286%" height="15" fill="rgb(226,163,40)" fg:x="3498" fg:w="1"/><text x="100.1643%" y="847.50"></text></g><g><title>`0x7FFAC8C96F2F (1 samples, 0.03%)</title><rect x="99.9143%" y="821" width="0.0286%" height="15" fill="rgb(239,212,28)" fg:x="3498" fg:w="1"/><text x="100.1643%" y="831.50"></text></g><g><title>`0x7FFAC8C96EF5 (1 samples, 0.03%)</title><rect x="99.9143%" y="805" width="0.0286%" height="15" fill="rgb(220,20,13)" fg:x="3498" fg:w="1"/><text x="100.1643%" y="815.50"></text></g><g><title>`0x7FFAC8CB04DB (1 samples, 0.03%)</title><rect x="99.9143%" y="789" width="0.0286%" height="15" fill="rgb(210,164,35)" fg:x="3498" fg:w="1"/><text x="100.1643%" y="799.50"></text></g><g><title>`0x7FFAC8CB0245 (1 samples, 0.03%)</title><rect x="99.9143%" y="773" width="0.0286%" height="15" fill="rgb(248,109,41)" fg:x="3498" fg:w="1"/><text x="100.1643%" y="783.50"></text></g><g><title>`0x7FFAC8CAFD7D (1 samples, 0.03%)</title><rect x="99.9143%" y="757" width="0.0286%" height="15" fill="rgb(238,23,50)" fg:x="3498" fg:w="1"/><text x="100.1643%" y="767.50"></text></g><g><title>`0x7FFAC8DBC944 (1 samples, 0.03%)</title><rect x="99.9143%" y="741" width="0.0286%" height="15" fill="rgb(211,48,49)" fg:x="3498" fg:w="1"/><text x="100.1643%" y="751.50"></text></g><g><title>`0x7FFAC8C96D1A (1 samples, 0.03%)</title><rect x="99.9429%" y="837" width="0.0286%" height="15" fill="rgb(223,36,21)" fg:x="3499" fg:w="1"/><text x="100.1929%" y="847.50"></text></g><g><title>`0x7FFAC8C97BDC (1 samples, 0.03%)</title><rect x="99.9429%" y="821" width="0.0286%" height="15" fill="rgb(207,123,46)" fg:x="3499" fg:w="1"/><text x="100.1929%" y="831.50"></text></g><g><title>`0x7FFAC8C98830 (1 samples, 0.03%)</title><rect x="99.9429%" y="805" width="0.0286%" height="15" fill="rgb(240,218,32)" fg:x="3499" fg:w="1"/><text x="100.1929%" y="815.50"></text></g><g><title>`0x7FFAC52DDE8B (1 samples, 0.03%)</title><rect x="99.9429%" y="789" width="0.0286%" height="15" fill="rgb(252,5,43)" fg:x="3499" fg:w="1"/><text x="100.1929%" y="799.50"></text></g><g><title>`0x7FFAC52DDCDA (1 samples, 0.03%)</title><rect x="99.9429%" y="773" width="0.0286%" height="15" fill="rgb(252,84,19)" fg:x="3499" fg:w="1"/><text x="100.1929%" y="783.50"></text></g><g><title>`0x7FFAC8D44604 (1 samples, 0.03%)</title><rect x="99.9429%" y="757" width="0.0286%" height="15" fill="rgb(243,152,39)" fg:x="3499" fg:w="1"/><text x="100.1929%" y="767.50"></text></g><g><title>all (3,501 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(234,160,15)" fg:x="0" fg:w="3501"/><text x="0.2500%" y="943.50"></text></g><g><title>`0x7FFAC8D4B1EE (16 samples, 0.46%)</title><rect x="99.5430%" y="917" width="0.4570%" height="15" fill="rgb(237,34,20)" fg:x="3485" fg:w="16"/><text x="99.7930%" y="927.50"></text></g><g><title>`0x7FFAC8D798FB (16 samples, 0.46%)</title><rect x="99.5430%" y="901" width="0.4570%" height="15" fill="rgb(229,97,13)" fg:x="3485" fg:w="16"/><text x="99.7930%" y="911.50"></text></g><g><title>`0x7FFAC8D08540 (16 samples, 0.46%)</title><rect x="99.5430%" y="885" width="0.4570%" height="15" fill="rgb(234,71,50)" fg:x="3485" fg:w="16"/><text x="99.7930%" y="895.50"></text></g><g><title>`0x7FFAC8D0A349 (2 samples, 0.06%)</title><rect x="99.9429%" y="869" width="0.0571%" height="15" fill="rgb(253,155,4)" fg:x="3499" fg:w="2"/><text x="100.1929%" y="879.50"></text></g><g><title>`0x7FFAC8C96D46 (2 samples, 0.06%)</title><rect x="99.9429%" y="853" width="0.0571%" height="15" fill="rgb(222,185,37)" fg:x="3499" fg:w="2"/><text x="100.1929%" y="863.50"></text></g><g><title>`0x7FFAC8C96D46 (1 samples, 0.03%)</title><rect x="99.9714%" y="837" width="0.0286%" height="15" fill="rgb(251,177,13)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="847.50"></text></g><g><title>`0x7FFAC8C96D1A (1 samples, 0.03%)</title><rect x="99.9714%" y="821" width="0.0286%" height="15" fill="rgb(250,179,40)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="831.50"></text></g><g><title>`0x7FFAC8C97BDC (1 samples, 0.03%)</title><rect x="99.9714%" y="805" width="0.0286%" height="15" fill="rgb(242,44,2)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="815.50"></text></g><g><title>`0x7FFAC8C98830 (1 samples, 0.03%)</title><rect x="99.9714%" y="789" width="0.0286%" height="15" fill="rgb(216,177,13)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="799.50"></text></g><g><title>`0x7FFAC6496E26 (1 samples, 0.03%)</title><rect x="99.9714%" y="773" width="0.0286%" height="15" fill="rgb(216,106,43)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="783.50"></text></g><g><title>`0x7FFAC64FAD56 (1 samples, 0.03%)</title><rect x="99.9714%" y="757" width="0.0286%" height="15" fill="rgb(216,183,2)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="767.50"></text></g><g><title>`0x7FFAC6516FE7 (1 samples, 0.03%)</title><rect x="99.9714%" y="741" width="0.0286%" height="15" fill="rgb(249,75,3)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="751.50"></text></g><g><title>`0x7FFAC649423B (1 samples, 0.03%)</title><rect x="99.9714%" y="725" width="0.0286%" height="15" fill="rgb(219,67,39)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="735.50"></text></g><g><title>`0x7FFAC64F6225 (1 samples, 0.03%)</title><rect x="99.9714%" y="709" width="0.0286%" height="15" fill="rgb(253,228,2)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="719.50"></text></g><g><title>`0x7FFAC66A2446 (1 samples, 0.03%)</title><rect x="99.9714%" y="693" width="0.0286%" height="15" fill="rgb(235,138,27)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="703.50"></text></g><g><title>`0x7FFAC8C79B30 (1 samples, 0.03%)</title><rect x="99.9714%" y="677" width="0.0286%" height="15" fill="rgb(236,97,51)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="687.50"></text></g><g><title>`0x7FFAC8CB5CA0 (1 samples, 0.03%)</title><rect x="99.9714%" y="661" width="0.0286%" height="15" fill="rgb(240,80,30)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="671.50"></text></g><g><title>`0x7FFAC8CB5E94 (1 samples, 0.03%)</title><rect x="99.9714%" y="645" width="0.0286%" height="15" fill="rgb(230,178,19)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="655.50"></text></g><g><title>`0x7FFAC8C9FB26 (1 samples, 0.03%)</title><rect x="99.9714%" y="629" width="0.0286%" height="15" fill="rgb(210,190,27)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="639.50"></text></g><g><title>`0x7FFAC8C9FF89 (1 samples, 0.03%)</title><rect x="99.9714%" y="613" width="0.0286%" height="15" fill="rgb(222,107,31)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="623.50"></text></g><g><title>`0x7FFAC8D7FDA1 (1 samples, 0.03%)</title><rect x="99.9714%" y="597" width="0.0286%" height="15" fill="rgb(216,127,34)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="607.50"></text></g><g><title>`0x7FFAC8D7FE28 (1 samples, 0.03%)</title><rect x="99.9714%" y="581" width="0.0286%" height="15" fill="rgb(234,116,52)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="591.50"></text></g><g><title>`0x7FFAC8D8688C (1 samples, 0.03%)</title><rect x="99.9714%" y="565" width="0.0286%" height="15" fill="rgb(222,124,15)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="575.50"></text></g><g><title>`0x7FFAC8D86BE3 (1 samples, 0.03%)</title><rect x="99.9714%" y="549" width="0.0286%" height="15" fill="rgb(231,179,28)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="559.50"></text></g><g><title>`0x7FFAC8D89614 (1 samples, 0.03%)</title><rect x="99.9714%" y="533" width="0.0286%" height="15" fill="rgb(226,93,45)" fg:x="3500" fg:w="1"/><text x="100.2214%" y="543.50"></text></g></svg></svg>